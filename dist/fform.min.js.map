{"version":3,"sources":["webpack://fform/webpack/universalModuleDefinition","webpack://fform/webpack/bootstrap","webpack://fform/./src/commonLib.tsx","webpack://fform/./src/stateLib.tsx","webpack://fform/./src/api.tsx","webpack://fform/./src/fform.tsx","webpack://fform/./node_modules/react/index.js","webpack://fform/./node_modules/react/cjs/react.production.min.js","webpack://fform/./node_modules/object-assign/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isUndefined","isNumber","isInteger","Math","floor","isString","isArray","Array","isObject","isMergeable","isFunction","toArray","val","toString","deArray","keepArray","length","objKeys","keys","objKeysNSymb","obj","concat","getOwnPropertySymbols","_typeof","iterator","constructor","is","x","y","push2array","array","vals","push","makeSlice","pathValues","path","setIn","hasIn","state","pathes","j","e","result","getIn","paths","res","track","mergeState","source","options","fn","noSymbol","SymbolDelete","del","diff","replace","arrays","forceReplace","changes","undefined","recusion","isSourceArray","isStateArray","stateKeys","srcKeys","changedObjects","forEach","indexOf","keyTrack","changedObjKeys","changesKeys","assign","isEqual","objA","objB","symbol","keysA","keysB","skipKeys","deepKeys","deep","asNumber","test","Number","valid","isNaN","memoize","cache","Map","args","newArgs","last","pop","has","set","apply","this","moveArrayElems","arr","from","to","elem","delIn","split","newPath","slice","newObj","merge","getCreateIn","a","b","opts","all","obj2merge","reduce","prev","next","commonLib_1","commonLib_2","api_1","SymData","for","SymDataMapTree","SymDataMap","SymReset","SymClear","SymDelete","types","any","null","boolean","number","integer","string","empty","freeze","Macros","branchKeys","branch","isSelfManaged","fData","type","filter","v","schema","UPDATABLE","item","_a","macros","_b","rest","__rest","getUpdValue","update","mergeArrayObj","replaceArrayObj","updateCurrentPROC","setOneOf","updatePROC","makeNUpdate","arrayItem","op","opVal","parseInt","min","arrayStart","getSchemaPart","oneOfFromState","max","stateObject","arrayItems","currentObject","updObj","maps2disable","maps2enable","clearBinded","getBindedMaps2update","map","emitter","[object Object]","trueIfLength","setDataMapInState","mergeUPD_PROC","switch","keyPath","object2PathValues","pathValue","recursivelyUpdate","setExtraStatus","prevVal","setStatus","Error","selfManaged","isTopPath","setCurrent","setValue","newItem","schemaStorage","oneOf","oneOfStructure","tmp","_canSet","additionalItemsSchema","items","ff_compiled","ff_oneOfSelector","normalizeFn","string2path","getOneOf","fullOneOf","getArrayItemSchemaPart","index","schemaPart","additionalItems","errorText","join","getSchemaByRef","$ref","combineSchemasINNER_PROCEDURE","allOf","combinedSchemas","schemaPartAsKey","derefAndMergeAllOf","restSchemaPart","oneOfPart","deref","properties","basicStatus","invalid","dirty","untouched","pending","touched","pristine","makeDataStorage","default","ff_params","ff_data","params","messages","status","required","title","ff_placeholder","placeholder","enum","ff_enumExten","enumExten","oneOfSelector","isSchemaSelfManaged","minItems","canAdd","isArrayCanAdd","getUniqKey","Date","now","random","makeStateBranch","getNSetOneOf","dataMapObjects","defaultValues","currentOneOf","schemaPartsOneOf","processFn","path2string","findOneOf","console","info","dataMap","ff_dataMap","action","$","dValue","getArrayItemData","ArrayItem","uniqKey","arrayOfRequired","field","arrayStartIndex","maxItems","Infinity","canUp","canDown","canDel","oneOfShemas","oneOfKeys","k","defaultUsed","schemaTypes","checkValue","updateMessagesPROC","defaultGroup","conv","group","text","itemNoPath","normalizePath","priority","messageData","texts","getCurrentPriority","currentPriority","priorities","groups","grKeys","setPriorityPROC","setValidStatusPROC","rehydrateState","api","updateState","dispatch","updates","forceValidation","promises","getState","prevState","oldCurrent","forceCheck","force","currentChanges","inital","setDirtyPROC","current","updateDirtyPROC","forceDirty","existKeys","setPristinePROC","noValidation","setIfNotDeeper","JSONValidator","currentValues","vPromises","modifiedValues","resolve","vAsync","clearDefaultMessagesInnerPROCEDURE","setUPDATABLE","recurseValidationInnerPROCEDURE","validatedValue","ff_validators","makeSynthField","validator","then","Promise","results","newValues","anSetState","catch","reason","reject","makeValidation","makeStateFromSchema","topPath","parts","warn","replaceValue","replace_UPDATABLE","updateItem","normalizeUpdate","updateNormalizationPROC","macro","getFromUPD","itemValue","splitValuePROC","start","end","oneOfStateFn","elemPath","mergeBranch","newKey","keyStatus","oldBranch","v1","v2","v3","v4","previousBranchData","oldStatusValue","newStatusValue","executeDataMapsPROC","recursivelyExecuteDataMaps","dataMaps","unset","dataMaps2execute","emitterPath","bindMap2emitter","fromItem","toItem","relTo","relativePath","fromPath","emitterBranch","bindedMaps","maps","NUpdate2string","pathTo","NpathTo","executedValue","initState","stateApi","pathData","wrapper","wrapOpts","setExecution","addUpdates","getData","tPath","getFromState","states","base","keyPathes","multiplyPath","*","string2NUpdate","symConv","anotherKey","_data","strReplace","","trim","#","sym2str","sym","str2sym","str","num2string","destination","flattenPath","isNPath","resolvePath","check","arrayAsValue","objMap","isMapFn","arg","_map","normalizeArgs","wrapFn","dataRequest","fnReq","substr","norm","dontAddValue","nFn","testArray","processProp","nextData","strictArrayResult","stateLib_1","exoPromise","done","self","promise","setFunction","execFunction","isPending","isResolved","isRejected","num","func","_CORES","WeakMap","fformCores","FFormStateManager","props","_listeners","setState","store","isCompiled","compileSchema","objects","_dispatch","_reducer","formReducer","_getState","_setState","_unsubscribe","subscribe","_handleChange","_currentState","_setStoreState","_getStoreState","getFRVal","nextState","delListener","idx","splice","FFormStateAPI","super","_noExec","_updates","_validation","noExec","execute","_setExecution","_newState","getActive","validate","getValue","nm","getDefaultValue","setMessages","msgPath","reset","clear","arrayAdd","arrayItemOps","setHidden","showOnly","wrapApi","wrapPath","forcePath","wrapped","getApi","_defferedTimerId","_promise","anUpdateState","_clearActions","clearTimeout","_execBatch","setTimeout","_resultPromises","formReducerValue","reducersFunction","storageState","formState","resultState","replaceFormState","fformObjects","schemaCompiler","objectResolver","f","testRef","refRes","$_ref","objectDerefer","_objects","obj2deref","restObj","objs2merge","^","obj2resolve","isRef","_objs","retResult","resolvedValue","refs","prefix","ref","lastIndexOf","convRef","every","react_1","FForm","Component","context","core","coreParams","_getCoreFromParams","parent","nextProps","_updateValues","addListener","_handleStateUpdate","_setRef","_submit","_getPath","FField","_root","prevProps","extData","_savedState","onStateChange","_savedValue","onChange","event","setPending","onSubmit","FFrormApiUpdate","getRef","ffield","fieldCache","_$useTag","UseTag","createElement","id","pFForm","getPath","FFormApi","FRefsGeneric","$refs","defaultName","$reactRef","_refProcess","_mappedData","_builderData","_rebuild","_blocks","_maps","_forceCacheUpdate","getBranch","$branch","_updateStateApi","wrapFns","_addErrPath","message","_set","_setValue","_cacheValue","liveUpdate","_cachedTimeout","_cached","liveValidate","valueSet","fPath","prevData","_updateCachedValue","data","mappedData","_setMappedData","forceUpdate","_isNotSelfManaged","ff_presets","ff_layout","resolveComponents","ff_components","ff_custom","$_maps","components","extractMaps","normalizeMaps","_widgets","_ff_components","block","_$widget","$_reactRef","staticProps","updateStage","_gData","updateProps","build","getDataObject","updateComponent","_build","FSectionWidget","_$cx","className","passCx","_cn","getMappedData","children","GenericWidget","passedReactRef","Widget","refObject","_children","_reactRef","_mapped","ch","$$typeof","_newWidget","tagRef","norender","_mapChildren","setRef2rest","emptyMock","isEmpty","getExten","label","JSON","stringify","UniversalViewer","inputProps","Autowidth","style","getComputedStyle","$FField","_elem","sizerStyle","width","scrollWidth","addWidth","minWidth","position","top","left","visibility","height","overflow","whiteSpace","customizeFields","sets","skip","rest2extract","nk","prePath","iterMaps","needUpdate","some","dataUpdates","classNames","styles","classes","argType","extend","widgets","FSection","_arrayStart","_focusField","_arrayKey2field","_objectLayouts","_arrayLayouts","_isArray","_setWidRef","normalizeLayout","counter","layout","$_fields","LayoutDefaultWidget","LayoutDefaultClass","mapsKeys","$layout","focusField","_getObjectKeys","makeLayouts_INNER_PROCEDURE","fields","fieldOrLayout","_makeFField","_getMappedData","fieldName","arrayKey","_arrayIndex2key","_updateMappedData","_getData","_getArrayPath","_getObjectPath","prevBranch","nextBranch","updatedArray","doUpdate","prevIndex","_getArrayField","fullUpdate","newMapped","oldMapped","_reorderArrayLayout","viewer","viewerProps","Generic","Input","Builder","mapped","Title","Body","Main","Message","Wrapper","WrapperW","ArrayItemMenu","ArrayItemBody","IBodyW","IBodyCN","IBodyRest","IMenuW","IMenuCN","IMenuRest","ItemMenu","disabled","buttonsProps","buttons","onClick","defaultOnClick","ButW","disabledCheck","ButCN","restBut","CheckboxNull","checked","nullValue","dual","indeterminate","className/hidden","nBase","onBlur","onFocus","autoFocus","readOnly","viewerProps/enumExten","className/required","children/0","htmlFor","className/title-viewer","textarea","viewer-inverted","className/title-viewer-inverted","integerNull","2","1","step","numberNull","booleanLeft","0","booleanNull","booleanNullLeft","select","multiselect","multiple","radio","checkboxes","3","5","radioNull","radioEmpty","hidden","autowidth","shrink","noArrayControls","noArrayButtons","inlineItems","inline","inlineTitle","inlineLayout","inlineArrayControls","arrayControls3but","noTitle","expand","bnnDual","format","iif","trueVal","falseVaL","not","equal","cnSP","restSP","getArrayStart","getProp","arrayOfEnum","enumVals","extenProps","enumInputs","containerProps","labelProps","enumInputProps","enumInputValue","eventValue","target","eventChecked","eventMultiple","selected","parseNumber","int","parseFloat","focus","blur","updCached","eventCheckboxes","at","updated","sort","radioClear","RadioSelector","Button","className/button-viewer","Submit","Reset","ArrayAddButton","ArrayDelButton","ArrayEmpty","first","up","down","expander","q","u","w","z","A","B","C","D","arguments","encodeURIComponent","g","h","framesToPop","aa","E","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","F","G","updater","H","I","isReactComponent","J","isPureReactComponent","K","currentDispatcher","L","M","__self","__source","N","defaultProps","_owner","O","P","Q","R","keyPrefix","count","S","V","T","U","=",":","escape","ca","da","W","ba","X","Children","only","createRef","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","render","lazy","_ctor","_status","_result","memo","compare","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","unstable_ConcurrentMode","unstable_Profiler","Y","Z","propIsEnumerable","propertyIsEnumerable","test1","String","getOwnPropertyNames","test2","fromCharCode","test3","letter","err","shouldUseNative","symbols","TypeError","toObject"],"mappings":"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","file":"fform.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fform\"] = factory();\n\telse\n\t\troot[\"fform\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","const isUndefined = (value: any): value is undefined => typeof value === 'undefined';\r\nconst isNumber = (value: any): value is number => typeof value === \"number\";\r\nconst isInteger = (value: any) => typeof value === \"number\" && (Math.floor(value) === value || value > 9007199254740992 || value < -9007199254740992);\r\nconst isString = (value: any): value is string => typeof value === 'string';\r\nconst isArray = Array.isArray;\r\nconst isObject = (value: any): value is anyObject => isMergeable(value) && !isArray(value);\r\nconst isFunction = (value: any): value is Function => typeof value === 'function';\r\n\r\nconst toArray = (value: any) => isArray(value) ? value : [value];\r\nconst deArray = (value: any, keepArray?: boolean) => !keepArray && isArray(value) && value.length == 1 ? value[0] : value;\r\n\r\nfunction isMergeable(val: any) {\r\n  const nonNullObject = val && typeof val === 'object';\r\n  return nonNullObject\r\n    && Object.prototype.toString.call(val) !== '[object RegExp]'\r\n    && Object.prototype.toString.call(val) !== '[object Date]'\r\n}\r\n\r\nconst objKeys = Object.keys;\r\nconst objKeysNSymb = (obj: any): any[] => (objKeys(obj) as any[]).concat(Object.getOwnPropertySymbols(obj));\r\n\r\n\r\nconst _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\"\r\n  ? (obj: any) => typeof obj\r\n  : (obj: any) => obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\r\nfunction is(x: any, y: any) {\r\n  // SameValue algorithm\r\n  if (x === y) { // Steps 1-5, 7-10\r\n    // Steps 6.b-6.e: +0 != -0\r\n    return x !== 0 || 1 / x === 1 / y;\r\n  } else {\r\n    // Step 6.a: NaN == NaN\r\n    return x !== x && y !== y;\r\n  }\r\n}\r\n\r\nfunction isEqual(objA: any, objB: any, options: IsEqualOptions = {}) {\r\n  if (is(objA, objB)) return true;\r\n\r\n  if ((isUndefined(objA) ? 'undefined' : _typeof(objA)) !== 'object' || objA === null || (isUndefined(objB) ? 'undefined' : _typeof(objB)) !== 'object' || objB === null)\r\n    return false;\r\n  const fn = options.symbol ? objKeysNSymb : objKeys;\r\n  const keysA = fn(objA);\r\n  const keysB = fn(objB);\r\n\r\n  if (keysA.length !== keysB.length) return false;\r\n\r\n  const {skipKeys = [], deepKeys = []} = options;\r\n  for (let i = 0; i < keysA.length; i++) {\r\n    if (~skipKeys.indexOf(keysA[i])) continue;     // if key is an skip key, skip comparison\r\n\r\n    if (options.deep || ~deepKeys.indexOf(keysA[i])) {\r\n      const result = isEqual(objA[keysA[i]], objB[keysA[i]], options);\r\n      if (!result) return false;\r\n    } else if (!objB.hasOwnProperty(keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\nfunction asNumber(value: any) {\r\n  if (value === \"\") return null;\r\n  if (/\\.$/.test(value)) return value; // \"3.\" can't really be considered a number even if it parses in js. The user is most likely entering a float.\r\n  if (/\\.0$/.test(value)) return value; // we need to return this as a string here, to allow for input like 3.07\r\n  const n = Number(value);\r\n  const valid = typeof n === \"number\" && !Number.isNaN(n);\r\n  if (/\\.\\d*0$/.test(value)) return value; // It's a number, that's cool - but we need it as a string so it doesn't screw with the user when entering dollar amounts or other values (such as those with specific precision or number of significant digits)\r\n  return valid ? n : value;\r\n}\r\n\r\n\r\nfunction memoize(fn: any) {\r\n  fn.cache = new Map();\r\n  return function (...args: any[]) {\r\n    let newArgs = [args.length].concat(args);\r\n    let cache = fn.cache;\r\n    let last = newArgs.pop();\r\n    for (let i = 0; i < newArgs.length; i++) {\r\n      cache.has(newArgs[i]) || cache.set(newArgs[i], new Map());\r\n      cache = cache.get(newArgs[i]);\r\n    }\r\n    if (!cache.has(last)) cache.set(last, fn.apply(this, args));\r\n    return cache.get(last);\r\n  };\r\n}\r\n\r\n\r\nfunction push2array(array: any[], ...vals: any[]): any {\r\n  for (let i = 0; i < vals.length; i++) {\r\n    if (isArray(vals[i])) array.push(...vals[i]);\r\n    else array.push(vals[i])\r\n  }\r\n  return array\r\n}\r\n\r\n\r\nfunction moveArrayElems(arr: any, from: number, to: number): Array<any> {\r\n  let length = arr.length;\r\n  if (length) {\r\n    from = (from % length + length) % length;\r\n    to = (to % length + length) % length;\r\n  }\r\n  let elem = arr[from];\r\n  for (let i = from; i < to; i++) arr[i] = arr [i + 1];\r\n  for (let i = from; i > to; i--) arr[i] = arr [i - 1];\r\n  arr[to] = elem;\r\n  return arr\r\n}\r\n\r\n//////////////////////////////\r\n//  object get/set functions\r\n/////////////////////////////\r\n\r\nfunction makeSlice(...pathValues: any[]): StateType {\r\n  let path: any[] = [];\r\n  for (let i = 0; i < pathValues.length - 1; i++) push2array(path, pathValues[i]);\r\n  const value = pathValues[pathValues.length - 1];\r\n  if (!path.length) return value;\r\n  return setIn({}, value, path);\r\n}\r\n\r\nfunction hasIn(state: any, ...pathes: any[]) {\r\n  if (pathes.length > 0) {\r\n    for (let i = 0; i < pathes.length; i++) {\r\n      let path = isArray(pathes[i]) ? pathes[i] : [pathes[i]];\r\n      for (let j = 0; j < path.length; j++) {\r\n        if (isUndefined(path[j])) continue;\r\n        try {\r\n          if (!state.hasOwnProperty(path[j])) return false;\r\n        } catch (e) {return false;}\r\n        state = state[path[j]]\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction setIn(state: any, value: any, ...pathes: any[]) {\r\n  let result = state;\r\n  let key;\r\n  if (pathes.length > 0) {\r\n    for (let i = 0; i < pathes.length; i++) {\r\n      let path = isArray(pathes[i]) ? pathes[i] : [pathes[i]];\r\n      for (let j = 0; j < path.length; j++) {\r\n        if (isUndefined(path[j])) continue;\r\n        if (!isUndefined(key)) {\r\n          if (!isMergeable(result[key])) result[key] = {};\r\n          result = result[key];\r\n        }\r\n        key = path[j];\r\n\r\n        // prev = result;\r\n        // result = result[key];\r\n      }\r\n    }\r\n  }\r\n  if (!isUndefined(key)) result[key] = value;\r\n  else return value;\r\n  return state;\r\n}\r\n\r\nfunction delIn(state: any, path: Path) {\r\n  // if (path[0] == '#') path = path.slice(1);\r\n  if (!path.length) return state;\r\n  const keys = typeof path[0] == 'string' ? path[0].split(',') : [path[0]];\r\n  const newPath = path.slice(1);\r\n  if (newPath.length) {\r\n    keys.forEach((key: any) => {\r\n      let newObj;\r\n      if (isMergeable(state[key])) newObj = delIn(state[key], newPath);\r\n      if (newObj && (newObj !== state[key])) state = merge(merge(state, makeSlice(key, undefined)), makeSlice(key, newObj))\r\n    })\r\n  } else {\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (state.hasOwnProperty(keys[i])) {\r\n        state = Object.assign({}, state);\r\n        break\r\n      }\r\n    }\r\n    for (let i = 0; i < keys.length; i++) delete state[keys[i]]\r\n  }\r\n  return state\r\n}\r\n\r\n\r\nfunction getIn(state: any, ...paths: any[]): any {\r\n  let res = state;\r\n  for (let i = 0; i < paths.length; i++) {\r\n    let track = paths[i];\r\n    if (typeof track === 'function') track = track(res);\r\n    if (!isArray(track)) track = [track];\r\n    for (let j = 0; j < track.length; j++) {\r\n      //if (isUndefined(res) ) return res;\r\n      if (!isMergeable(res)) return undefined;\r\n      if (isUndefined(track[j])) continue;\r\n      res = res[track[j]];\r\n    }\r\n  }\r\n  return res;\r\n};\r\n\r\n\r\nfunction getCreateIn(state: any, value: any, ...pathes: any[]) {\r\n  if (!hasIn(state, ...pathes)) setIn(state, value, ...pathes);\r\n  return getIn(state, ...pathes)\r\n}\r\n\r\n\r\n//////////////////////////////\r\n//  object merge functions\r\n/////////////////////////////\r\n\r\nfunction mergeState(state: any, source: any, options: MergeStateOptionsArgument = {}): MergeStateResult {\r\n  const fn = options.noSymbol ? objKeys : objKeysNSymb;\r\n  // let arrayMergeFn: any = false;\r\n  let {SymbolDelete, del, diff, replace, arrays} = options;\r\n  let forceReplace: any = replace;\r\n  if (typeof forceReplace !== 'function') {\r\n    if (!isMergeable(replace)) forceReplace = () => false;\r\n    else forceReplace = (path: any) => getIn(replace, path)\r\n  }\r\n  if (replace === true || forceReplace([], state, source) === true) return {state: source, changes: state !== source ? source : undefined};\r\n  //const mergeArrays = arrays != 'replace';\r\n  //const setLength = arrays == 'merge';\r\n  // if (typeof mergeArrays === 'function') arrayMergeFn = mergeArrays;\r\n  //const canMerge = mergeArrays === true ? isMergeable : isObject;\r\n  if (!isFunction(arrays)) arrays = undefined;\r\n\r\n  function recusion(state: any, source: any, track: Path = []): MergeStateResult {\r\n    const changes: any = {};\r\n    const isSourceArray = isArray(source);\r\n    if (!isMergeable(state)) {\r\n      state = isSourceArray ? [] : {};  // return only objects\r\n      if (isArray(state)) changes.length = 0;\r\n    }\r\n    const isStateArray = isArray(state);\r\n    if (!isMergeable(source)) return {state};  // merge only mergeable objects, may be throw here\r\n\r\n    if (isStateArray && isSourceArray) {\r\n      if (arrays) source = arrays(state, source, track);\r\n      if (state.length != source.length) changes.length = source.length;\r\n    }\r\n\r\n    let stateKeys = fn(state);\r\n    if (stateKeys.length == 0 && !del) {\r\n      if (!isStateArray && !isSourceArray)\r\n        return fn(source).length ? {state: source, changes: source} : {state};\r\n      if (isStateArray && isSourceArray) {\r\n        if (state.length == source.length && source.length == 0) return {state};\r\n        return (fn(source).length || source.length !== state.length) ? {state: source, changes: source} : {state};\r\n      }\r\n    }\r\n\r\n    let srcKeys = fn(source);\r\n\r\n    const changedObjects: any = {};\r\n    const result = (isStateArray ? [] : {});\r\n\r\n\r\n    if (diff) {\r\n      stateKeys.forEach(key => {\r\n        if (!~srcKeys.indexOf(key))\r\n          changes[key] = SymbolDelete;\r\n      });\r\n    }\r\n\r\n\r\n    srcKeys.forEach(key => {\r\n      if (del && source[key] === SymbolDelete) {\r\n        if (state.hasOwnProperty(key)) changes[key] = SymbolDelete;\r\n      } else {\r\n        let keyTrack = track.concat(key);\r\n        if (!isMergeable(source[key]) || !isMergeable(state[key]) || forceReplace(keyTrack, state[key], source[key]) === true) {\r\n          if (!state.hasOwnProperty(key) || !is(state[key], source[key])) changes[key] = source[key];\r\n        } else {\r\n          if (state[key] !== source[key]) {\r\n            let obj = recusion(state[key], source[key], keyTrack);\r\n            if (obj.changes)\r\n              changedObjects[key] = obj;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    let changedObjKeys = fn(changedObjects);\r\n    let changesKeys = fn(changes);\r\n    if (changesKeys.length == 0 && changedObjKeys.length == 0) return {state};\r\n    else {\r\n      Object.assign(result, state);\r\n      changesKeys.forEach(key => {\r\n        if (del && changes[key] === SymbolDelete || diff && !source.hasOwnProperty(key)) delete result[key];\r\n        else result[key] = changes[key];\r\n      });\r\n      changedObjKeys.forEach(key => {\r\n        result[key] = changedObjects[key].state;\r\n        changes[key] = changedObjects[key].changes\r\n      });\r\n      return {state: result, changes}\r\n    }\r\n  }\r\n\r\n  return recusion(state, source)\r\n}\r\n\r\nconst merge: any = (a: any, b: any, opts: MergeStateOptionsArgument = {}) => mergeState(a, b, opts).state;\r\n\r\n\r\nmerge.all = function (state: any, obj2merge: any[], options: MergeStateOptionsArgument = {}) {\r\n  if (obj2merge.length == 0) return state;  // no changes should be done\r\n  else return obj2merge.reduce((prev, next) => merge(prev, next, options), state);  // merge\r\n};\r\n\r\n\r\nexport {mergeState, merge, push2array, asNumber, isEqual, objKeys, objKeysNSymb, moveArrayElems, delIn, setIn, hasIn, getIn, getCreateIn, makeSlice, memoize, toArray, deArray};\r\nexport {isMergeable, isUndefined, isNumber, isInteger, isString, isObject, isArray, isFunction}\r\n\r\n","import {getCreateIn, setIn, hasIn, getIn, objKeys, moveArrayElems, makeSlice, memoize, merge, objKeysNSymb, push2array, toArray, deArray, mergeState} from \"./commonLib\";\r\nimport {isMergeable, isUndefined, isNumber, isInteger, isString, isArray, isObject, isFunction} from \"./commonLib\";\r\nimport {anSetState} from './api';\r\n\r\n/////////////////////////////////////////////\r\n//  Symbols\r\n/////////////////////////////////////////////\r\n\r\nconst SymData: any = Symbol.for('FFormData');\r\nconst SymDataMapTree: any = Symbol.for('FFormDataMapTree');\r\nconst SymDataMap: any = Symbol.for('FFormDataMap');\r\nconst SymReset: any = Symbol.for('FFormReset');\r\nconst SymClear: any = Symbol.for('FFormClear');\r\nconst SymDelete = undefined; // Symbol.for('FFormDelete'); // \r\n// const SymBranch: any = Symbol.for('FFormBranch');\r\n\r\n\r\n/////////////////////////////////////////////\r\n//  JSON types detector\r\n/////////////////////////////////////////////\r\n\r\nconst types: any = ['null', 'boolean', 'integer', 'number', 'string', 'array', 'object'];\r\ntypes.any = () => true;\r\ntypes.null = (value: any) => value === null;\r\ntypes.boolean = (value: any) => typeof value === \"boolean\";\r\ntypes.number = isNumber;// (value: any) => typeof value === \"number\";\r\ntypes.integer = isInteger; //(value: any) => typeof value === \"number\" && (Math.floor(value) === value || value > 9007199254740992 || value < -9007199254740992);\r\ntypes.string = isString; //(value: any) => typeof value === \"string\";\r\ntypes.array = isArray;\r\ntypes.object = isObject; //(value: any) => typeof value === \"object\" && value && !isArray(value);// isObject(value);  //\r\ntypes.empty = {'any': null, 'null': null, 'boolean': false, 'number': 0, 'integer': 0, 'string': '', array: Object.freeze([]), object: Object.freeze({})};\r\n\r\n\r\n/////////////////////////////////////////////\r\n//  Macros\r\n/////////////////////////////////////////////\r\n\r\nfunction getBindedMaps2update(branch: StateType, path: Path = []) {\r\n  const maps2disable: normalizedDataMapType[] = getIn(branch, SymDataMapTree, SymData) || [];\r\n  const maps2enable = maps2disable.map((map => merge(map, {emitter: path})));\r\n  let clearBinded: any = (maps2disable.length) ? {[SymDataMapTree]: {[SymData]: []}} : undefined\r\n  objKeys(branch).forEach(key => {\r\n    let result: any;\r\n    if (branch[key]) {\r\n      result = getBindedMaps2update(branch[key], path.concat(key));\r\n      push2array(maps2disable, result.maps2disable);\r\n      push2array(maps2enable, result.maps2enable);\r\n      if (result.clearBinded) {\r\n        if (!clearBinded) clearBinded = {};\r\n        clearBinded[key] = result.clearBinded;\r\n      }\r\n    }\r\n  });\r\n  return {maps2disable, maps2enable, clearBinded}\r\n}\r\n\r\nconst Macros: { [key: string]: any } = {};\r\n\r\nMacros.array = (state: StateType, schema: jsJsonSchema, UPDATABLE: PROCEDURE_UPDATABLE_Type, item: NormalizedUpdateType) => {\r\n  let {path, macros, value, [SymData]: sym, ...rest} = item as any;\r\n  let length = getUpdValue([UPDATABLE.update, state], path, SymData, 'length');\r\n  if (!isNumber(length)) return state;\r\n\r\n  if (isArray(item.value)) {\r\n    let mergeArrayObj: any = [];\r\n    let replaceArrayObj: any = {};\r\n    for (let i = 0; i < item.value.length; i++) {\r\n      mergeArrayObj[length + i] = item.value[i];\r\n      replaceArrayObj[length + i] = getIn(item.replace, i);\r\n    }\r\n    mergeArrayObj.length = length + item.value.length;\r\n    return updateCurrentPROC(state, UPDATABLE, mergeArrayObj, replaceArrayObj, path, item.setOneOf)\r\n  } else {\r\n    length += item.value || 1;\r\n    if (length < 0) length = 0;\r\n    return updatePROC(state, UPDATABLE, makeNUpdate(path, ['length'], length, false, rest));\r\n  }\r\n};\r\n\r\nMacros.arrayItem = (state: StateType, schema: jsJsonSchema, UPDATABLE: PROCEDURE_UPDATABLE_Type, item: NormalizedUpdateType) => {\r\n  let path = item.path;\r\n  let op = item.op;\r\n  let opVal = item.value || 0;\r\n  const from = parseInt(path.pop());\r\n  let to = from;\r\n  const min = arrayStart(getSchemaPart(schema, path, oneOfFromState(state))); // api.get(path.concat(SymData, 'array', 'arrayStartIndex'));\r\n  const length = getUpdValue([UPDATABLE.update, state], path, SymData, 'length');\r\n  const max = length - 1;\r\n  if (op == 'up') to--;\r\n  if (op == 'down') to++;\r\n  if (op == 'first') to = min;\r\n  if (op == 'last' || op == 'del') to = max;\r\n  if (op == 'move') to = opVal;\r\n  if (op == 'shift') to += opVal;\r\n  if (to < min) to = min;\r\n  if (to > max) to = max;\r\n\r\n  let stateObject = {};\r\n  let arrayItems = {};\r\n  let dataMaps = {};\r\n  let currentObject: any = {};\r\n  let updObj: any[] = [];\r\n  updObj[0] = getIn(UPDATABLE.update, path);\r\n  updObj[1] = getIn(UPDATABLE.update, SymData, 'current', path);\r\n  updObj[2] = getIn(UPDATABLE.replace, path);\r\n  updObj[3] = getIn(UPDATABLE.replace, SymData, 'current', path);\r\n\r\n\r\n  for (let i = Math.min(from, to); i <= Math.max(from, to); i++) {\r\n    stateObject[i] = getIn(state, path, i);\r\n    arrayItems[i] = stateObject[i][SymData].arrayItem; //delIn(stateObject[i][SymData].arrayItem, ['uniqId']); // save arrayItem values, except \"uniqId\"\r\n    //dataMaps[i] = stateObject[i][SymDataMapTree];\r\n    currentObject[i] = getIn(state, SymData, 'current', path, i);\r\n    updObj.forEach(obj => isMergeable(obj) && !obj.hasOwnProperty(i) && (obj[i] = SymClear));\r\n  }\r\n  stateObject = moveArrayElems(stateObject, from, to);\r\n  currentObject = moveArrayElems(currentObject, from, to);\r\n  const {maps2disable, maps2enable, clearBinded} = getBindedMaps2update(stateObject, path);\r\n  if (clearBinded) stateObject = merge(stateObject, clearBinded);\r\n  updObj.forEach(obj => {\r\n    if (!isMergeable(obj)) return;\r\n    moveArrayElems(obj, from, to);\r\n    for (let i = Math.min(from, to); i <= Math.max(from, to); i++) {\r\n      if (obj[i] === SymClear) delete obj[i];\r\n    }\r\n  });\r\n\r\n  objKeys(stateObject).forEach(i => {\r\n    stateObject[i] = merge(stateObject[i], makeSlice(SymData, 'arrayItem', arrayItems[i]), {replace: makeSlice(SymData, 'arrayItem', true)});\r\n    //stateObject[i] = merge(stateObject[i], makeSlice(SymDataMapTree, dataMaps[i]), {replace: makeSlice(SymDataMapTree, true)});\r\n  }); // restore arrayItem values and dataMap\r\n\r\n  // const length2test = 1 + item.path.length - (item.path[0] == '#' ? 1 : 0);  // length2test can be smaller because of leading '#' in item.path (replace function receives path without leading '#')\r\n  state = merge(state, makeSlice(path, stateObject), {replace: trueIfLength(item.path.length + 1)}); //(path: Path) => path.length === length2test});\r\n  state = merge(state, makeSlice(SymData, 'current', path, currentObject), {replace: trueIfLength(item.path.length + 3)});//(path: Path) => path.length === length2test + 2});\r\n  if (op == 'del') state = updatePROC(state, UPDATABLE, makeNUpdate(path, ['length'], max));\r\n  state = mergeUPD_PROC(state, UPDATABLE);\r\n  state = setDataMapInState(state, UPDATABLE, maps2disable, true);\r\n  state = setDataMapInState(state, UPDATABLE, maps2enable);\r\n  return state\r\n};\r\n\r\nMacros.switch = (state: StateType, schema: jsJsonSchema, UPDATABLE: PROCEDURE_UPDATABLE_Type, item: NormalizedUpdateType) => {\r\n  let keyPath = item[SymData] || [];\r\n  let switches = makeSlice(keyPath, item.value);\r\n  object2PathValues(switches).forEach(pathValue => state = recursivelyUpdate(state, schema, UPDATABLE, makeNUpdate(item.path, pathValue, pathValue.pop())));\r\n  return state\r\n};\r\n\r\nMacros.setExtraStatus = (state: StateType, schema: jsJsonSchema, UPDATABLE: PROCEDURE_UPDATABLE_Type, item: NormalizedUpdateType) => {\r\n  const keyPath = item[SymData] || [];\r\n  let prevVal = getUpdValue([UPDATABLE.update, state], item.path, SymData, keyPath);\r\n  let value = item.value > 0;\r\n  if (!prevVal == value) {\r\n    state = updatePROC(state, UPDATABLE, makeNUpdate(item.path, keyPath, value));\r\n    state = Macros.setStatus(state, schema, UPDATABLE, makeNUpdate(item.path, ['status', keyPath[keyPath.length - 1]], value ? 1 : -1));\r\n  }\r\n  return state\r\n};\r\n\r\nMacros.setStatus = (state: StateType, schema: jsJsonSchema, UPDATABLE: PROCEDURE_UPDATABLE_Type, item: NormalizedUpdateType) => {\r\n  const keyPath = item[SymData] || [];\r\n  if (keyPath.length > 2) return Macros.setExtraStatus(state, schema, UPDATABLE, item);\r\n  let op = keyPath[1];\r\n  if (!op) return state;\r\n  if (op == 'valid' || op == 'pristine' || op == 'touched') throw new Error('Setting \"' + op + '\" directly is not allowed');\r\n\r\n  let prevVal = getUpdValue([UPDATABLE.update, state], item.path, SymData, keyPath);\r\n  const selfManaged = isSelfManaged(state, item.path);\r\n\r\n  if (op == 'untouched' && prevVal == 0 && !selfManaged) return state;  // stick \"untouched\" to zero for objects and arrays\r\n  let value = prevVal + item.value;\r\n  if (selfManaged && value > 1) value = 1;\r\n  if (value < 0) value = 0;\r\n  state = updatePROC(state, UPDATABLE, makeNUpdate(item.path, ['status', op], value));\r\n  if (!isTopPath(item.path) && (!prevVal != !value)) //(prevVal && !value || !prevVal && value)) \r\n    state = Macros.setStatus(state, schema, UPDATABLE, makeNUpdate(item.path.slice(0, -1), keyPath, value > 0 ? 1 : -1));\r\n\r\n  return state\r\n};\r\n\r\nMacros.setCurrent = (state: StateType, schema: jsJsonSchema, UPDATABLE: PROCEDURE_UPDATABLE_Type, item: NormalizedUpdateType) => {\r\n  return updateCurrentPROC(state, UPDATABLE, item.value, item.replace, item.path, item.setOneOf)\r\n};\r\n\r\nMacros.setOneOf = (state: StateType, schema: jsJsonSchema, UPDATABLE: PROCEDURE_UPDATABLE_Type, item: NormalizedUpdateType) => {\r\n  let oldOneOf = getIn(state, item.path, SymData, 'oneOf');\r\n  if (oldOneOf == item.value) {\r\n    if (!isUndefined(item.setValue)) state = updateCurrentPROC(state, UPDATABLE, item.setValue, false, item.path);\r\n    return state;\r\n  }\r\n  const {macros, ...newItem} = item;\r\n  newItem[SymData] = ['oneOf'];\r\n  if (isUndefined(newItem.setValue)) {\r\n    state = mergeUPD_PROC(state, UPDATABLE);\r\n    newItem.setValue = getIn(state, SymData, 'current', item.path);\r\n  }\r\n  return updatePROC(state, UPDATABLE, newItem);\r\n};\r\n\r\n\r\n/////////////////////////////////////////////\r\n//  Macros utils\r\n/////////////////////////////////////////////\r\n\r\n\r\nfunction recursivelyUpdate(state: StateType, schema: jsJsonSchema, UPDATABLE: PROCEDURE_UPDATABLE_Type, item: NormalizedUpdateType) {\r\n  const branch = getIn(state, item.path);\r\n  const keys = branchKeys(branch);\r\n  if (item.value == SymReset && item[SymData][0] == 'status') {\r\n    let i = {...item};\r\n    i.value = item[SymData][1] == 'untouched' ? isSelfManaged(branch) ? 1 : keys.length : 0;\r\n    state = updatePROC(state, UPDATABLE, i);\r\n  } else state = updatePROC(state, UPDATABLE, item);\r\n  keys.forEach(key => state = recursivelyUpdate(state, schema, UPDATABLE, merge(item, {path: item.path.concat(key)})));\r\n  return state\r\n};\r\n\r\n\r\nfunction branchKeys(branch: StateType) {\r\n  let keys: string[] = [];\r\n  if (isSelfManaged(branch)) return keys;\r\n  if (branch[SymData].fData.type == 'array') for (let j = 0; j < getIn(branch, SymData, 'length'); j++) keys.push(j.toString());\r\n  else keys = objKeys(branch).filter(v => v);\r\n  return keys;\r\n}\r\n\r\n\r\n/////////////////////////////////////////////\r\n//      Schema processing functions\r\n/////////////////////////////////////////////\r\n\r\nconst schemaStorage = memoize(function (schema: jsJsonSchema) { // object that used to store and cache data for schema without modifying schema itself  \r\n  return {};\r\n});\r\n\r\nfunction oneOfFromState(state: StateType | Function): (path: Path) => oneOfStructureType {\r\n  return (path: Path) => {\r\n    let s = getIn(isFunction(state) ? state() : state, path, SymData);\r\n    return {oneOf: getIn(s, 'oneOf'), type: getIn(s, 'fData', 'type')}\r\n  };\r\n}\r\n\r\nfunction oneOfStructure(state: StateType | Function, path: Path) { // makes object than copies the structure of state[SymData].oneOf limited to path\r\n  if (typeof state == 'function') state = state();\r\n  const result = {};\r\n  let tmp = result;\r\n  setIn(tmp, getIn(state, SymData, 'oneOf'), SymData, 'oneOf');\r\n  setIn(tmp, getIn(state, SymData, 'fData', 'type'), SymData, 'type');\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (isUndefined(path[i]) || path[i] === '') continue;\r\n    tmp[path[i]] = {};\r\n    tmp = tmp[path[i]];\r\n    state = getIn(state, path[i]);\r\n    setIn(tmp, getIn(state, SymData, 'oneOf'), SymData, 'oneOf');\r\n    setIn(tmp, getIn(state, SymData, 'fData', 'type'), SymData, 'type');\r\n  }\r\n  //return result\r\n  const fn = function (path: Path, oneOf?: oneOfStructureType) {return isUndefined(oneOf) ? getIn(result, path, SymData) : setIn(result, oneOf, path, SymData)};\r\n  fn._canSet = true;\r\n  return fn\r\n}\r\n\r\n\r\nconst additionalItemsSchema = memoize(function (items: jsJsonSchema[]): jsJsonSchema {\r\n  return {\r\n    ff_compiled: true,\r\n    oneOf: items,\r\n    ff_oneOfSelector: normalizeFn(function () {\r\n      return string2path(this.path).pop() % items.length;\r\n    })\r\n  }\r\n});\r\n\r\nfunction getSchemaPart(schema: jsJsonSchema, path: Path, getOneOf: (path: Path) => oneOfStructureType, fullOneOf?: boolean): jsJsonSchema {\r\n\r\n  function getArrayItemSchemaPart(index: number, schemaPart: jsJsonSchema): jsJsonSchema {\r\n    let items: jsJsonSchema[] = [];\r\n    if (schemaPart.items) {\r\n      if (!isArray(schemaPart.items)) return schemaPart.items;\r\n      else items = schemaPart.items;\r\n    }\r\n    if (index < items.length) return items[index];\r\n    else {\r\n      if (schemaPart.additionalItems !== false) {\r\n        if (schemaPart.additionalItems && schemaPart.additionalItems !== true) return schemaPart.additionalItems;\r\n        return additionalItemsSchema(items);\r\n        //return items[index % items.length]\r\n      }\r\n    }\r\n    throw new Error(errorText + path.join('/'));\r\n  }\r\n\r\n  function getSchemaByRef(schema: jsJsonSchema, $ref: string) {\r\n    const path = string2path($ref);\r\n    if ($ref[0] == '#') return getIn(schema, path); // Extract and use the referenced definition if we have it.\r\n    throw new Error(`Can only ref to #`);// No matching definition found, that's an error (bogus schema?)\r\n  }\r\n\r\n  function deref(schema: jsJsonSchema, schemaPart: jsJsonSchema) {\r\n    while (schemaPart.$ref) schemaPart = getSchemaByRef(schema, schemaPart.$ref);\r\n    return schemaPart;\r\n  }\r\n\r\n  function combineSchemasINNER_PROCEDURE(schemaPart: jsJsonSchema): jsJsonSchema | jsJsonSchema[] {\r\n    if (schemaPart.$ref || schemaPart.allOf || schemaPart.oneOf) {\r\n      if (combinedSchemas.get(schemaPart)) schemaPart = combinedSchemas.get(schemaPart);\r\n      else {\r\n        let schemaPartAsKey = schemaPart;\r\n        schemaPart = derefAndMergeAllOf(schema, schemaPart);  // merge allOf, with derefing it and merge with schemaPart\r\n        if (schemaPart.oneOf) {\r\n          let {oneOf, ...restSchemaPart} = schemaPart;\r\n          (schemaPart as any) = oneOf.map((oneOfPart) => merge(derefAndMergeAllOf(schema, oneOfPart), restSchemaPart, {array: 'replace'})) // deref every oneOf, merge allOf in there, and merge with schemaPart\r\n        }\r\n        combinedSchemas.set(schemaPartAsKey, schemaPart);\r\n      }\r\n    }\r\n    return schemaPart;\r\n  }\r\n\r\n  function derefAndMergeAllOf(schema: jsJsonSchema, schemaPart: jsJsonSchema) {\r\n    schemaPart = deref(schema, schemaPart);\r\n    if (schemaPart.allOf) {\r\n      let {allOf, ...restSchemaPart} = schemaPart;\r\n      let result;\r\n      for (let i = 0; i < allOf.length; i++) {\r\n        result = merge(result, derefAndMergeAllOf(schema, allOf[i]), {array: 'replace'})\r\n      }\r\n      schemaPart = merge(result, restSchemaPart)\r\n    }\r\n    return schemaPart\r\n  }\r\n\r\n\r\n  const errorText = 'Schema path not found: ';\r\n  let schemaPart: jsJsonSchema | jsJsonSchema[] = schema;\r\n  const combinedSchemas = getCreateIn(schemaStorage(schema), new Map(), 'combinedSchemas');\r\n  let type;\r\n  for (let i = path[0] == '#' ? 1 : 0; i < path.length; i++) {\r\n    if (!schemaPart) throw new Error(errorText + path.join('/'));\r\n    schemaPart = combineSchemasINNER_PROCEDURE(schemaPart);\r\n    let {oneOf, type} = getOneOf(path.slice(0, i));\r\n    if (isArray(schemaPart)) schemaPart = schemaPart[oneOf || 0];\r\n\r\n    if (type == 'array') {\r\n      if (isNaN(parseInt(path[i]))) throw new Error(errorText + path.join('/'));\r\n      schemaPart = getArrayItemSchemaPart(path[i], schemaPart)\r\n    } else {\r\n      if (schemaPart.properties && schemaPart.properties[path[i]]) schemaPart = schemaPart.properties[path[i]];\r\n      else throw new Error(errorText + path.join('/'));\r\n    }\r\n  }\r\n  schemaPart = combineSchemasINNER_PROCEDURE(schemaPart);\r\n  if (fullOneOf) return schemaPart as any;\r\n  if (isArray(schemaPart)) schemaPart = schemaPart[getOneOf(path).oneOf || 0];\r\n  return schemaPart;\r\n}\r\n\r\nconst arrayStart = memoize(function (schemaPart: jsJsonSchema) {\r\n    if (!isArray(schemaPart.items)) return 0;\r\n    if (schemaPart.additionalItems === false) return schemaPart.items.length;\r\n    if (typeof schemaPart.additionalItems === 'object') return schemaPart.items.length;\r\n    if (schemaPart.items.length == 0) return 0;\r\n    return schemaPart.items.length - 1;\r\n  }\r\n);\r\n\r\nconst basicStatus = {invalid: 0, dirty: 0, untouched: 1, pending: 0, valid: true, touched: false, pristine: true};\r\n\r\nconst makeDataStorage = memoize(function (schemaPart: jsJsonSchema, oneOf: number, type: string, value: any = schemaPart.default) {\r\n  // const x = schemaPart.x || ({} as FFSchemaExtensionType);\r\n  const {ff_params = {}, ff_data = {}} = schemaPart;\r\n  const result: any = Object.assign({params: ff_params}, ff_data);\r\n  if (!isObject(result.messages)) result.messages = {};\r\n\r\n  if (isUndefined(value)) value = types.empty[type || 'any'];\r\n\r\n  result.oneOf = oneOf;\r\n  result.status = basicStatus;\r\n  if (!isObject(result.fData)) result.fData = {};\r\n  const fData = result.fData;\r\n  fData.type = type;\r\n  fData.required = schemaPart.required;\r\n  if (schemaPart.title) fData.title = schemaPart.title;\r\n  if (schemaPart.ff_placeholder) fData.placeholder = schemaPart.ff_placeholder;\r\n  if (schemaPart.enum) fData.enum = schemaPart.enum;\r\n  if (schemaPart.ff_enumExten) fData.enumExten = schemaPart.ff_enumExten;\r\n  if (schemaPart.ff_oneOfSelector) fData.oneOfSelector = true;\r\n\r\n  if (isSchemaSelfManaged(schemaPart, type)) result.value = value;\r\n  else delete result.value;\r\n  let untouched = 1;\r\n  if (type == 'array') {\r\n    result.length = getIn(value, 'length') || 0;\r\n    if (!isUndefined(schemaPart.minItems) && result.length < schemaPart.minItems) result.length = schemaPart.minItems;\r\n    result.fData.canAdd = isArrayCanAdd(schemaPart, result.length);\r\n    untouched = result.length;\r\n  } else if (type == 'object') untouched = objKeys(schemaPart.properties || {}).length;\r\n  if (untouched != 1) result.status = {...result.status, untouched};\r\n  return result;\r\n});\r\n\r\n\r\nfunction getUniqKey() {return Date.now().toString(36) + Math.random().toString(36) }\r\n\r\nfunction makeStateBranch(schema: jsJsonSchema, getNSetOneOf: (path: Path, upd?: oneOfStructureType) => oneOfStructureType, path: Path = [], value?: any) { //: { state: StateType, dataMap: StateType } {\r\n  const result = {};\r\n  const dataMapObjects: normalizedDataMapType[] = [];\r\n  let defaultValues: any;\r\n  let currentOneOf = (getNSetOneOf(path) || {}).oneOf;\r\n  const schemaPartsOneOf = toArray(getSchemaPart(schema, path, getNSetOneOf, true));\r\n  if (isUndefined(currentOneOf)) {\r\n    const ff_oneOfSelector = schemaPartsOneOf[currentOneOf || 0].ff_oneOfSelector;\r\n    if (ff_oneOfSelector) {\r\n      let setOneOf = processFn.call({path: path2string(path)}, ff_oneOfSelector, value, false);\r\n      if (isArray(setOneOf)) setOneOf = setOneOf[0];\r\n      currentOneOf = setOneOf;\r\n      //schemaPart = schemaPartsOneOf[oneOf];\r\n    }\r\n  }\r\n  let {schemaPart, oneOf, type} = findOneOf(schemaPartsOneOf, value, currentOneOf);\r\n\r\n  if (isUndefined(schemaPart) || !isUndefined(currentOneOf) && currentOneOf != oneOf) { // value type is not that currentOneOf supports \r\n    console.info('Passed value: \"' + value + '\" is not supported by schema.type in path \"' + path.join('/') + '\" and oneOfIndex \"' + currentOneOf + '\". Reset value to default.\\n');\r\n    value = (schemaPartsOneOf)[currentOneOf || 0].default; // so, reset value to default, cause keeping oneOf is in prior (if currentOneOf exists, otherwise oneOf is changed)\r\n    const tmp = findOneOf(schemaPartsOneOf, value, currentOneOf);\r\n    schemaPart = tmp.schemaPart;\r\n    oneOf = tmp.oneOf;\r\n    type = tmp.type;\r\n  }\r\n  push2array(dataMapObjects, normalizeDataMap(schemaPart.ff_dataMap || [], path));\r\n  result[SymDataMap] = {};\r\n  result[SymData] = makeDataStorage(schemaPart, oneOf, type, value);\r\n  getNSetOneOf(path, {oneOf, type});\r\n\r\n  if ((result[SymData].hasOwnProperty('value'))) defaultValues = result[SymData].value;\r\n  else {\r\n    if (type == 'array') {\r\n      defaultValues = [];\r\n      defaultValues.length = result[SymData].length;\r\n      for (let i = 0; i < defaultValues.length; i++) {\r\n        let {state: branch, dataMap, defaultValues: dValue} = makeStateBranch(schema, getNSetOneOf, path.concat(i), getIn(isUndefined(value) ? schemaPart.default : value, i));\r\n        defaultValues[i] = dValue;\r\n        push2array(dataMapObjects, dataMap);\r\n        branch = merge(branch, {[SymData]: {arrayItem: getArrayItemData(schemaPart, i, defaultValues.length)}}, {replace: {[SymData]: {ArrayItem: true}}});\r\n        branch = merge(branch, {[SymData]: {params: {uniqKey: getUniqKey()}}});\r\n        result[i] = branch;\r\n\r\n      }\r\n    } else if (type == 'object') {\r\n      defaultValues = {};\r\n      let arrayOfRequired = result[SymData].fData.required;\r\n      arrayOfRequired = isArray(arrayOfRequired) && arrayOfRequired.length && arrayOfRequired;\r\n      objKeys(schemaPart.properties || {}).forEach(field => {\r\n        let {state: branch, dataMap, defaultValues: dValue} = makeStateBranch(schema, getNSetOneOf, path.concat(field), getIn(isUndefined(value) ? schemaPart.default : value, field));\r\n        defaultValues[field] = dValue;\r\n        push2array(dataMapObjects, dataMap);\r\n        if (arrayOfRequired && (~arrayOfRequired.indexOf(field))) branch = merge(branch, {[SymData]: {fData: {required: true}}});\r\n        result[field] = branch;\r\n      });\r\n    }\r\n    if (value) defaultValues = merge(value, defaultValues, {replace: trueIfLength(1)})\r\n  }\r\n\r\n  return {state: result, defaultValues, dataMap: dataMapObjects}\r\n}\r\n\r\nfunction isArrayCanAdd(schemaPart: jsJsonSchema, length: number) {\r\n  const arrayStartIndex = arrayStart(schemaPart); //; dataItem.array.arrayStartIndex;\r\n  const minItems = schemaPart.minItems || 0;\r\n  return (schemaPart.additionalItems !== false || length < arrayStartIndex) && (length < (schemaPart.maxItems || Infinity))\r\n}\r\n\r\nfunction getArrayItemData(schemaPart: jsJsonSchema, index: number, length: number) {\r\n  let result: { [key: string]: boolean } = {};\r\n  const arrayStartIndex = arrayStart(schemaPart); //; dataItem.array.arrayStartIndex;\r\n  const minItems = schemaPart.minItems || 0;\r\n  // if (index >= arrayStartIndex) {\r\n  result.canUp = arrayStartIndex < index;\r\n  result.canDown = (arrayStartIndex <= index) && (index < length - 1);\r\n  // } \r\n  // if (index >= minItems) \r\n  result.canDel = index >= Math.min(arrayStartIndex, length - 1);\r\n  return result\r\n}\r\n\r\nfunction isSelfManaged(state: StateType, ...pathes: any[]) {\r\n  return hasIn(state, ...pathes, SymData, 'value')\r\n}\r\n\r\nfunction isSchemaSelfManaged(schemaPart: jsJsonSchema, type: string) {\r\n  return type !== 'array' && type !== 'object' || getIn(schemaPart, 'ff_managed')\r\n}\r\n\r\nfunction findOneOf(oneOfShemas: any, value?: any, currentOneOf?: number) {\r\n  if (!isArray(oneOfShemas)) oneOfShemas = [oneOfShemas];\r\n  const oneOfKeys = oneOfShemas.map((v: any, i: number) => i);\r\n  if (currentOneOf) moveArrayElems(oneOfKeys, currentOneOf, 0); // currentOneOf should be checked first to match type\r\n  for (let k = 0; k < oneOfKeys.length; k++) {\r\n    let oneOf = oneOfKeys[k];\r\n    let schemaTypes = oneOfShemas[oneOf].type || types;\r\n    if (!isArray(schemaTypes)) schemaTypes = [schemaTypes];\r\n    let defaultUsed;\r\n    let checkValue = isUndefined(value) ? (defaultUsed = true) && oneOfShemas[oneOf].default : value;\r\n    for (let j = 0; j < schemaTypes.length; j++)\r\n      if (types[schemaTypes[j]](checkValue) || isUndefined(checkValue)) return {schemaPart: oneOfShemas[oneOf], oneOf, type: schemaTypes[j]};\r\n    if (defaultUsed && !isUndefined(oneOfShemas[oneOf].default))\r\n      throw new Error('Type of schema.default is not supported by schema.type');\r\n  }\r\n  return {}\r\n  //return {schemaPart: oneOfShemas[0], oneOf: 0, type: toArray(oneOfShemas[0].type || types)[0]}\r\n}\r\n\r\nfunction rehydrateState(state: any, UPDATABLE: PROCEDURE_UPDATABLE_Type) {\r\n  let {dataMap = []} = makeStateBranch(UPDATABLE.api.schema, oneOfFromState(state));\r\n  return setDataMapInState(state, UPDATABLE, dataMap, null);\r\n}\r\n\r\n/////////////////////////////////////////////\r\n//      state update PROCEDURES\r\n/////////////////////////////////////////////\r\n\r\n\r\nfunction updateMessagesPROC(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type, track: Path, result?: MessageData, defaultGroup = 0) {\r\n  function conv(item: MessageGroupType | string): MessageGroupType {\r\n    return (typeof item === 'object') ? item : {group: defaultGroup, text: item};\r\n  };\r\n  let messages: MessageGroupType[] = isArray(result) ? (result as any).map(conv) : [conv(result as any)];\r\n  messages.forEach((item) => {\r\n    let {path, ...itemNoPath} = item;\r\n    if (path) {\r\n      path = normalizePath(path, track);\r\n      return updateMessagesPROC(state, UPDATABLE, path, itemNoPath, defaultGroup)\r\n    } else {\r\n      let {group = defaultGroup, text, priority = 0, ...rest} = itemNoPath;\r\n      const messageData = getCreateIn(UPDATABLE.update, {}, track, SymData, 'messages', priority);\r\n      Object.assign(messageData, rest);\r\n      if (!isObject(messageData.texts)) messageData.texts = {};\r\n      if (!isArray(messageData.texts[group])) messageData.texts[group] = [];\r\n      if (text) push2array(messageData.texts[group], text);\r\n    }\r\n  });\r\n  return state\r\n}\r\n\r\nfunction getCurrentPriority(messages: any) {\r\n  let priorities = objKeys(messages || {});\r\n  let currentPriority;\r\n  for (let i = 0; i < priorities.length; i++) {\r\n    let groups = getIn(messages, priorities[i], 'texts') || {};\r\n    let grKeys = objKeys(groups);\r\n    for (let j = 0; j < grKeys.length; j++) {\r\n      if (groups[grKeys[j]] && groups[grKeys[j]].length) {\r\n        currentPriority = parseInt(priorities[i]);\r\n        break;\r\n      }\r\n    }\r\n    if (!isUndefined(currentPriority)) break;\r\n  }\r\n  return currentPriority\r\n}\r\n\r\nfunction setPriorityPROC(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type, track: Path, currentPriority?: number) {\r\n  state = updatePROC(state, UPDATABLE, makeNUpdate(track, ['status', 'validation', 'invalid'], currentPriority === 0 ? 1 : 0, true, {macros: 'setStatus'}));\r\n  state = updatePROC(state, UPDATABLE, makeNUpdate(track, ['status', 'priority'], currentPriority));\r\n  return state;\r\n}\r\n\r\nfunction setValidStatusPROC(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type, update: any, track: Path = []) {\r\n  let currentPriority = getCurrentPriority(getIn(state, track, SymData, 'messages'));\r\n  state = setPriorityPROC(state, UPDATABLE, track, currentPriority);\r\n  if (!isSelfManaged(state, track)) objKeys(update).forEach(key => state = setValidStatusPROC(state, UPDATABLE, update[key], track.concat(key)));\r\n  return state\r\n}\r\n\r\nfunction makeValidation(state: StateType, dispatch: any, action: any) {\r\n\r\n  function recurseValidationInnerPROCEDURE(state: StateType, validatedValue: StateType, modifiedValues: StateType, track: Path = []) {\r\n    let schemaPart: jsJsonSchema;\r\n    try {schemaPart = getSchemaPart(schema, track, oneOfFromState(state))} catch (e) {return state}\r\n\r\n    const selfManaged = isSelfManaged(state, track);\r\n    if (!selfManaged)\r\n      modifiedValues && objKeys(modifiedValues).forEach(key => state = recurseValidationInnerPROCEDURE(state, validatedValue[key], modifiedValues[key], track.concat(key)));\r\n\r\n    let ff_validators = schemaPart.ff_validators;\r\n\r\n    if (ff_validators) {\r\n      const field = makeSynthField(UPDATABLE.api, path2string(track));\r\n      ff_validators.forEach((validator: any) => {\r\n        const updates: any[] = [];\r\n        field.updates = updates;\r\n        let result = processFn.call(field, validator, validatedValue, false);\r\n        if (result && result.then && typeof result.then === 'function') { //Promise\r\n          result.validatedValue = validatedValue;\r\n          result.path = track;\r\n          result.selfManaged = selfManaged;\r\n          vPromises.push(result);\r\n          state = updatePROC(state, UPDATABLE, makeNUpdate(track, ['status', 'validation', 'pending'], 1, true, {macros: 'setStatus'}))\r\n        } else state = updateMessagesPROC(state, UPDATABLE, track, result, 1);\r\n        if (updates.length) updates.forEach((update: any) => state = updatePROC(state, UPDATABLE, update));\r\n        field.updates = null\r\n      })\r\n    }\r\n    return state\r\n  }\r\n\r\n  function clearDefaultMessagesInnerPROCEDURE(state: StateType, modifiedValues: StateType, track: Path = []) {\r\n    const type = getIn(state, track, SymData, 'fData', 'type');\r\n    if (!type) return state;\r\n    if (type == 'object' || type == 'array')\r\n      modifiedValues && objKeys(modifiedValues).forEach(key => clearDefaultMessagesInnerPROCEDURE(state, modifiedValues[key], track.concat(key)));\r\n    setUPDATABLE(UPDATABLE, {}, true, track, SymData, 'messages', '0', 'texts')\r\n    return state;\r\n    //return updateMessagesPROC(state, UPDATABLE, track); // sets empty array for 0-level messages\r\n  }\r\n\r\n  let {api, force, opts, promises} = action;\r\n  const {JSONValidator, schema, getState, UPDATABLE} = api;\r\n  const currentValues = state[SymData].current;\r\n  const vPromises: vPromisesType[] = [];\r\n  const modifiedValues = force === true ? currentValues : force;\r\n  //console.log('modifiedValues ', modifiedValues);\r\n\r\n  if (!modifiedValues || objKeys(modifiedValues).length == 0) { // no changes, no validation\r\n    promises.resolve();\r\n    promises.vAsync.resolve();\r\n    return state;\r\n  }\r\n  if (JSONValidator) {\r\n    state = clearDefaultMessagesInnerPROCEDURE(state, modifiedValues);\r\n    let errs = JSONValidator(currentValues);  // Validate, using JSONSchemaValidator;\r\n    errs.forEach((item: any) => updateMessagesPROC(state, UPDATABLE, item[0], item[1]));\r\n  }\r\n  state = recurseValidationInnerPROCEDURE(state, currentValues, modifiedValues);\r\n  let update = UPDATABLE.update;\r\n  state = mergeUPD_PROC(state, UPDATABLE);\r\n  state = setValidStatusPROC(state, UPDATABLE, update);\r\n  state = mergeUPD_PROC(state, UPDATABLE);\r\n  promises.resolve();\r\n  if (vPromises.length) {\r\n    Promise.all(vPromises).then((results) => {\r\n      let state = getState();\r\n      let UPDATABLE = api.UPDATABLE;\r\n      let newValues = state[SymData].current; //getRawValues().current;\r\n      for (let i = 0; i < vPromises.length; i++) {\r\n        //if (!results[i]) continue;\r\n        let {validatedValue, path, selfManaged} = vPromises[i];\r\n        if (validatedValue == getIn(newValues, path)) {\r\n          state = updateMessagesPROC(state, UPDATABLE, path, results[i] || '', 2);\r\n          state = updatePROC(state, UPDATABLE, makeNUpdate(path, ['status', 'validation', 'pending'], 0, false, {macros: 'setStatus'}))\r\n          // pendingStatus[path2string(path)] = false;\r\n        }\r\n      }\r\n      let update = UPDATABLE.update;\r\n      state = mergeUPD_PROC(state, UPDATABLE);\r\n      state = setValidStatusPROC(state, UPDATABLE, update);\r\n      state = mergeUPD_PROC(state, UPDATABLE);// merge(state, UPDATABLE.update, {replace: UPDATABLE.replace});\r\n      dispatch({type: anSetState, state, api});\r\n      promises.vAsync.resolve();\r\n    }).catch(reason => {\r\n      let state = getState();\r\n      let UPDATABLE = api.UPDATABLE; // let UPDATABLE = {update: {}, replace: {}, api: {};\r\n      let newValues = state[SymData].current; //getRawValues().current;\r\n      for (let i = 0; i < vPromises.length; i++) {\r\n        let {validatedValue, path, selfManaged} = vPromises[i];\r\n        if (validatedValue == getIn(newValues, path)) {\r\n          state = updatePROC(state, UPDATABLE, makeNUpdate(path, ['status', 'validation', 'pending'], 0, false, {macros: 'setStatus'}))\r\n        }\r\n      }\r\n      let update = UPDATABLE.update;\r\n      state = mergeUPD_PROC(state, UPDATABLE);\r\n      state = setValidStatusPROC(state, UPDATABLE, update);\r\n      state = mergeUPD_PROC(state, UPDATABLE);\r\n      dispatch({type: anSetState, state, api});\r\n      promises.vAsync.reject(reason);\r\n    })\r\n  } else promises.vAsync.resolve();\r\n  return state;\r\n}\r\n\r\nfunction setDirtyPROC(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type, inital: any, current: any, track: Path = []) {\r\n  if (current === inital) return state;\r\n  const {schema} = UPDATABLE.api;\r\n  let schemaPart;\r\n  try {schemaPart = getSchemaPart(schema, track, oneOfFromState(state))} catch (e) {}\r\n\r\n  if (!schemaPart || isSelfManaged(state, track)) { //direct compare\r\n    let path: Path = schemaPart ? track : track.slice(0, -1);\r\n    state = updatePROC(state, UPDATABLE, makeNUpdate(path, ['status', 'dirty'], 1, false, {macros: 'setStatus'}))\r\n  } else {\r\n    let keys = objKeys(Object.assign({}, inital, current));\r\n    keys.forEach(key => state = setDirtyPROC(state, UPDATABLE, getIn(inital, key), getIn(current, key), track.concat(key)))\r\n  }\r\n  return state\r\n}\r\n\r\nfunction updateDirtyPROC(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type, inital: any, currentChanges: any, track: Path = [], forceDirty = false) {\r\n  const {schema} = UPDATABLE.api;\r\n  let schemaPart;\r\n  try {schemaPart = getSchemaPart(schema, track, oneOfFromState(state))} catch (e) {}\r\n  if (!schemaPart || isSelfManaged(state, track)) { //direct compare\r\n    let current = getIn(state, SymData, 'current', track);\r\n    let value = forceDirty || current !== inital ? 1 : -1;\r\n    let path: Path = schemaPart ? track : track.slice(0, -1);\r\n    state = updatePROC(state, UPDATABLE, makeNUpdate(path, ['status', 'dirty'], value, false, {macros: 'setStatus',}))\r\n  } else {\r\n    let keys = objKeys(currentChanges || {});\r\n    if (schemaPart.type == 'array') {\r\n      let existKeys = branchKeys(getIn(state, track));\r\n      keys = keys.filter(k => isNaN(parseInt(k)) || ~existKeys.indexOf(k))\r\n    }\r\n    // if (schemaPart.type == 'array' && !~keys.indexOf('length')) keys.push('length');\r\n    forceDirty = forceDirty || !isMergeable(inital);\r\n    keys.forEach(key => state = updateDirtyPROC(state, UPDATABLE, getIn(inital, key), currentChanges[key], track.concat(key), forceDirty))\r\n  }\r\n  return state\r\n}\r\n\r\nfunction setPristinePROC(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type, inital: any, track: Path = []) {\r\n  if (getIn(UPDATABLE.update, track, SymData, 'status', 'pristine')) {\r\n    if (isMergeable(inital) && getIn(state, SymData, 'current', track) !== inital) {\r\n      setIn(UPDATABLE.update, inital, SymData, 'current', track);\r\n      setIn(UPDATABLE.replace, true, SymData, 'current', track);\r\n    }\r\n  } else {\r\n    objKeys(getIn(UPDATABLE.update, track)).forEach(key => setPristinePROC(state, UPDATABLE, getIn(inital, key), track.concat(key)))\r\n  }\r\n  return state\r\n}\r\n\r\nfunction updateState(dispatch: any) {\r\n  // console.time('execActions');\r\n\r\n  let {updates, state, api, forceValidation, opts, promises} = this;\r\n  let {getState, schema, UPDATABLE} = api;\r\n  if (!state) state = getState();\r\n  let prevState = state;\r\n\r\n  updates.forEach((update: StateApiUpdateType) => state = updatePROC(state, UPDATABLE, update));\r\n  state = mergeUPD_PROC(state, UPDATABLE);\r\n  let oldCurrent = getIn(prevState, SymData, 'current');\r\n  if (UPDATABLE.forceCheck) {\r\n    oldCurrent = merge(oldCurrent, UPDATABLE.forceCheck);\r\n    UPDATABLE.forceCheck = undefined;\r\n  }\r\n  let currentChanges = mergeState(oldCurrent, getIn(state, SymData, 'current'), {diff: true}).changes;\r\n  if (prevState[SymData].inital !== state[SymData].inital) {  // check dirty for all\r\n    state = updatePROC(state, UPDATABLE, makeNUpdate([], ['status', 'dirty'], 0, false, {macros: 'switch'}));  //reset all dirty\r\n    state = setDirtyPROC(state, UPDATABLE, state[SymData].inital, state[SymData].current);\r\n  } else if (currentChanges)\r\n    state = updateDirtyPROC(state, UPDATABLE, state[SymData].inital, currentChanges); // check dirty only for changes\r\n  state = setPristinePROC(state, UPDATABLE, state[SymData].inital);\r\n  state = mergeUPD_PROC(state, UPDATABLE);\r\n\r\n  let force;\r\n  if (opts.noValidation) force = forceValidation;\r\n  else {\r\n    if (forceValidation) {\r\n      object2PathValues(currentChanges).forEach(path => {\r\n        path.pop();\r\n        setIfNotDeeper(forceValidation, true, path)\r\n      });\r\n      force = forceValidation;\r\n    } else force = isMergeable(currentChanges) ? currentChanges : !isUndefined(currentChanges);\r\n  }\r\n\r\n  if (force) state = makeValidation(state, dispatch, {force, api, opts, promises});\r\n\r\n  dispatch({type: anSetState, state, api});\r\n\r\n  return promises;\r\n\r\n}\r\n\r\nconst makeStateFromSchema = memoize(function (schema: jsJsonSchema) {\r\n  return makeStateBranch(schema, oneOfStructure({}, []));\r\n});\r\n\r\nfunction initState(UPDATABLE: PROCEDURE_UPDATABLE_Type) {\r\n  let {state, dataMap = [], defaultValues} = makeStateFromSchema(UPDATABLE.api.schema);\r\n  state = merge(state, setIn({}, defaultValues, [SymData, 'current']));\r\n  state = setDataMapInState(state, UPDATABLE, dataMap);\r\n  const current: any = getIn(state, SymData, 'current');\r\n  state = updatePROC(state, UPDATABLE, makeNUpdate([], ['inital'], current));\r\n  state = updatePROC(state, UPDATABLE, makeNUpdate([], ['default'], current));\r\n  state = mergeUPD_PROC(state, UPDATABLE);\r\n  return state;\r\n}\r\n\r\n\r\n/////////////////////////////////////////////\r\n//      items updating PROCEDURES\r\n/////////////////////////////////////////////\r\n\r\n\r\nfunction updateCurrentPROC(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type, value: any, replace: any, track: Path = [], setOneOf?: number): StateType {\r\n\r\n  if (value === SymReset) value = getIn(state, SymData, 'inital', track);\r\n  if (value === SymClear) value = getIn(state, SymData, 'default', track);\r\n  if (getIn(state, SymData, 'current', track) === value && !hasIn(UPDATABLE.update, SymData, 'current', track)) return state;\r\n\r\n  let branch = getIn(state, track);\r\n\r\n  // if no branch then no need to modify state for this value, just update current\r\n  if (!branch) {\r\n    if (track[track.length - 1] == 'length') {  // hook if someone decides to edit array's length directly\r\n      const topPath = track.slice(0, -1);\r\n      const topBranch = getIn(state, topPath);\r\n      if (topBranch[SymData].fData.type == 'array')\r\n        return updatePROC(state, UPDATABLE, makeNUpdate(topPath, ['length'], value));\r\n    }\r\n    return updatePROC(state, UPDATABLE, makeNUpdate([], ['current'].concat(track), value, replace));\r\n  }\r\n\r\n  if (branch[SymData].fData.oneOfSelector) {\r\n    const field = makeSynthField(UPDATABLE.api, path2string(track));\r\n\r\n  }\r\n  const oneOfSelector = branch[SymData].fData.oneOfSelector;\r\n  const type = branch[SymData].fData.type;\r\n  if (isUndefined(value)) value = types.empty[type || 'any'];\r\n  if (oneOfSelector || !types[type || 'any'](value)) { // if wrong type for current oneOf index search for proper type in oneOf\r\n    // setOneOf = \r\n    const parts = getSchemaPart(UPDATABLE.api.schema, track, oneOfFromState(state), true);\r\n    let currentOneOf = branch[SymData].oneOf;\r\n    if (oneOfSelector) {\r\n      //const field = makeSynthField(UPDATABLE.api, path2string(track));\r\n      const ff_oneOfSelector = parts[currentOneOf].ff_oneOfSelector;\r\n      setOneOf = processFn.call({path: path2string(track)}, ff_oneOfSelector, value, false);\r\n      if (isArray(setOneOf)) setOneOf = setOneOf[0];\r\n    }\r\n\r\n    const {schemaPart, oneOf, type} = findOneOf(parts, value, isUndefined(setOneOf) ? currentOneOf : setOneOf);\r\n    if (currentOneOf !== oneOf) {\r\n      if (schemaPart) {\r\n        return updatePROC(state, UPDATABLE, makeNUpdate(track, ['oneOf'], oneOf, false, {type, setValue: value}));\r\n      } else console.warn('Type \"' + (typeof value) + '\" not found in path [' + track.join('/') + ']')\r\n    }\r\n  }\r\n\r\n  if (isSelfManaged(branch)) { // if object has own value then replace it directly\r\n    state = updatePROC(state, UPDATABLE, makeNUpdate(track, ['value'], value, replace))\r\n  } else {\r\n    if (isMergeable(value)) {  // if we receive object or array then apply their values to state\r\n      if (type == 'array' && !isUndefined(value.length)) {\r\n        state = updatePROC(state, UPDATABLE, makeNUpdate(track, ['length'], value.length));\r\n        branch = getIn(state, track);\r\n      }\r\n      if (replace === true) { // restore value's props-structure that are exist in state\r\n        let v = isArray(value) ? [] : {};\r\n        branchKeys(branch).forEach(k => v[k] = undefined);\r\n        value = Object.assign(v, value);\r\n      }\r\n      objKeys(value).forEach(key =>\r\n        state = updateCurrentPROC(state, UPDATABLE, value[key], replace === true ? true : getIn(replace, key), track.concat(key)))\r\n      if (replace === true) { // this code removes props from current that are not preset in value and not exists in state\r\n        state = mergeUPD_PROC(state, UPDATABLE);\r\n        branch = getIn(state, track);\r\n        let current = getIn(state, SymData, 'current', track);\r\n        branchKeys(branch).forEach(k => value[k] = current[k]); // value was reassigned in block below, so change it directly\r\n        state = updatePROC(state, UPDATABLE, makeNUpdate([], ['current'].concat(track), value, replace));\r\n      }\r\n    }\r\n  }\r\n\r\n  return state\r\n}\r\n\r\n\r\nfunction splitValuePROC(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type, item: NormalizedUpdateType): StateType {\r\n  const {value: itemValue, path, replace} = item;\r\n  const keyPath = item[SymData] || [];\r\n  if (keyPath.length == 0) {\r\n    const {value, status, length, oneOf, ...rest} = itemValue;\r\n    ['value', 'status', 'length', 'oneOf'].forEach(key => {\r\n      if (hasIn(itemValue, key)) state = updatePROC(state, UPDATABLE, makeNUpdate(path, [key], itemValue[key], getIn(replace, key)))\r\n    });\r\n    if (objKeys(rest).length) state = updatePROC(state, UPDATABLE, makeNUpdate(path, keyPath, rest, replace))\r\n  } else {\r\n    objKeys(itemValue).forEach(key => {\r\n      state = updatePROC(state, UPDATABLE, makeNUpdate(path, keyPath.concat(key), itemValue[key], getIn(replace, key)))\r\n    });\r\n  }\r\n  return state\r\n}\r\n\r\nfunction updateNormalizationPROC(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type, item: StateApiUpdateType): StateType {\r\n  const items = normalizeUpdate(item, state);\r\n  items.forEach(i => {\r\n    if (i.path.length === 0 && i[SymData][0] == 'current') {\r\n      i.macros = 'setCurrent';\r\n      i.path = i[SymData].slice(1);\r\n      i[SymData] = [];\r\n    }\r\n    if (i[SymData][0] == 'value') {\r\n      i.macros = 'setCurrent';\r\n      i.path = i.path.concat(i[SymData].slice(1));\r\n      i[SymData] = [];\r\n    } else if (i[SymData][0] == 'status') {\r\n      console.warn('Status should not be changed through StateApi. Update ignored.');\r\n      return;\r\n    } else if (i[SymData][0] == 'oneOf') {\r\n      i.macros = 'setOneOf';\r\n    }\r\n\r\n    state = updatePROC(state, UPDATABLE, i);\r\n  });\r\n  return state;\r\n}\r\n\r\nfunction setUPDATABLE(UPDATABLE: PROCEDURE_UPDATABLE_Type, update: any, replace: any, ...pathes: any[]) {\r\n  object2PathValues(replace).forEach(path => {\r\n    let replaceValue = path.pop();\r\n    setIn(UPDATABLE, getIn(update, path), 'update', ...pathes, path);\r\n    if (replaceValue) setIn(UPDATABLE, replaceValue, 'replace', ...pathes, path);\r\n  });\r\n  return UPDATABLE;\r\n}\r\n\r\nfunction mergeUPD_PROC(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type) {\r\n  state = merge(state, UPDATABLE.update, {replace: UPDATABLE.replace});\r\n  UPDATABLE.update = {};\r\n  UPDATABLE.replace = {};\r\n  return state;\r\n}\r\n\r\nfunction updatePROC(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type, item: NormalizedUpdateType | StateApiUpdateType | null): StateType {\r\n  if (!item) return state;\r\n  const {update, replace: replace_UPDATABLE, api} = UPDATABLE;\r\n  const {schema} = api;\r\n  // normalize updates\r\n  if (!isNUpdate(item)) return updateNormalizationPROC(state, UPDATABLE, item);\r\n\r\n  // execute macros\r\n  if (item.macros) {\r\n    let macro = Macros[item.macros];\r\n    if (!macro) throw new Error('\"' + macro + '\" not found in macros');\r\n    return macro(state, schema, UPDATABLE, item);\r\n  }\r\n\r\n  let {value, path, replace} = item;\r\n  const keyPath = item[SymData];\r\n  if (isFunction(value)) value = value(getFromUPD(state, UPDATABLE)(path, SymData, keyPath));\r\n\r\n  if (path.length == 0 && (keyPath[0] == 'inital' || keyPath[0] == 'default')) {\r\n    state = merge(state, makeSlice(SymData, keyPath, value), {replace: makeSlice(SymData, keyPath, replace)})\r\n  } else {\r\n    // split object for proper state update (for dataMap correct execution)\r\n    if (isObject(value) && (keyPath.length == 0 && (hasIn(value, 'value') || hasIn(value, 'status') || hasIn(value, 'length') || hasIn(value, 'oneOf'))\r\n      || (keyPath.length == 1 && keyPath[0] == 'status'))) return splitValuePROC(state, UPDATABLE, item);\r\n\r\n    let branch = getIn(state, path);\r\n    if (!isObject(branch)) return state; // check if there is branch in state\r\n\r\n    if (keyPath[0] == 'value' && !hasIn(branch, SymData, 'value')) // value is not self managed, so modify only current\r\n      return Macros.setCurrent(state, schema, UPDATABLE, {value, replace, path: path.concat(keyPath.slice(1))});\r\n\r\n    // set data\r\n    setUPDATABLE(UPDATABLE, value, replace, path, SymData, keyPath);\r\n    // setIn(update, value, path, SymData, keyPath);\r\n    // if (replace) setIn(replace_UPDATABLE, replace, path, SymData, keyPath);\r\n\r\n    // additional state modifying if required\r\n    if (keyPath[0] == 'value') { // modify current\r\n      state = updatePROC(state, UPDATABLE, makeNUpdate([], push2array(['current'], path, keyPath.slice(1)), value, replace))\r\n    } else if (keyPath[0] == 'messages') { // modify valid status\r\n      const messages = getFromUPD(state, UPDATABLE)(path, SymData, 'messages');\r\n      let currentPriority = getCurrentPriority(messages);\r\n      state = setPriorityPROC(state, UPDATABLE, path, currentPriority);\r\n    } else if (keyPath[0] == 'length') { // modify state with new length\r\n      state = updatePROC(state, UPDATABLE, makeNUpdate([], push2array(['current'], path, keyPath), value, replace));\r\n      let start = branch[SymData].length;\r\n      start = Math.max(start, 0);\r\n      let end = Math.max(value || 0);\r\n      const oneOfStateFn = oneOfStructure(state, path);\r\n      const maps2enable: any[] = [];\r\n      const maps2disable: any[] = [];\r\n      for (let i = start; i < end; i++) {\r\n        let elemPath = path.concat(i);\r\n        if (!isUndefined(item.setOneOf)) oneOfStateFn(elemPath, {oneOf: item.setOneOf});\r\n        let {state: branch, dataMap = [], defaultValues} = makeStateBranch(schema, oneOfStateFn, elemPath);\r\n        const untouched = getUpdValue([state, UPDATABLE.update], path, SymData, 'status', 'untouched');\r\n        const mergeBranch: any = {[SymData]: {params: {uniqKey: getUniqKey()}}};\r\n        if (!untouched) setIn(mergeBranch[SymData], {untouched: 0, touched: true}, 'status');\r\n        branch = merge(branch, mergeBranch);\r\n        state = merge(state, setIn({}, branch, elemPath), {replace: setIn({}, true, elemPath)});\r\n        state = updatePROC(state, UPDATABLE, makeNUpdate([], push2array(['current'], elemPath), defaultValues, true));\r\n        push2array(maps2enable, dataMap);\r\n        if (untouched) state = Macros.setStatus(state, schema, UPDATABLE, makeNUpdate(path, ['status', 'untouched'], 1));\r\n      }\r\n      for (let i = end; i < start; i++) {\r\n        let elemPath = path.concat(i);\r\n        push2array(maps2disable, getIn(state, elemPath, SymDataMapTree, SymData) || []);\r\n        ['invalid', 'dirty', 'untouched', 'pending'].forEach(key => {\r\n          let statusValue = getUpdValue([update, state], path, SymData, 'status', key);\r\n          if (statusValue) state = Macros.setStatus(state, schema, UPDATABLE, makeNUpdate(path, ['status', key], -1));\r\n        });\r\n        setUPDATABLE(UPDATABLE, SymDelete, true, elemPath);\r\n        // setIn(update, SymDelete, elemPath);\r\n        // setIn(replace_UPDATABLE, SymDelete, elemPath);\r\n      }\r\n\r\n      let schemaPart = getSchemaPart(schema, path, oneOfFromState(state));\r\n      setIn(update, isArrayCanAdd(schemaPart, end), path, SymData, 'fData', 'canAdd');\r\n      for (let i = Math.max(Math.min(start, end) - 1, 0); i < end; i++)\r\n        setUPDATABLE(UPDATABLE, getArrayItemData(schemaPart, i, end), true, path, i, SymData, 'arrayItem');\r\n\r\n      state = mergeUPD_PROC(state, UPDATABLE);\r\n      state = setDataMapInState(state, UPDATABLE, maps2disable, true);\r\n      state = setDataMapInState(state, UPDATABLE, maps2enable);\r\n\r\n\r\n    } else if (keyPath[0] == 'status') { // properly set status change\r\n      let keyStatus = keyPath[1];\r\n      let newKey;\r\n      let value;\r\n      if (keyStatus == 'invalid' || keyStatus == 'pending') {\r\n        value = getUpdValue([update, state], path, SymData, 'status', 'pending') ? null : !getUpdValue([update, state], path, SymData, 'status', 'invalid');\r\n        newKey = 'valid';\r\n      } else if (keyStatus == 'untouched' || keyStatus == 'dirty') {\r\n        value = !getUpdValue([update, state], path, SymData, 'status', keyStatus);\r\n        newKey = keyStatus == 'untouched' ? 'touched' : 'pristine';\r\n      }\r\n      if (!isUndefined(newKey))\r\n        state = updatePROC(state, UPDATABLE, makeNUpdate(path, ['status', newKey], value));\r\n      //setIn(update, value, path, SymData, 'status', newKey);\r\n\r\n    } else if (keyPath[0] == 'oneOf') {\r\n      const oldBranch = getIn(state, path);\r\n      let oldOneOf = getIn(oldBranch, SymData, 'oneOf') || 0;\r\n      let newOneOf = getIn(UPDATABLE.update, path, SymData, 'oneOf');\r\n      if ((oldOneOf != newOneOf) || (item.type && item.type != getIn(oldBranch, SymData, 'fData', 'type'))) {\r\n        setIfNotDeeper(UPDATABLE, SymReset, 'forceCheck', item.path);\r\n        state = mergeUPD_PROC(state, UPDATABLE);\r\n        state = setDataMapInState(state, UPDATABLE, getIn(state, path, SymDataMapTree, SymData) || [], true);\r\n\r\n        let {state: branch, dataMap: maps2enable = [], defaultValues} = makeStateBranch(schema, oneOfStructure(state, path), path, item.setValue);\r\n        const {value: v1, length: v2, oneOf: v3, fData: v4, ...previousBranchData} = oldBranch[SymData]; // remove data that should be replaced by new branch\r\n        if (!isSelfManaged(oldBranch) || !isSelfManaged(branch)) delete previousBranchData.status; // keep status values only for self-managed branch, that keeps to be self-managed\r\n\r\n        branch = merge(branch, {[SymData]: previousBranchData}, {arrays: 'replace'});\r\n        if (path.length) {\r\n          const topPath = path.slice();\r\n          const field = topPath.pop();\r\n          ['invalid', 'dirty', 'pending'].forEach(key => { // 'untouched',\r\n            let oldStatusValue = getIn(oldBranch, SymData, 'status', key);\r\n            let newStatusValue = getIn(branch, SymData, 'status', key);\r\n            if (!oldStatusValue != !newStatusValue) state = Macros.setStatus(state, schema, UPDATABLE, makeNUpdate(topPath, ['status', key], newStatusValue ? 1 : -1));\r\n          });\r\n          let arrayOfRequired = getIn(state, topPath, SymData, 'fData', 'required');\r\n          arrayOfRequired = isArray(arrayOfRequired) && arrayOfRequired.length && arrayOfRequired;\r\n          if (arrayOfRequired && (~arrayOfRequired.indexOf(field))) branch = merge(branch, {[SymData]: {fData: {required: true}}});\r\n        }\r\n\r\n        if (getIn(oldBranch, SymData, 'status', 'untouched') == 0) branch = merge(branch, {[SymData]: {status: {untouched: 0}}});// stick untouched to zero\r\n        state = merge(state, setIn({}, branch, path), {replace: setIn({}, true, path)});\r\n        state = updatePROC(state, UPDATABLE, makeNUpdate([], push2array(['current'], path), defaultValues, true));\r\n        state = setDataMapInState(state, UPDATABLE, maps2enable);\r\n        if (getIn(branch, SymData, 'status', 'untouched') == 0) state = Macros.switch(state, schema, UPDATABLE, makeNUpdate(path, ['status', 'untouched'], 0));\r\n      }\r\n    }\r\n  }\r\n\r\n  // apply dataMap\r\n  let dataMap = getIn(state, path, SymDataMapTree);\r\n  for (let i = 0; i < keyPath.length; i++) {\r\n    if (!dataMap) break;\r\n\r\n    state = executeDataMapsPROC(state, UPDATABLE, dataMap[SymDataMap],\r\n      makeNUpdate(path, keyPath.slice(0, i), setIn({}, value, keyPath.slice(i)), setIn({}, replace, keyPath.slice(i)))\r\n    );\r\n    dataMap = dataMap[keyPath[i]];\r\n  }\r\n\r\n  if (dataMap) state = recursivelyExecuteDataMaps(dataMap, value, replace, keyPath);\r\n\r\n  function recursivelyExecuteDataMaps(dataMap: any[], value: any, replace: any, track: Path = []) {\r\n    state = executeDataMapsPROC(state, UPDATABLE, dataMap[SymDataMap], makeNUpdate(path, track, value, replace));\r\n    isMergeable(value) && objKeys(dataMap).forEach(key => value.hasOwnProperty(key) && (state = recursivelyExecuteDataMaps(dataMap[key], value[key], getIn(replace, key), track.concat(key))))\r\n    return state;\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\n\r\nfunction normalizeDataMap(dataMap: FFDataMapGeneric<Function | Function[]>[], emitter: Path): normalizedDataMapType[] {\r\n  return dataMap.map((item: any) => {\r\n    let {from, to, ...action} = item;\r\n    if (!action.$) action = true;\r\n    else action = normalizeFn(action);\r\n    if (!from || !to) action = false;\r\n    // {action = {...action, ...normalizeArgs(action.args)};\r\n    //   if (!action.args.length) action.args = ['${value}'];}\r\n    return {emitter, from, to, action} as normalizedDataMapType;\r\n\r\n  })\r\n}\r\n\r\nfunction setDataMapInState(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type, dataMaps: normalizedDataMapType[], unset: boolean | null = false) {\r\n  const dataMaps2execute: any = [];\r\n  dataMaps.forEach((dataMap) => {\r\n    const emitterPath = dataMap.emitter;\r\n    let bindMap2emitter: boolean = false;\r\n    normalizeUpdate({path: emitterPath.join('/') + '/' + dataMap.from, value: null}, state).forEach(fromItem => {\r\n        let key = fromItem[SymData][0];\r\n        if (key == 'current' || key == 'inital' || key == 'default' && fromItem.path.length)\r\n          fromItem = {...fromItem, path: [], [SymData]: [key, ...fromItem.path, ...fromItem[SymData].slice(1)]};\r\n\r\n        normalizeUpdate({path: emitterPath.join('/') + '/' + dataMap.to, value: null}, state).forEach(toItem => {\r\n          let relTo = path2string(relativePath(fromItem.path, toItem.path.concat(SymData, ...toItem[SymData])));\r\n          //console.log(relTo);\r\n          if (getIn(state, fromItem.path)) setIn(UPDATABLE.update, unset ? undefined : dataMap.action, fromItem.path, SymDataMapTree, fromItem[SymData], SymDataMap, relTo);\r\n          if (!unset) {\r\n            // state = executeDataMapsPROC(state, UPDATABLE, makeSlice(relTo, dataMap.action),\r\n            //   makeNUpdate(fromItem.path, fromItem[SymData], getIn(state, fromItem.path, SymData, fromItem[SymData])));\r\n            dataMaps2execute.push({\r\n              map: makeSlice(relTo, dataMap.action),\r\n              fromPath: fromItem.path,\r\n              keyPath: fromItem[SymData]\r\n            });\r\n            if (!bindMap2emitter && relativePath(emitterPath, fromItem.path)[0] != '.') bindMap2emitter = true;\r\n          }\r\n          //state = mergeUPD_PROC(state, UPDATABLE);\r\n        })\r\n      }\r\n    );\r\n    if (bindMap2emitter) {\r\n      const emitterBranch = getIn(state, emitterPath);\r\n      if (emitterBranch) {\r\n        let bindedMaps = getIn(emitterBranch, SymDataMapTree, SymData) || [];\r\n        let i;\r\n        for (i = 0; i < bindedMaps.length; i++) {\r\n          if (dataMap.from === bindedMaps[i].from && dataMap.to === bindedMaps[i].to) break;\r\n        }\r\n        bindedMaps = bindedMaps.slice();\r\n        bindedMaps[i] = dataMap;\r\n        setUPDATABLE(UPDATABLE, bindedMaps, true, emitterPath, SymDataMapTree, SymData);\r\n      }\r\n    }\r\n    state = mergeUPD_PROC(state, UPDATABLE);\r\n  });\r\n  if (unset !== null) dataMaps2execute.forEach((v: any) => {\r\n    state = executeDataMapsPROC(state, UPDATABLE, v.map, makeNUpdate(v.fromPath, v.keyPath, getIn(state, v.fromPath, SymData, v.keyPath)));\r\n    state = mergeUPD_PROC(state, UPDATABLE);\r\n  });\r\n  return state\r\n}\r\n\r\n\r\nfunction executeDataMapsPROC(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type, maps: any, item: NormalizedUpdateType) {\r\n  const {value, path, replace} = item;\r\n  const keyPath = item[SymData] || [];\r\n  const from = NUpdate2string(item);\r\n  objKeys(maps || {}).forEach((pathTo) => {\r\n    //console.log('maps=', maps);\r\n    if (!maps[pathTo]) return; // disabled map\r\n    const map: dataMapActionType = maps[pathTo];\r\n    const NpathTo = path2string(normalizePath(pathTo, path));\r\n    let executedValue = value;\r\n    const updates: any[] = [];\r\n    if (isObject(map)) {\r\n      const field = makeSynthField(UPDATABLE.api, NpathTo, from);\r\n      //let _get = field.api._get;\r\n      //field.api._get = getFromUPD(state, UPDATABLE);\r\n      field.get = getFromUPD(state, UPDATABLE);\r\n      field.updates = updates;\r\n      executedValue = processFn.call(field, map, value);\r\n      field.updates = null;\r\n      field.get = null;\r\n    }\r\n    if (!updates.length) updates.push({path: NpathTo, value: executedValue, replace: isUndefined(map.replace) ? replace : map.replace});\r\n    updates.forEach((update: any) => state = updatePROC(state, UPDATABLE, update));\r\n  });\r\n  return state;\r\n}\r\n\r\n\r\n/////////////////////////////////////////////\r\n//      state utilities\r\n/////////////////////////////////////////////\r\n\r\nconst trueIfLength = (length: number) => (path: any) => getIn(path, 'length') === length;\r\n\r\nfunction isTopPath(path: Path) {\r\n  return path.length == 0 || path.length == 1 && path[0] == '#';\r\n}\r\n\r\nconst makeSynthField = memoize(function (stateApi: any, to: string, from?: string) {\r\n  const path = to.split('@')[0];\r\n  const pathData = from ? from.split('@')[0] : path;\r\n  const updates: any[] = [];\r\n  const field: any = {from, to, path, stateApi, updates};\r\n  field.api = stateApi.wrapper(field);\r\n  field.wrapOpts = (rest: any) => {\r\n    if (field.updates && isUndefined(rest.setExecution)) rest.setExecution = (addUpdates: any) => addUpdates && push2array(field.updates, addUpdates);\r\n    return rest\r\n  };\r\n  field.getData = () => field.api.get(pathData, SymData);\r\n  return field;\r\n});\r\n\r\n\r\nfunction getFromUPD(state: StateType, UPDATABLE: PROCEDURE_UPDATABLE_Type) {\r\n  return (...tPath: Array<string | Path>) => {\r\n    if (hasIn(UPDATABLE.update, ...tPath.map(path => normalizePath(path as any))))\r\n      return merge(getFromState(state, ...tPath), getFromState(UPDATABLE.update, ...tPath), {replace: getFromState(UPDATABLE.replace, ...tPath)});\r\n    return getFromState(state, ...tPath);\r\n  }\r\n}\r\n\r\nfunction getUpdValue(states: StateType[], ...pathes: Path) {\r\n  for (let i = 0; i < states.length; i++) {\r\n    if (hasIn(states[i], ...pathes)) return getIn(states[i], ...pathes);\r\n  }\r\n}\r\n\r\n\r\nfunction getFromState(state: any, ...pathes: Array<symbol | string | Path>) {\r\n  return getIn(state, ...pathes.map(path => normalizePath(path as any)));\r\n}\r\n\r\nconst makeNUpdate = (path: Path, keyPath: Path, value?: any, replace?: any, rest: any = {}): NormalizedUpdateType => {return {path, [SymData]: keyPath, value, replace, ...rest}};\r\n\r\n\r\nfunction isNUpdate(updateItem: any): updateItem is NormalizedUpdateType {\r\n  return !isUndefined(getIn(updateItem, SymData)) && isArray(updateItem[SymData]);\r\n}\r\n\r\n\r\nfunction string2NUpdate(path: string | Path, base: string | Path = [], rest: any = {}): NormalizedUpdateType {\r\n  path = normalizePath(path, base);\r\n  let keyPath: any = [];\r\n  let a = path.indexOf(SymData);\r\n  if (~a) {\r\n    keyPath = path.slice(a + 1);\r\n    path = path.slice(0, a);\r\n  }\r\n  const {value, replace, ...r} = rest;\r\n  return makeNUpdate(path, keyPath, value, replace, r);\r\n}\r\n\r\n\r\nfunction NUpdate2string(item: PathItem): string {\r\n  let path = path2string(item.path);\r\n  return path + (item[SymData] && !~path.indexOf('@') ? '/@/' + path2string(item[SymData]) : '');\r\n}\r\n\r\n\r\nfunction normalizeUpdate(update: StateApiUpdateType, state: StateType): NormalizedUpdateType[] {\r\n  const {path, value, replace, base, ...rest} = update;\r\n  const result: NormalizedUpdateType[] = [];\r\n  let pathArray: string[] = path2string(path).split(';');\r\n  pathArray.forEach(path => {\r\n    let pathes = normalizePath(path, base);\r\n    let keyPathes: any = [];\r\n    let a = pathes.indexOf(SymData);\r\n    if (~a) {\r\n      keyPathes = pathes.slice(a + 1);\r\n      pathes = pathes.slice(0, a);\r\n    }\r\n    pathes = multiplyPath(pathes, {'*': (p: Path) => branchKeys(getIn(state, p)).join(',')});\r\n    keyPathes = multiplyPath(keyPathes);\r\n    objKeys(pathes).forEach(p => objKeys(keyPathes).forEach(k => result.push(makeNUpdate(pathes[p], keyPathes[k], value, replace, rest))));\r\n  });\r\n  return result;\r\n}\r\n\r\n\r\n/////////////////////////////////////////////\r\n//  Path functions\r\n/////////////////////////////////////////////\r\n\r\nconst symConv: any = function (key: any, anotherKey?: any) {\r\n  if (!isUndefined(anotherKey)) {\r\n    symConv._data[key] = anotherKey;\r\n    symConv._data[anotherKey] = key;\r\n  } else return symConv._data[key]\r\n};\r\n\r\nsymConv._data = {'#': ''};\r\nsymConv.sym2str = (sym: any) => typeof sym == 'symbol' && !isUndefined(symConv(sym)) ? symConv(sym) : sym;\r\nsymConv.str2sym = (str: any) => typeof str == 'string' && !isUndefined(symConv(str)) ? symConv(str) : str;\r\n\r\nsymConv('@', SymData);\r\n\r\n\r\nfunction multiplyPath(path: Path, strReplace: { [key: string]: any } = {}) {\r\n  let result: any = {'': []};\r\n  path.forEach(value => {\r\n    let res: any = {};\r\n    value = strReplace[value] || value;\r\n    if (typeof value == 'string' && ~value.indexOf(',')) {\r\n      objKeys(result).forEach(key => value.split(',').forEach((k: string) => res[key && (key + ',' + k) || k] = result[key].concat(k.trim())))\r\n    } else if (typeof value == 'function') {\r\n      objKeys(result).forEach(key => {\r\n        let tmp: any = value(result[key]);\r\n        if (typeof tmp == 'string') tmp = string2path(tmp);\r\n        tmp = multiplyPath(tmp, strReplace);\r\n        objKeys(tmp).forEach(k => res[key && (key + (k ? ',' + k : '')) || k] = result[key].concat(tmp[k]))\r\n      });\r\n    } else objKeys(result).forEach(key => push2array(result[key], value));\r\n    if (objKeys(res).length) result = res;\r\n  });\r\n  return result;\r\n}\r\n\r\nconst num2string = (value: any) => typeof value == 'number' ? value.toString() : value;\r\n\r\nfunction relativePath(base: Path, destination: Path) {\r\n  if (base[0] === '#') base = base.slice(1);\r\n  if (destination[0] === '#') destination = destination.slice(1);\r\n  // let same = true;\r\n  // let res: Path = [];\r\n  const result: Path = [];\r\n  let i;\r\n  for (i = 0; i < base.length; i++) if (num2string(base[i]) !== num2string(destination[i])) break;\r\n  for (let j = i; j < base.length; j++) result.push('..');\r\n  if (!result.length) result.push('.');\r\n  return push2array(result, destination.slice(i));\r\n  // return result;\r\n}\r\n\r\nfunction resolvePath(path: Path, base?: Path) {\r\n  const result: Path = (base && (path[0] === '.' || path[0] == '..')) ? base.slice() : [];\r\n  for (let i = 0; i < path.length; i++) {\r\n    let val = path[i];\r\n    if (val === '..') result.pop();\r\n    else if (val !== '' && val !== '.') result.push(val);\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction setIfNotDeeper(state: any, value: any, ...pathes: any[]) {\r\n  if (state === value) return state;\r\n  const path = flattenPath(pathes);\r\n  let result = state;\r\n  for (let i = 0; i < path.length - 1; i++) {\r\n    if (result[path[i]] === value) return state;\r\n    if (!isObject(result[path[i]])) result[path[i]] = {};\r\n    result = result[path[i]];\r\n  }\r\n  if (path.length) result[path[path.length - 1]] = value;\r\n  else return value;\r\n  return state\r\n}\r\n\r\nfunction flattenPath(path: any): Path {\r\n  if (isArray(path)) {\r\n    const result: Path = [];\r\n    push2array(result, ...path.map(flattenPath));\r\n    return result;\r\n  } else if (typeof path == 'string') return string2path(path);\r\n  return [path];\r\n}\r\n\r\nfunction isNPath(path: any) {\r\n  return isMergeable(path) && getIn(path, SymData) === 'nPath';\r\n}\r\n\r\nfunction normalizePath(path: string | Path, base: string | Path = []): Path {\r\n  let result = resolvePath(flattenPath(path), base.length ? flattenPath(base) : []);\r\n  result[SymData] = 'nPath';\r\n  return result;\r\n}\r\n\r\nfunction path2string(path: any): string {\r\n  return isArray(path) ? path.map(path2string).join('/') : symConv.sym2str(path);\r\n}\r\n\r\nfunction string2path(path: string) {\r\n  path = path.replace(symConv(SymData), '/' + symConv(SymData) + '/');\r\n  path = path.replace(/\\/+/g, '/');\r\n  const result: Path = [];\r\n  path.split('/').forEach(key => key && (key = symConv.str2sym(key.trim())) && result.push(key));\r\n  return result\r\n}\r\n\r\n\r\n/////////////////////////////////////////////\r\n//      common utils\r\n/////////////////////////////////////////////\r\n\r\nfunction object2PathValues(vals: { [key: string]: any }, options: object2PathValuesOptions = {}, track: Path = []): PathValueType[] {\r\n  const fn = options.symbol ? objKeysNSymb : objKeys;\r\n  const check = options.arrayAsValue ? isObject : isMergeable;\r\n  if (!check(vals)) return [[vals]];\r\n  let result: any[] = [];\r\n  fn(vals).forEach((key) => {\r\n    let path = track.concat(key);\r\n    if (check(vals[key])) object2PathValues(vals[key], options, path).forEach(item => result.push(item)); // result = result.concat(object2PathValues(vals[key], path));\r\n    else result.push(push2array(path, vals[key]))\r\n  });\r\n  if (!result.length) return [push2array(track.slice(), {})]; // empty object\r\n  return result\r\n}\r\n\r\nconst objMap = (object: any, fn: (item: any, track: string[]) => any, track: string[] = []) =>\r\n  objKeys(object).reduce((result, key) => ((result[key] = fn(object[key], track.concat(key))) || true) && result, isArray(object) ? [] : {});\r\n\r\nconst isMapFn = (arg: any) => isObject(arg) && arg.$ || isFunction(arg) && arg._map;\r\n\r\nfunction normalizeArgs(args: any, wrapFn?: any) {\r\n  let dataRequest = false;\r\n  args = toArray(isUndefined(args) ? [] : args).map((arg: any) => {\r\n    if (isString(arg)) {\r\n      let fnReq = 0;\r\n      if (arg[0] == '@') fnReq = 1;\r\n      if (arg.substr(0, 2) == '!@') fnReq = 2;\r\n      if (arg.substr(0, 3) == '!!@') fnReq = 3;\r\n      if (fnReq) {\r\n        dataRequest = true;\r\n        let res = normalizePath(arg.substr(fnReq));\r\n        if (fnReq == 2)\r\n          res[SymDataMap] = 'not';\r\n        if (fnReq == 3) res[SymDataMap] = 'doubleNot';\r\n        return res\r\n      }\r\n    }\r\n    if (isMapFn(arg)) {\r\n      let res = normalizeArgs(arg.args, wrapFn);\r\n      if (res.dataRequest) dataRequest = true;\r\n      res = {...arg, ...res};\r\n      return wrapFn ? wrapFn(res) : res\r\n    } else if (wrapFn && isMergeable(arg)) return wrapFn(arg);\r\n    return arg;\r\n  });\r\n  return {dataRequest, args, norm: true}\r\n}\r\n\r\nfunction normalizeFn(fn: any, wrapFn?: Function, dontAddValue?: boolean): { $: Function, args: any, [key: string]: any } {\r\n  let nFn: any = !isObject(fn) ? {$: fn} : fn;\r\n  nFn = {...nFn, ...normalizeArgs(nFn.args, wrapFn)};\r\n  if (!nFn.args.length && !dontAddValue) nFn.args = ['${value}'];\r\n  return nFn\r\n}\r\n\r\nfunction testArray(value: any) {\r\n  if (isUndefined(value)) return [];\r\n  if (!isArray(value)) throw new Error('array expected');\r\n  return value\r\n}\r\n\r\nfunction processProp(nextData: any, arg: any) {\r\n  let res = getIn(nextData, arg);\r\n  switch (arg[SymDataMap]) {\r\n    case 'not':\r\n      return !res;\r\n    case 'doubleNot':\r\n      return !!res;\r\n    default:\r\n      return res\r\n  }\r\n}\r\n\r\nfunction processFn(map: any, value: any, strictArrayResult = true) {\r\n  const processArg = (arg: any) => {\r\n    if (isNPath(arg)) return processProp(nextData, arg);\r\n    if (isMapFn(arg)) return !arg._map ? processFn.call(this, arg, value, strictArrayResult) : arg(value, strictArrayResult);\r\n    if (arg == '${value}') return value;\r\n    return arg;\r\n  };\r\n  const nextData = map.dataRequest ? this.getData() : null;\r\n  const res = toArray(map.$).reduce((args, fn) =>\r\n      isFunction(fn) ? (strictArrayResult ? testArray : toArray)(\r\n        fn.apply(this, args)) : args,\r\n    (map.args || []).map(processArg));\r\n  return strictArrayResult ? testArray(res)[0] : deArray(res);\r\n}\r\n\r\n\r\n// function objKeysMap(obj: any, fn: Function, symbol = false) {\r\n//   if (!isMergeable(obj)) return obj;\r\n//   const result = _isArray(obj) ? [] : {};\r\n//   (symbol ? objKeys : objKeysNSymb)(obj).forEach(key => result[fn(key)] = obj[key]);\r\n//   return result;\r\n// };\r\n\r\n// function without(obj: {}, symbol = false, ...rest: any[]) {\r\n//   //const args = arrFrom(rest); // [].slice.call(arguments);\r\n//   const result = _isArray(obj) ? [] : {};\r\n//   const fn = symbol ? objKeys : objKeysNSymb;\r\n//   fn(obj).forEach(key => {\r\n//     if (!~rest.indexOf(key)) result[key] = obj[key]\r\n//   });\r\n//   return result;\r\n// };\r\n//\r\n// function split(test: (key: string, val: any) => boolean, obj: any, symbol = false) {\r\n//   const passed = {};\r\n//   const wrong = {};\r\n//\r\n//   const fn = symbol ? objKeys : objKeysNSymb;\r\n//   fn(obj).forEach(key => {\r\n//     let val = obj[key];\r\n//     if (test(key, val)) passed[key] = val;\r\n//     else wrong[key] = val;\r\n//   });\r\n//\r\n//   return [passed, wrong];\r\n// };\r\n//\r\n//\r\n// function replaceDeep(obj: any, value: any) {\r\n//   if (!isMergeable(obj)) return value;\r\n//   const result = _isArray(obj) ? [] : {};\r\n//   objKeys(obj).forEach(field => result[field] = replaceDeep(obj[field], value));\r\n//   return result;\r\n// }\r\n//\r\n\r\n\r\nexport {\r\n  object2PathValues,\r\n  string2path,\r\n  relativePath,\r\n  getSchemaPart,\r\n  oneOfFromState,\r\n  path2string,\r\n  normalizePath,\r\n  branchKeys,\r\n  getFromState,\r\n  arrayStart,\r\n  mergeUPD_PROC,\r\n  isSelfManaged,\r\n  normalizeUpdate,\r\n  setIfNotDeeper,\r\n  objMap,\r\n  setUPDATABLE,\r\n  isNPath,\r\n  multiplyPath,\r\n  normalizeArgs,\r\n  normalizeFn,\r\n  processFn,\r\n  isMapFn,\r\n  types,\r\n  updateState,\r\n  initState,\r\n  rehydrateState,\r\n  processProp,\r\n};\r\nexport {SymData, SymReset, SymClear, SymDelete, SymDataMap}\r\nexport {makeNUpdate, updatePROC, string2NUpdate};\r\n","/////////////////////////////////////////////\r\n//  Actions function\r\n/////////////////////////////////////////////\r\nimport {\r\n  getIn,\r\n  isMergeable,\r\n  memoize,\r\n  merge,\r\n  push2array,\r\n  objKeys,\r\n  isArray,\r\n  isUndefined,\r\n  isString,\r\n  deArray, toArray, isFunction, isObject\r\n} from \"./commonLib\";\r\n\r\nimport {\r\n  objMap,\r\n  getFromState,\r\n  getSchemaPart,\r\n  oneOfFromState,\r\n  path2string,\r\n  string2path,\r\n  normalizeFn,\r\n  normalizePath,\r\n  normalizeUpdate,\r\n  setIfNotDeeper,\r\n  initState,\r\n  updateState,\r\n  object2PathValues,\r\n  SymData, SymReset, SymClear, SymDataMap, rehydrateState\r\n} from \"./stateLib\";\r\n\r\n\r\n// const JSONValidator: any = require('./is-my-json-valid');\r\n\r\n\r\nclass exoPromise {\r\n  done: boolean = false;\r\n  vals: any[] = [{}, {}];\r\n\r\n  constructor() {\r\n    let self = this;\r\n    let promise: any = new Promise((resolve, reject) => {\r\n      self.setFunction(0, resolve);\r\n      self.setFunction(1, reject);\r\n    });\r\n    promise.resolve = self.execFunction.bind(self, 0);\r\n    promise.reject = self.execFunction.bind(self, 1);\r\n    promise.isPending = () => !self.done;\r\n    promise.isResolved = () => self.vals[0]['done']; // return undefined if not done, true if resolved, false if rejected\r\n    promise.isRejected = () => self.vals[1]['done'];\r\n    promise.result = () => self.done && self.vals[self.vals[0]['done'] ? 0 : 1]['rest'];\r\n    return promise;\r\n  }\r\n\r\n  setFunction(num: 0 | 1, func: any) {\r\n    let vals = this.vals[num];\r\n    vals['func'] = func;\r\n    if (vals['done']) func(...vals['rest'])\r\n  }\r\n\r\n  execFunction(num: 0 | 1, ...rest: any[]) {\r\n    if (!this.done) {\r\n      this.done = true;\r\n      let vals = this.vals[num];\r\n      vals['rest'] = rest;\r\n      vals['done'] = true;\r\n      this.vals[1 - num]['done'] = false;\r\n      if (vals['func']) vals['func'](...rest);\r\n    }\r\n  }\r\n}\r\n\r\n/////////////////////////////////////////////\r\n//  FFormCore class\r\n/////////////////////////////////////////////\r\n\r\nconst _CORES = new WeakMap();\r\n\r\nfunction fformCores(name: string) {return _CORES[name]}\r\n\r\n/** Creates a api that contains data and api for changing it */\r\nclass FFormStateManager {\r\n  private _isDispatching: boolean;\r\n  private _currentState: any;\r\n  private _reducer: any;\r\n  private _validator: any;\r\n  private _unsubscribe: any;\r\n  private _listeners: Array<(state: StateType) => void> = [];\r\n\r\n  JSONValidator: any\r\n  UPDATABLE: PROCEDURE_UPDATABLE_Type;\r\n  props: FFormApiProps;\r\n  schema: jsJsonSchema;\r\n  dispatch: any;\r\n  // JSONValidator: (values: any) => any;\r\n  name?: string;\r\n\r\n  constructor(props: FFormApiProps) {\r\n    // if ((props.getState || props.setState) && props.store) throw new Error('Expected either \"store\" or \"getState & setState\" but not all of them.');\r\n    if (((props.getState ? 1 : 0) + (props.setState ? 1 : 0)) == 1) new Error('Expected both \"getState\" and \"setState\" or none but not only one of them.');\r\n    if (props.store && !props.name) throw new Error('Expected \"name\" to be passed together with \"store\".');\r\n\r\n    const self = this;\r\n    self.props = props;\r\n    self.schema = isCompiled(props.schema) ? props.schema : compileSchema(props.objects, props.schema);\r\n    self.name = props.name || '';\r\n    self.dispatch = props.store ? props.store.dispatch : self._dispatch.bind(self);\r\n    self._reducer = formReducer();\r\n    if (props.JSONValidator) self.JSONValidator = props.JSONValidator(self.schema);\r\n    //self._validator = props.JSONValidator && props.JSONValidator(self.schema, {greedy: true});\r\n    //self.JSONValidator = self._validator && self.JSONValidator.bind(self);\r\n    self._getState = self._getState.bind(self);\r\n    self._setState = self._setState.bind(self);\r\n    if (props.setState && props.store) self._unsubscribe = self.props.store.subscribe(self._handleChange.bind(self));\r\n    if (props.name) _CORES[props.name] = self;\r\n    self.UPDATABLE = {update: {}, replace: {}, api: self};\r\n  }\r\n\r\n  private _dispatch(action: any) {\r\n    const self = this;\r\n    if (typeof action === 'function') return action(self._dispatch.bind(self));\r\n    else self._setState(self._reducer(self._getState() || {}, action));\r\n    return action;\r\n  };\r\n\r\n  _setState(state: any) {\r\n    const self = this;\r\n    if (state === self._getState()) return;\r\n    if (self.props.setState) self.props.setState(state);\r\n    else self._currentState = state;\r\n    if (self.props.store) self._setStoreState(state);\r\n    self._listeners.forEach(fn => fn(state));\r\n  }\r\n\r\n  _getState() {\r\n    const self = this;\r\n    if (self.props.store) return self._getStoreState();\r\n    else if (self.props.getState) return self.props.getState();\r\n    else return self._currentState;\r\n  }\r\n\r\n  private _setStoreState(state: any) {\r\n    return this.props.store.dispatch({type: anSetState, state, api: this});\r\n  }\r\n\r\n  private _getStoreState() {\r\n    return this.props.name && this.props.store.getState()[getFRVal()][this.props.name];\r\n  }\r\n\r\n  // private JSONValidator(data: any) {\r\n  //   this._validator(data);\r\n  //   let result = this._validator.errors;\r\n  //   if (!result) return [];\r\n  //   if (!isArray(result)) result = [result];\r\n  //   return result.map((item: any) => [item.field.replace('[\"', '.').replace('\"]', '').split('.').slice(1), item.message])\r\n  // }\r\n\r\n  private _handleChange() {\r\n    const self = this;\r\n    let nextState = self._getStoreState();\r\n    let curState = self.props.getState ? self.props.getState() : self._currentState;\r\n    if (nextState !== curState) self._setState(nextState);\r\n  }\r\n\r\n\r\n  addListener(fn: (state: StateType) => void) {\r\n    const self = this;\r\n    self._listeners.push(fn);\r\n    if (self.props.store && !self._unsubscribe) self._unsubscribe = self.props.store.subscribe(self._handleChange.bind(self));\r\n    return self.delListener.bind(self, fn);\r\n  }\r\n\r\n  delListener(fn?: (state: StateType) => void) {\r\n    const self = this;\r\n    if (isUndefined(fn)) self._listeners = [];\r\n    else {\r\n      let idx = self._listeners.indexOf(fn);\r\n      if (~idx) self._listeners.splice(idx, 1)\r\n    }\r\n    if (!self._listeners.length && self._unsubscribe && !self.props.setState) {\r\n      self._unsubscribe();\r\n      delete self._unsubscribe;\r\n    }\r\n  }\r\n}\r\n\r\n/////////////////////////////////////////////\r\n//  API\r\n/////////////////////////////////////////////\r\n\r\nclass FFormStateAPI extends FFormStateManager {\r\n  private _noExec = 0;\r\n  private _resultPromises: any;\r\n  private _newState: StateType | undefined;\r\n  private _updates: StateApiUpdateType[] = [];\r\n  private _validation: StateType | boolean | null = null;\r\n  private _defferedTimerId: any;\r\n  getState = this._getState;\r\n\r\n  //wrapped: any;\r\n\r\n  constructor(props: FFormApiProps) {\r\n    super(props);\r\n    const self = this;\r\n    if (props.state) self._setState(props.state);\r\n    else if (!self._getState()) self._setState(initState(self.UPDATABLE));\r\n    const state = self._getState();\r\n    if (!state[SymDataMap])  // no data maps, it means that state from server-side render\r\n      self._setState(rehydrateState(state, self.UPDATABLE));\r\n  }\r\n\r\n  wrapper(self: any = {}) {\r\n    const api = this;\r\n    const wrapApi = (fn: string) => self[fn] || api[fn];\r\n    const wrapPath = (path: null | string | Path = './') => path && normalizePath(path, self.path);\r\n    const wrapOpts = (opts: any = {}, forcePath?: boolean) => {\r\n      const {path, ...rest} = opts;\r\n      if (path === null) rest.path = null;\r\n      else if (!isUndefined(path) || forcePath) rest.path = wrapPath(path || './');\r\n      return self.wrapOpts ? self.wrapOpts(rest) : rest;\r\n      //rest.noValidation = isUndefined(noValidation) ? !self.liveValidate : noValidation;\r\n    };\r\n\r\n    const wrapped = {\r\n      validate: (path: boolean | string | Path = './', ...args: any[]) => wrapApi('validate')(typeof path == 'boolean' ? path : wrapPath(path), ...args),\r\n      get: (...path: any[]) => wrapApi('get')(wrapPath(path)),\r\n      // set: (path: string | Path = [], value: any, opts?: any, ...args: any[]) => wrapThis('set')(wrapPath(path), value, wrapOpts(opts)),\r\n      setValue: (value: any, opts: any = {}, ...args: any[]) => wrapApi('setValue')(value, wrapOpts(opts)),\r\n      bind: (object: any) => {\r\n        self = object;\r\n        return wrapped\r\n      },\r\n      getValue: (opts: any = {}) => wrapped.get(SymData, opts.inital ? 'inital' : 'current', wrapPath(opts.path)),\r\n      getApi: () => api,\r\n    };\r\n    ['noExec', 'setState', 'getActive', 'getDefaultValue']\r\n      .forEach(fn => wrapped[fn] = (...args: any[]) => wrapApi(fn)(...args));\r\n    ['reset', 'clear', 'execute']\r\n      .forEach(fn => wrapped[fn] = (opts: any, ...args: any[]) => wrapApi(fn)(wrapOpts(opts, true), ...args));\r\n    ['showOnly', 'getSchemaPart']\r\n      .forEach(fn => wrapped[fn] = (path: string | Path = [], opts: any = {}, ...args: any[]) => wrapApi(fn)(wrapPath(path), wrapOpts(opts), ...args));\r\n    ['set', 'switch', 'arrayAdd', 'arrayItemOps', 'setHidden', 'showOnly']\r\n      .forEach(fn => wrapped[fn] = (path: string | Path = [], value: any, opts: any = {}, ...args: any[]) => wrapApi(fn)(wrapPath(path), value, wrapOpts(opts), ...args));\r\n    return wrapped;\r\n  }\r\n\r\n  private _clearActions() {\r\n    const self = this;\r\n    self._newState = undefined;\r\n    self._defferedTimerId = null;\r\n    self._validation = null;\r\n    self._updates = [];\r\n    self._promise(true);\r\n  }\r\n\r\n  private _execBatch(updates: StateApiUpdateType[], opts: APIOptsType, promises: any, forceValidation: StateType | boolean | null) {\r\n    const self = this;\r\n    let action = {type: anUpdateState, state: self._newState, updates, api: self, forceValidation, opts, promises};\r\n    self._clearActions();\r\n    //console.log(' _execBatch.forceValidation', JSON.stringify(forceValidation));\r\n    self.dispatch(updateState.bind(action));\r\n    return promises;\r\n  }\r\n\r\n  private _setExecution(addUpdates: any, opts: APIOptsType = {}) {\r\n    if (opts.setExecution) return opts.setExecution(addUpdates, opts);\r\n    const self = this;\r\n    if (addUpdates) push2array(self._updates, addUpdates);\r\n    // console.log('---------------- added updates', updates);\r\n    if (opts.force === true && self._noExec > 0) self._noExec--;\r\n    let promises = self._promise();\r\n    if (opts.execute === false || self._noExec) return promises;\r\n    if (self._defferedTimerId) clearTimeout(self._defferedTimerId);\r\n    //console.log(' _setExecution._validation', JSON.stringify(self._validation));\r\n    if (opts.execute === true) self._execBatch(self._updates, opts, promises, self._validation);\r\n    else self._defferedTimerId = setTimeout(self._execBatch.bind(self, self._updates, opts, promises, self._validation), opts.execute || 0);\r\n\r\n    return promises;\r\n  }\r\n\r\n  private _promise(reset?: true): apiPromises {\r\n    const self = this;\r\n    if (reset) self._resultPromises = null;\r\n    if (!self._resultPromises) {\r\n      self._resultPromises = new exoPromise();\r\n      self._resultPromises.vAsync = new exoPromise();\r\n    }\r\n    return self._resultPromises;\r\n  }\r\n\r\n  //getState = () => this._getState();\r\n  //setState = (state: StateType) => this._setState(state);\r\n\r\n  noExec = () => {this._noExec++;};\r\n\r\n  execute = (opts: APIOptsType = {}) => {\r\n    return this._setExecution(null, merge(opts, {execute: true}));\r\n  };\r\n\r\n  setState = (state: StateType, opts: APIOptsType = {}) => {\r\n    const self = this;\r\n    self._updates = []; // reset all previous updates\r\n    self._newState = state;\r\n    return self._setExecution(null, opts);\r\n  };\r\n\r\n  getActive = () => this.get(SymData, 'active');\r\n\r\n  validate = (path: boolean | string | Path = true, opts: APIOptsType = {}) => {\r\n    const self = this;\r\n    if (typeof path == 'boolean') self._validation = path;\r\n    else normalizeUpdate({path: path, value: true}, self.getState()).forEach(i => self._validation = setIfNotDeeper(self._validation || {}, true, i.path));\r\n    return self._setExecution(null, opts);\r\n  };\r\n\r\n  get = (...pathes: Array<string | Path>): any => getFromState(this.getState(), ...pathes);\r\n\r\n  set = (path: string | Path | null, value: any, opts: APIOptsType & { replace?: any, setOneOf?: number, macros?: string } = {}) => {\r\n    if (path === null) return this._setExecution([null], opts);\r\n    let {...update} = opts;\r\n    (update as StateApiUpdateType).path = path;\r\n    (update as StateApiUpdateType).value = value;\r\n    return this._setExecution((update as StateApiUpdateType), opts);\r\n  };\r\n\r\n  getValue = (opts: { path?: string | Path, inital?: boolean } = {}): any => this.get(SymData, opts.inital ? 'inital' : 'current', opts.path || []);\r\n\r\n  setValue = (value: any, opts: APIOptsType & { path?: string | Path, replace?: any, setOneOf?: number, inital?: boolean } = {}) => {\r\n    let {path, inital, replace, ...update} = opts;\r\n    if (path === null) return this._setExecution([null], opts);\r\n    path = normalizePath(path || []).slice();\r\n    if (~path.indexOf(SymData)) (update as StateApiUpdateType).path = path;\r\n    else {\r\n      let state = this.getState();\r\n      while (!getIn(state, path) && path.length) {\r\n        let nm = path.pop();\r\n        value = {[nm]: value};\r\n        replace = {[nm]: replace};\r\n      }\r\n      (update as StateApiUpdateType).path = [inital ? '@inital' : '@current'].concat(path);\r\n    }\r\n    (update as StateApiUpdateType).value = value;\r\n    (update as StateApiUpdateType).replace = replace;\r\n    return this._setExecution(update, opts);\r\n  };\r\n\r\n  getDefaultValue = () => this.get(SymData, 'default');\r\n\r\n  switch = (path: string | Path | null, value: any, opts: APIOptsType & { replace?: any, setOneOf?: number, macros?: string } = {}) =>\r\n    this.set(path, value, {...opts, macros: 'switch'});\r\n\r\n  setMessages = (value: anyObject | null, opts: APIOptsType & { priority?: number, group?: number, path?: string | Path, props?: any }) => {\r\n    let {priority = 0, group = 3, path = [], props = undefined, ...rest} = opts || {};\r\n    const msgPath = '@/messages/' + priority + '/texts/' + group;\r\n    if (value === null) {\r\n      this.switch([path, msgPath], [], rest);\r\n      if (isObject(props)) this.switch([path, '@/messages/' + priority], props, rest);\r\n    } else {\r\n      object2PathValues(value, {arrayAsValue: true}).forEach(p => {\r\n        this.set([path, p, msgPath], p.pop(), rest);\r\n        if (isObject(props)) this.set([path, p, '@/messages/' + priority], props, rest);\r\n      })\r\n    }\r\n  };\r\n\r\n  reset = (opts: APIOptsType & { path?: string | Path, status?: string, value?: any } = {}) =>\r\n    opts.status ? this.set(normalizePath(opts.path || '/'), isUndefined(opts.value) ? SymReset : opts.value,\r\n      {[SymData]: ['status', opts.status], macros: 'switch'}) : this.setValue(SymReset, opts);\r\n\r\n  clear = (opts: APIOptsType & { path?: string | Path } = {}) => this.setValue(SymClear, opts);\r\n\r\n  arrayAdd = (path: string | Path, value: number | any[] = 1, opts: APIOptsType = {}) =>\r\n    this._setExecution({path, value: value, macros: 'array', ...opts}, opts);\r\n\r\n  arrayItemOps = (path: string | Path, value: 'up' | 'down' | 'first' | 'last' | 'del' | 'move' | 'shift', opts: APIOptsType & { value?: number } = {}) =>\r\n    this._setExecution({path, op: value, macros: 'arrayItem', ...opts}, opts);\r\n\r\n  setHidden = (path: string | Path, value = true, opts: APIOptsType = {}) =>\r\n    this._setExecution([{path: [path, '@', '/params/hidden'], value, ...opts}], opts);\r\n\r\n  showOnly = (path: string | Path, opts: APIOptsType = {}) => {\r\n    path = normalizePath(path);\r\n    return this._setExecution([\r\n      {path: [path.slice(0, -1), '/*/@/params/hidden'], value: true, ...opts},\r\n      {path: [path, '@', '/params/hidden'], value: false, ...opts},\r\n    ], opts);\r\n  };\r\n\r\n  getSchemaPart = (path: string | Path) => {\r\n    path = normalizePath(path);\r\n    return getSchemaPart(this.schema, path, oneOfFromState(this.getState()))\r\n  }\r\n\r\n}\r\n\r\n\r\n/////////////////////////////////////////////\r\n//  Actions names\r\n/////////////////////////////////////////////\r\n\r\nconst anSetState = 'FFROM_SET_STATE';\r\nconst anUpdateState = 'FFROM_UPDATE_STATE';\r\n\r\n/////////////////////////////////////////////\r\n//  Reducer\r\n/////////////////////////////////////////////\r\n\r\n\r\nlet formReducerValue = 'fforms';\r\n\r\nfunction getFRVal() {\r\n  return formReducerValue\r\n}\r\n\r\nfunction formReducer(name?: string): any {\r\n  if (name) formReducerValue = name;\r\n  const reducersFunction = {};\r\n\r\n  function replaceFormState(storageState: any, name: string, formState: any) {\r\n    if (storageState[name] !== formState) {\r\n      let resultState = {...storageState};\r\n      resultState[name] = formState;\r\n      return resultState;\r\n    }\r\n    return storageState\r\n  }\r\n\r\n  reducersFunction[anSetState] = (state: any, action: any): any => {\r\n    if (action.api.props.store) return replaceFormState(state, action.api.name, action.state);\r\n    return action.state\r\n  };\r\n\r\n  return (state: any = {}, action: ActionType) => {\r\n    let reduce = reducersFunction[action.type];\r\n    return reduce ? reduce(state, action) : state;\r\n  }\r\n}\r\n\r\n/////////////////////////////////////////////\r\n//  Schema compile functions\r\n/////////////////////////////////////////////\r\n\r\nconst compileSchema = memoize((fformObjects: formObjectsType, schema: JsonSchema): jsJsonSchema => schemaCompiler(fformObjects, schema));\r\n\r\nfunction schemaCompiler(fformObjects: formObjectsType = {}, schema: JsonSchema): jsJsonSchema {\r\n  if (isCompiled(schema)) return schema;\r\n\r\n  let {ff_validators, ff_dataMap, ff_oneOfSelector, ...rest} = schema;\r\n  const result: any = isArray(schema) ? [] : {ff_compiled: true};\r\n\r\n  ff_validators && (result.ff_validators = toArray(objectResolver(fformObjects, ff_validators)).map(f => normalizeFn(f)));\r\n  ff_dataMap && (result.ff_dataMap = objectResolver(fformObjects, ff_dataMap));\r\n  ff_oneOfSelector && (result.ff_oneOfSelector = objectResolver(fformObjects, normalizeFn(ff_oneOfSelector)));\r\n  //if (isFunction(result.ff_oneOfSelector)) result.ff_oneOfSelector = {$: result.ff_oneOfSelector};\r\n\r\n  objKeys(rest).forEach(key => {\r\n    switch (key) {\r\n      case 'ff_custom':\r\n      case 'ff_preset':\r\n      case 'ff_layout':\r\n      case 'ff_data':\r\n      case 'ff_params':\r\n      case 'ff_placeholder':\r\n      case 'ff_props':\r\n      case 'ff_enumExten':\r\n      case 'default':\r\n      case 'enum':\r\n        result[key] = rest[key];\r\n        break;\r\n      case 'definitions':\r\n      case 'properties':\r\n      case 'patternProperties':\r\n      case 'dependencies':\r\n        result[key] = objMap(rest[key], schemaCompiler.bind(null, fformObjects));\r\n        break;\r\n      default:\r\n        if (isMergeable(rest[key])) result[key] = schemaCompiler(fformObjects, rest[key]);\r\n        else result[key] = rest[key];\r\n        break;\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction isCompiled(schema: any): schema is jsJsonSchema {\r\n  return getIn(schema, 'ff_objects');\r\n}\r\n\r\nfunction testRef(refRes: any, $_ref: string, track: string[]) {\r\n  if (isUndefined(refRes)) throw new Error('Reference \"' + $_ref + '\" leads to undefined object\\'s property in path: ' + path2string(track));\r\n  return true;\r\n}\r\n\r\nfunction objectDerefer(_objects: any, obj2deref: any, track: string[] = []) { // todo: test\r\n  if (!isMergeable(obj2deref)) return obj2deref;\r\n  let {$_ref = '', ...restObj} = obj2deref;\r\n  $_ref = $_ref.split(':');\r\n  const objs2merge: any[] = [];\r\n  for (let i = 0; i < $_ref.length; i++) {\r\n    if (!$_ref[i]) continue;\r\n    let path = string2path($_ref[i]);\r\n    if (path[0] !== '^') throw new Error('Can reffer only to ^');\r\n    let refRes = getIn({'^': _objects}, path);\r\n    testRef(refRes, $_ref[i], track.concat('@' + i));\r\n    if (isMergeable(refRes)) refRes = objectDerefer(_objects, refRes, track.concat('@' + i));\r\n    objs2merge.push(refRes);\r\n  }\r\n  let result = isArray(obj2deref) ? [] : {};\r\n\r\n  for (let i = 0; i < objs2merge.length; i++) result = merge(result, objs2merge[i]);\r\n  return merge(result, objMap(restObj, objectDerefer.bind(null, _objects), track));\r\n  //objKeys(restObj).forEach(key => result[key] = isMergeable(restObj[key]) ? objectDerefer(_objects, restObj[key]) : restObj[key]);\r\n}\r\n\r\nfunction objectResolver(_objects: any, obj2resolve: any, track: string[] = []): any { // todo: test\r\n  const convRef = (refs: string, prefix = '') => deArray(refs.split('|').map((ref, i) => {\r\n    ref = ref.trim();\r\n    if (isRef(ref)) prefix = ref.substr(0, ref.lastIndexOf('/') + 1);\r\n    else ref = prefix + ref;\r\n    let refRes = getIn(_objs, string2path(ref));\r\n    testRef(refRes, ref, track.concat('@' + i));\r\n    return refRes;\r\n  }));\r\n  const isRef = (val: string) => val.substr(0, 2) == '^/';\r\n  const _objs = {'^': _objects};\r\n  const result = objectDerefer(_objects, obj2resolve);\r\n  const retResult = isArray(result) ? [] : {};\r\n  objKeys(result).forEach((key) => {\r\n    //const resolvedValue = isString(result[key]) && result[key].substr(0, 2) == '^/' ? convRef(result[key]) : result[key];\r\n    let resolvedValue = result[key];\r\n    if (isString(resolvedValue) && isRef(resolvedValue.trim())) {\r\n      resolvedValue = convRef(resolvedValue);\r\n      if (key !== '$' && key[0] !== '_' && (isFunction(resolvedValue) || isArray(resolvedValue) && resolvedValue.every(isFunction)))\r\n        resolvedValue = {$: resolvedValue}\r\n    }\r\n    if (key[0] == '_') retResult[key] = resolvedValue;  //do only resolve for keys that begins with _ \r\n    else if (isMergeable(resolvedValue)) retResult[key] = objectResolver(_objects, resolvedValue, track.concat(key));\r\n    else retResult[key] = resolvedValue;\r\n  });\r\n\r\n  return retResult\r\n}\r\n\r\n\r\nexport {anSetState, getFRVal, FFormStateAPI, formReducer, fformCores, objectDerefer, objectResolver}","/** @jsx h */\r\n\r\nimport {createElement as h, Component} from 'react';\r\n//const React = require('preact');\r\n\r\nimport {\r\n  toArray,\r\n  deArray,\r\n  getIn,\r\n  isArray,\r\n  isEqual,\r\n  isObject,\r\n  isMergeable,\r\n  isString,\r\n  isUndefined,\r\n  isFunction,\r\n  merge,\r\n  objKeys,\r\n  memoize,\r\n} from \"./commonLib\";\r\nimport {\r\n  arrayStart,\r\n  isSelfManaged,\r\n  path2string,\r\n  string2path,\r\n  SymData,\r\n  normalizePath,\r\n  objMap,\r\n  setUPDATABLE,\r\n  mergeUPD_PROC,\r\n  branchKeys,\r\n  isNPath,\r\n  multiplyPath,\r\n  processFn,\r\n  isMapFn,\r\n  normalizeFn,\r\n  normalizeArgs,\r\n  processProp\r\n} from './stateLib'\r\nimport {FFormStateAPI, fformCores, objectResolver, formReducer} from './api'\r\nimport Timeout = NodeJS.Timeout;\r\n\r\n\r\n/////////////////////////////////////////////\r\n//  Main class\r\n/////////////////////////////////////////////\r\nclass FForm extends Component<any, any> {\r\n  static params = ['readonly', 'disabled', 'viewer', 'liveValidate', 'liveUpdate'];\r\n  private _unsubscribe: any;\r\n  private _savedState: any;\r\n  private _savedValue: any;\r\n  _root: any;\r\n\r\n  api: any;\r\n  formName: any;\r\n  schema: any;\r\n  utils: any;\r\n  objects: any;\r\n  parent: any;\r\n\r\n  constructor(props: FFormProps, context: any) {\r\n    super(props, context);\r\n    const self = this;\r\n    let {core: coreParams} = props;\r\n\r\n    self.api = coreParams instanceof FFormStateAPI ? coreParams : self._getCoreFromParams(coreParams, context);\r\n    self.parent = props.parent;\r\n    // self.focus = self.focus.bind(self);\r\n    const nextProps = {...props};\r\n    if (props.touched !== null) nextProps.touched = !!nextProps.touched;\r\n    FForm.params.forEach(k => {\r\n      if (!isUndefined(nextProps[k])) nextProps[k] = (v: any) => isUndefined(v) ? props[k] : v\r\n    });\r\n    self._updateValues(nextProps);\r\n    // self.api.reset({status: 'untouched'});\r\n    if (!props.noValidation) self.api.validate(true);\r\n    self._unsubscribe = self.api.addListener(self._handleStateUpdate.bind(self));\r\n    self._setRef = self._setRef.bind(self);\r\n    self._submit = self._submit.bind(self);\r\n    self._getPath = self._getPath.bind(self);\r\n    Object.defineProperty(self, \"objects\", {get: () => self.api.props.objects});\r\n    Object.defineProperty(self, \"valid\", {get: () => self.api.get('/@/status/valid')});\r\n\r\n  }\r\n\r\n  private _setRef(FField: any) {\r\n    this._root = FField;\r\n  }\r\n\r\n  _updateValues(nextProps: FFormProps, prevProps: any = {}) {\r\n    const {state, value, inital, extData, noValidation, touched} = nextProps;\r\n    const self = this;\r\n    if (state && state !== prevProps.state) self.api.setState(state);\r\n    if (inital && inital !== prevProps.inital) self.api.setValue(inital, {replace: true, inital: true, noValidation});\r\n    if (value && value !== prevProps.value) self.api.setValue(value, {replace: true, noValidation});\r\n    if (extData && extData !== prevProps.extData) objKeys(extData).forEach(key => (self.api.set(key, (extData as any)[key], {replace: true})));\r\n    if (!isUndefined(touched) && touched !== null && touched !== prevProps.touched) self.api.reset({status: 'untouched', value: touched ? 0 : undefined});\r\n    FForm.params.forEach(k => (!isUndefined(nextProps[k]) && nextProps[k] !== prevProps[k] &&\r\n      self.api.switch('/@/params/' + k, nextProps[k])));\r\n  }\r\n\r\n  _handleStateUpdate(state: StateType) {\r\n    const self = this;\r\n    if (self._savedState == state) return;\r\n    self._savedState = state;\r\n    if (self.props.onStateChange) self.props.onStateChange(state, self);\r\n    if (state[SymData].current !== self._savedValue) {\r\n      self._savedValue = state[SymData].current;\r\n      if (self.props.onChange) self.props.onChange(self._savedValue, self)\r\n    }\r\n    if (self._root) self._root.setState({branch: state});\r\n  }\r\n\r\n\r\n  _submit(event: any) {\r\n    const self = this;\r\n    const setPending = (val: any) => self.api.set([], val, {[SymData]: ['status', 'pending']});\r\n\r\n    self.api.set([], 0, {[SymData]: ['status', 'untouched'], execute: true, macros: 'switch'});\r\n\r\n    if (self.props.onSubmit) {\r\n      self.api.setMessages(null, {execute: true});\r\n      let result = self.props.onSubmit(event, self._savedValue, self);\r\n      if (result && result.then && typeof result.then === 'function') { //Promise\r\n        setPending(1);\r\n        result.then((val: any) => {\r\n          setPending(0);\r\n          self.api.setMessages(val)\r\n        }, (reason: any) => {\r\n          setPending(0);\r\n          self.api.setMessages(reason)\r\n        })\r\n      } else self.api.setMessages(result)\r\n    }\r\n  }\r\n\r\n  _getCoreFromParams(coreParams: any, context: any) {\r\n    if (isUndefined(coreParams.store) && context.store) return new FFormStateAPI(merge(coreParams, {store: context.store}));\r\n    else return new FFormStateAPI(coreParams);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: FFormProps) {\r\n    const self = this;\r\n    self.parent = nextProps.parent;\r\n    let core = nextProps.core;\r\n    let FFrormApiUpdate = false;\r\n\r\n    if (core instanceof FFormStateAPI && self.api !== core) {\r\n      self._unsubscribe();\r\n      self.api = core;\r\n      self._unsubscribe = self.api.addListener(self._handleStateUpdate.bind(self));\r\n      FFrormApiUpdate = true;\r\n    }\r\n\r\n    self._updateValues(nextProps, self.props);\r\n    return FFrormApiUpdate || !isEqual(self.props, nextProps, {skipKeys: ['core', 'state', 'value', 'inital', 'extData', 'fieldCache', 'flatten', 'noValidate', 'parent', 'onSubmit', 'onChange', 'onStateChange']});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._unsubscribe) this._unsubscribe();\r\n  }\r\n\r\n  // focus(path: Path | string): void {\r\n  //   if (this._root) this._root.focus(normalizePath(path));\r\n  // };\r\n\r\n  getRef(path: Path | string) {\r\n    return this._root && this._root.getRef(path)\r\n  }\r\n\r\n  _getPath() {\r\n    return '#';\r\n  }\r\n\r\n  getDataObject(branch: any, ffield: FField) {\r\n    return getIn(branch, SymData)\r\n  }\r\n\r\n  getValue(branch: any, ffield: FField) {\r\n    if (isSelfManaged(branch)) return getIn(branch, SymData, 'value');\r\n    else return this.api.getValue({path: ffield.path})\r\n  }\r\n\r\n  getBranch(path: string) {\r\n    return this.api.get(path)\r\n  }\r\n\r\n  render() {\r\n    const self = this;\r\n    let {core, state, value, inital, extData, fieldCache, touched, parent, onSubmit, onChange, onStateChange, _$useTag: UseTag = 'form', ...rest} = self.props;\r\n    FForm.params.forEach(k => delete (rest as any)[k]);\r\n    return (\r\n      <UseTag {...rest} onSubmit={self._submit}>\r\n        <FField ref={self._setRef} id={rest.id ? rest.id + '/#' : undefined} name={self.api.name} pFForm={self} getPath={self._getPath} FFormApi={self.api}/>\r\n      </UseTag>\r\n    )\r\n  }\r\n}\r\n\r\nclass FRefsGeneric extends Component<any, any> {\r\n  $refs: any = {};\r\n\r\n  constructor(props: any, context: any) {\r\n    super(props, context);\r\n    const self = this;\r\n    self._setRef = self._setRef.bind(self);\r\n    // self._refProcess = self._refProcess.bind(self);\r\n  }\r\n\r\n  getRef(path: Path) {\r\n    const self = this;\r\n    if (!path.length) return self;\r\n    if (path.length == 1 && !self.$refs[path[0]].getRef) return self.$refs[path[0]];\r\n    return self.$refs[path[0]] && self.$refs[path[0]].getRef && self.$refs[path[0]].getRef(path.slice(1));\r\n  }\r\n\r\n  protected _setRef(name: string) {\r\n    const self = this;\r\n    return (v: any) => self.$refs[name] = v\r\n  }\r\n\r\n  protected _refProcess(defaultName: string, $reactRef: any) {\r\n    const self = this;\r\n    if ($reactRef === true) return self._setRef(defaultName);\r\n    else if (isString($reactRef)) return self._setRef($reactRef);\r\n    else if (isMergeable($reactRef))\r\n      return objMap($reactRef, self._refProcess.bind(self, defaultName));\r\n    return $reactRef;\r\n  }\r\n}\r\n\r\n\r\n/////////////////////////////////////////////\r\n//  FField class\r\n/////////////////////////////////////////////\r\nclass FField extends FRefsGeneric {\r\n  private _mappedData: any = {};\r\n  private _builderData: any = {};\r\n  private _rebuild = true;\r\n  private _cached?: { value: any, opts: any };\r\n  private _cachedTimeout?: Timeout;\r\n  // private _enumOptions: any;\r\n  private _isNotSelfManaged: boolean | undefined;\r\n  private _blocks: string[] = [];\r\n  private _widgets: object;\r\n  private _ff_components: object;\r\n  private _maps: NPM4WidgetsType = {};\r\n  private _$_parse: any;\r\n  _forceCacheUpdate: boolean = false;\r\n\r\n  get: Function | null = null;\r\n  ff_layout: FFLayoutGeneric<jsFFCustomizeType>;\r\n  $branch: any;\r\n  schemaPart: jsJsonSchema;\r\n\r\n  liveValidate: boolean;\r\n  liveUpdate: boolean;\r\n  path: any;\r\n  api: any;\r\n  pFForm: any;\r\n  stateApi: any;\r\n\r\n  constructor(props: any, context: any) {\r\n    super(props, context);\r\n    const self = this;\r\n    Object.defineProperty(self, \"path\", {get: () => self.props.getPath()});\r\n    Object.defineProperty(self, \"pFForm\", {get: () => self.props.pFForm});\r\n    Object.defineProperty(self, \"liveValidate\", {get: () => getIn(self.getData(), 'params', 'liveValidate')});\r\n    Object.defineProperty(self, \"liveUpdate\", {get: () => getIn(self.getData(), 'params', 'liveUpdate')});\r\n    Object.defineProperty(self, \"value\", {get: () => self.props.pFForm.getValue(self.state.branch, self)});\r\n    Object.defineProperty(self, \"stateApi\", {get: () => self.props.pFForm.api});\r\n    self.state = {branch: self.pFForm.getBranch(self.path)};\r\n    self.$branch = self.state.branch;\r\n    self._updateStateApi(props.pFForm.api);\r\n    self.wrapFns = self.wrapFns.bind(self);\r\n  }\r\n\r\n  getRef(path: Path | string) {\r\n    path = normalizePath(path);\r\n    const self = this;\r\n    if (!path.length) return self.$refs['@Main'];\r\n    if (path[0][0] == '@') return path.length == 1 ? self.$refs[path[0]] : self.$refs[path[0]].getRef(path.slice(1));\r\n    return self.$refs['@Main'] && self.$refs['@Main'].getRef && self.$refs['@Main'].getRef(path)\r\n  }\r\n\r\n  _resolver(obj: any) {\r\n    const self = this;\r\n    try {\r\n      return objectResolver(self.pFForm.objects, obj);\r\n    } catch (e) {\r\n      throw self._addErrPath(e)\r\n    }\r\n    //return result[SymData] ? merge(result, self._bind2self(result[SymData])) : result;\r\n  }\r\n\r\n  _addErrPath(e: any) {\r\n    e.message = e.message + ', in form \\'' + (this.pFForm.props.name || '') + '\\', path: \\'' + this.path + '\\'';\r\n    return e\r\n  }\r\n\r\n  _updateStateApi(stateApi: any) {\r\n    const self = this;\r\n\r\n    if (stateApi) {\r\n      const api = stateApi.wrapper({\r\n        get path() {return self.path},\r\n        // wrapOpts: (rest: any) => {\r\n        //   if (isUndefined(rest.noValidation)) rest.noValidation = !self.liveValidate;\r\n        //   return rest\r\n        // }\r\n      });\r\n      api._set = api.set;\r\n      api._setValue = api.setValue;\r\n      api.set = (...args: any[]) => self._cacheValue(args[0], args[1], 'set', args[2]) || api._set(...args);\r\n      api.setValue = (...args: any[]) => self._cacheValue((args[1] || {}).path, args[0], 'setValue', args[1]) || api._setValue(...args);\r\n      self.api = api;\r\n    }\r\n  }\r\n\r\n  _updateCachedValue(update = this.liveUpdate || this._forceCacheUpdate) {\r\n    const self = this;\r\n    self._cachedTimeout = undefined;\r\n    if (update && self._cached) {\r\n      self._forceCacheUpdate = false;\r\n      self.stateApi.setValue(self._cached.value, {noValidation: !self.liveValidate, path: self.path, ...self._cached.opts});\r\n      self._cached = undefined;\r\n    }\r\n  }\r\n\r\n  _cacheValue(path: any, value: any, fn: string = 'set', opts: any = {}): boolean | undefined {\r\n    //if (path === null) return;\r\n    const self = this;\r\n    let fieldCache = self.pFForm.props.fieldCache;\r\n    if (isUndefined(fieldCache) || fieldCache === true) fieldCache = 40;\r\n\r\n    let valueSet = fn === 'setValue' && (!path || path == './' || path == '.');\r\n    if (!valueSet) {\r\n      let fPath = self.path;\r\n      path = '#/' + path2string(normalizePath(path, self.path)) + (fn === 'setValue' ? '/@/value' : '');\r\n      valueSet = (path == fPath + '/@/value') || (path == '#/@/current/' + fPath.slice(2));\r\n    }\r\n    // console.log(valueSet, 'setValue=', setValue,'path=',path)\r\n    if (valueSet) {\r\n      let prevData = self.getData();\r\n      if (self._cached) prevData = merge(prevData, {value: self._cached.value}, {replace: {value: opts.replace}});\r\n      self._cached = {value, opts}; //{value: self._parseValue(value, prevData)};\r\n      if (fieldCache) {\r\n        if (self._cachedTimeout) clearTimeout(self._cachedTimeout);\r\n        self._cachedTimeout = setTimeout(self._updateCachedValue.bind(self), fieldCache);\r\n        const data = merge(prevData, {value: self._cached.value}, {replace: {value: opts.replace}});\r\n        const mappedData = self._mappedData;\r\n\r\n        self.get = (...pathes: any[]) => {\r\n          let path = normalizePath(pathes, self.path);\r\n          if (isEqual(path, normalizePath('./@value', self.path))) return data.value;\r\n          return self.stateApi.get(path)\r\n        };\r\n        self._setMappedData(prevData, data, true);\r\n        self.get = null;\r\n        if (mappedData != self._mappedData) self.forceUpdate();\r\n      } else self._updateCachedValue();\r\n      return true;\r\n    }\r\n    return;\r\n  }\r\n\r\n  wrapFns(val: any) {\r\n    const self = this;\r\n    if (isFunction(val)) val = {$: val};\r\n    if (isMapFn(val)) {\r\n      const map = val.norm ? val : normalizeFn(val, self.wrapFns);\r\n      const fn = processFn.bind(self, map);\r\n      fn._map = map;\r\n      return fn\r\n    } else if (isMergeable(val)) {\r\n      const result = isArray(val) ? [] : {};\r\n      objKeys(val).forEach(key => result[key] = key[0] != '_' ? self.wrapFns(val[key]) : val[key]); //!~ignore.indexOf(key) &&\r\n      return result\r\n    }\r\n    return val\r\n  }\r\n\r\n  _build() {\r\n    const self = this;\r\n    self.state = {branch: self.pFForm.getBranch(self.path)};\r\n    self.$branch = self.state.branch;\r\n\r\n    const schemaPart: jsJsonSchema = self.api.getSchemaPart(self.path);\r\n    self.schemaPart = schemaPart;\r\n\r\n    self._isNotSelfManaged = !isSelfManaged(self.state.branch) || undefined;\r\n    if ((isArray(schemaPart.type) || isUndefined(schemaPart.type)) && !schemaPart.ff_presets)\r\n      throw new Error('schema.ff_presets should be defined explicitly for multi type');\r\n\r\n    self.ff_layout = self.wrapFns(resolveComponents(self.pFForm.objects, schemaPart.ff_layout));\r\n\r\n    let ff_components = resolveComponents(self.pFForm.objects, schemaPart.ff_custom, schemaPart.ff_presets || schemaPart.type);\r\n    ff_components = self.wrapFns(ff_components);\r\n    let {$_maps, rest: components} = extractMaps(ff_components);\r\n    self._maps = normalizeMaps($_maps);\r\n    self._widgets = {};\r\n    self._ff_components = components;\r\n    self._blocks = objKeys(components).filter(key => components[key]);\r\n    self._blocks.forEach((block: string) => {\r\n      const {_$widget, $_reactRef, ...staticProps} = components[block];\r\n      if (!_$widget) throw new Error('_$widget for \"' + block + '\" is empty');\r\n      self._widgets[block] = _$widget;\r\n      if ($_reactRef) { // $_reactRef - prop for react ref-function\r\n        const $ref = self._refProcess('@' + block, $_reactRef);\r\n        staticProps[isFunction($ref) ? 'ref' : '$_reactRef'] = $ref;\r\n      }\r\n\r\n      self._mappedData[block] = staticProps;  // properties, without reserved names      \r\n    });\r\n    self._setMappedData(undefined, self.getData(), 'build');\r\n    self._rebuild = false;\r\n  }\r\n\r\n  // todo: SSR support\r\n\r\n  _setMappedData(prevData: any, nextData: any, updateStage: boolean | 'build') {\r\n    const self = this;\r\n    let _gData = self.getData;\r\n    self.getData = () => nextData;\r\n    const _mappedData = updateProps(self._mappedData, prevData, nextData, updateStage == 'build' && self._maps.build, updateStage && self._maps.data, self._maps.every);\r\n    self.getData = _gData;\r\n    if (self._mappedData != _mappedData) {\r\n      self._mappedData = _mappedData;\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  getData(branch: any = getIn(this, 'state', 'branch')) {\r\n    return this.pFForm.getDataObject(branch, this)\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: any, nextState: any) {\r\n    const self = this;\r\n    if (nextProps.FFormApi !== self.props.FFormApi) {\r\n      self._updateStateApi(nextProps.FFormApi);\r\n      return (self._rebuild = true);\r\n    }\r\n    if (!isEqual(nextProps, self.props)) return (self._rebuild = true);\r\n\r\n    if (isUndefined(nextState.branch)) return true;\r\n    self.$branch = nextState.branch;\r\n    let updateComponent = false;\r\n\r\n    const nextData = self.getData(getIn(nextState, 'branch'));\r\n    const prevData = self.getData();\r\n    if (getIn(nextData, 'oneOf') !== getIn(prevData, 'oneOf')) return (self._rebuild = true);\r\n\r\n    try {\r\n      updateComponent = self._setMappedData(prevData, nextData, nextData !== prevData) || updateComponent;\r\n      updateComponent = updateComponent || getIn(nextData, 'params', 'norender') !== getIn(prevData, 'params', 'norender');\r\n    } catch (e) {\r\n      throw self._addErrPath(e)\r\n    }\r\n\r\n    return updateComponent\r\n  }\r\n\r\n\r\n  render() {\r\n    const self = this;\r\n    try {\r\n      if (isUndefined(self.state.branch)) return null;\r\n      if (getIn(self.getData(), 'params', 'norender')) return false;\r\n      if (self._rebuild) this._build();\r\n      return self._widgets['Builder'] ? h(self._widgets['Builder'], self._mappedData['Builder'], self._mappedData) : null;\r\n    } catch (e) {\r\n      throw self._addErrPath(e)\r\n    }\r\n  }\r\n}\r\n\r\n//enumOptions={self._enumOptions}\r\n\r\n/////////////////////////////////////////////\r\n//  Section class\r\n/////////////////////////////////////////////\r\nclass FSectionWidget extends Component<any, any> { // need to be class, as we use it's forceUpdate() method\r\n  refs: any;\r\n\r\n  _cn(props: any) {\r\n    if (!props) return props;\r\n    if (this.props._$cx && props.className && !isString(props.className)) {\r\n      if (passCx(this.props._$widget)) return {_$cx: this.props._$cx, ...props};\r\n      else return {...props, className: this.props._$cx(props.className)};\r\n    }\r\n    return props;\r\n  }\r\n\r\n  render() {\r\n    const props = this._cn(this.props.getMappedData());\r\n    return h(this.props._$widget, props, this.props.children || props.children);\r\n  }\r\n}\r\n\r\nclass FSection extends FRefsGeneric {\r\n  private _arrayStart: number = 0;\r\n  private _rebuild = true;\r\n  private _focusField: string = '';\r\n  private _arrayKey2field: { [key: string]: number } = {};\r\n  private _widgets: { [key: string]: any } = {};\r\n  private _objectLayouts: any[] = [];\r\n  private _arrayLayouts: any[] = [];\r\n  private _setWidRef: any;\r\n  private _maps: NPM4WidgetsType = {};\r\n  private _mappedData: { [key: string]: any } = {};\r\n  private _$widget: any;\r\n  private _isArray: boolean = false;\r\n  //private _setRef: any;\r\n  //$refs: { [key: string]: any } = {};\r\n\r\n  constructor(props: any, context: any) {\r\n    super(props, context);\r\n    const self = this;\r\n    //self._setRef = (name: number | string) => (item: any) => self.$refs[name] = item;\r\n    self._setWidRef = (key: number | string) => (item: any) => self._widgets[key] = item;\r\n    // self._build(self.props);\r\n  }\r\n\r\n  // focus(path: Path) {\r\n  //   const self = this;\r\n  //   let field;\r\n  //   if (!path.length) {\r\n  //     field = self.props.focusField;\r\n  //     if (isUndefined(field)) field = self.props.isArray ? '0' : (branchKeys(self.props.$branch)[0] || '');\r\n  //   } else {\r\n  //     field = path[0].toString();\r\n  //     path = path.slice(1);\r\n  //   }\r\n  //   if (self.props.isArray && field >= self.props.arrayStart) field = self._arrayIndex2key(self.props.$branch[field]) || field;\r\n  //   if (self.$refs[field] && self.$refs[field].focus) self.$refs[field].focus(path)\r\n  // }\r\n\r\n  _getMappedData(key: number) {\r\n    const self = this;\r\n    return () => self._mappedData[key]\r\n  }\r\n\r\n\r\n  _build(props: any) {\r\n\r\n    function makeLayouts_INNER_PROCEDURE(UPDATABLE: { counter: number, keys: string[] }, fields: Array<string | FFLayoutGeneric<jsFFCustomizeType>>) {\r\n      const layout: any[] = [];\r\n      fields.forEach(fieldOrLayout => {\r\n        const {keys, counter} = UPDATABLE;\r\n        if (isString(fieldOrLayout)) { // if field is string then _makeFField\r\n          let idx = UPDATABLE.keys.indexOf(fieldOrLayout);\r\n          if (~idx) {\r\n            layout.push(self._makeFField(fieldOrLayout));\r\n            UPDATABLE.keys.splice(idx, 1);\r\n          }\r\n        } else if (isObject(fieldOrLayout)) { // layout\r\n          const counter = UPDATABLE.counter++;\r\n          let {_$widget, $_fields} = normalizeLayout(counter, fieldOrLayout as FFLayoutGeneric<jsFFCustomizeType>);\r\n          layout.push(<FSectionWidget _$widget={_$widget} _$cx={_$cx} key={'widget_' + counter} ref={self._setWidRef((counter))}\r\n                                      getMappedData={self._getMappedData(counter)}>{$_fields && makeLayouts_INNER_PROCEDURE(UPDATABLE, $_fields)}</FSectionWidget>)\r\n        }\r\n      });\r\n      return layout\r\n    }\r\n\r\n    function normalizeLayout(counter: number, layout: FFLayoutGeneric<jsFFCustomizeType>) {\r\n      let {$_maps, rest} = extractMaps(layout, ['$_fields']);\r\n      // rest = self.props.$FField.wrapFns(rest, ['$_maps']);\r\n      let {$_fields, $_reactRef, _$widget = LayoutDefaultWidget, className, ...staticProps} = rest;\r\n      if ($_fields || !counter) className = merge(LayoutDefaultClass, className);\r\n      staticProps.className = className;\r\n      let refObject = self._refProcess('@widget_' + counter, $_reactRef) || {};\r\n      if (isFunction(refObject)) refObject = {'ref': refObject};\r\n      Object.assign(staticProps, refObject);\r\n      let maps = normalizeMaps($_maps, counter.toString());\r\n      mapsKeys.forEach(k => self._maps[k].push(...maps[k]));\r\n      self._mappedData[counter] = staticProps;\r\n      return {_$widget, $_fields}\r\n    }\r\n\r\n    const self = this;\r\n\r\n    const {$branch, $layout, _$cx, arrayStart, LayoutDefaultWidget = 'div', LayoutDefaultClass = {}, uniqKey, focusField} = props;\r\n\r\n    const mapsKeys = ['build', 'data', 'every'];\r\n    mapsKeys.forEach(k => self._maps[k] = []);\r\n    self.$refs = {};\r\n    self._widgets = {};\r\n    self._mappedData = {};\r\n    self._objectLayouts = [];\r\n\r\n    const UPDATABLE = {keys: self._getObjectKeys($branch), counter: 1};\r\n    self._focusField = focusField || UPDATABLE.keys[0] || '';\r\n\r\n    let {_$widget, $_fields} = normalizeLayout(0, isArray($layout) ? {$_fields: $layout} : $layout);\r\n    self._$widget = _$widget;\r\n\r\n    if ($_fields) self._objectLayouts = makeLayouts_INNER_PROCEDURE(UPDATABLE, $_fields);  // we get inital _objectLayouts and every key, that was used in makeLayouts call removed from keys \r\n    UPDATABLE.keys.forEach(fieldName => self._objectLayouts.push(self._makeFField(fieldName)));  // so here we have only keys was not used and we add them to _objectLayouts\r\n\r\n    self._arrayLayouts = [];\r\n    self._arrayKey2field = {};\r\n    if (self.props.isArray) {  // _makeArrayLayouts\r\n      for (let i = arrayStart; i < self.props.length; i++) {\r\n        let arrayKey = self._arrayIndex2key($branch[i]);\r\n        self._arrayLayouts.push(self._makeFField(i.toString(), arrayKey));\r\n        arrayKey && (self._arrayKey2field[arrayKey] = i);\r\n      }\r\n    }\r\n    self._mappedData = self._updateMappedData(undefined, self._getData($branch), 'build');\r\n    self._rebuild = false;\r\n  }\r\n\r\n  _makeFField(fieldName: string, arrayKey?: string) {\r\n    const self = this;\r\n    return <FField ref={self._setRef(arrayKey || fieldName)} key={arrayKey || fieldName} pFForm={self.props.$FField.pFForm} FFormApi={self.props.FFormApi}\r\n                   id={self.props.id ? self.props.id + (arrayKey || fieldName) : undefined}\r\n                   name={self.props.name ? self.props.name + '[' + (self.props.isArray ? '${idx}_' + (arrayKey || fieldName) : fieldName) + ']' : undefined}\r\n                   getPath={arrayKey ? self._getArrayPath.bind(self, arrayKey) : self._getObjectPath.bind(self, fieldName)}/>;\r\n  }\r\n\r\n  _arrayIndex2key($branch: any) {\r\n    return this.props.uniqKey ? getIn(this._getData($branch), string2path(this.props.uniqKey)) : undefined;\r\n  }\r\n\r\n  _getObjectKeys($branch: StateType) {\r\n    const self = this;\r\n    let keys: string[] = [];\r\n    if (self.props.isArray) for (let i = 0; i < self.props.arrayStart; i++) keys.push(i.toString());\r\n    else keys = branchKeys($branch);\r\n    return keys;\r\n  }\r\n\r\n  _getObjectPath(field: string) {\r\n    return this.props.$FField.path + '/' + field;\r\n  }\r\n\r\n  _getArrayPath(key: string) {\r\n    return this.props.$FField.path + '/' + this._arrayKey2field[key];\r\n  }\r\n\r\n  _getArrayField(key: any) {\r\n    const self = this;\r\n    return self._arrayLayouts[key - self.props.arrayStart]\r\n  }\r\n\r\n  _reorderArrayLayout(prevBranch: StateType, nextBranch: StateType, props: any) {\r\n    const self = this;\r\n    const updatedArray = [];\r\n    let doUpdate = false;\r\n    for (let i = props.arrayStart; i < props.length; i++) {\r\n      let arrayKey = self._arrayIndex2key(nextBranch[i]);\r\n      if (isUndefined(arrayKey)) throw new Error('no unique key provided for array item');\r\n      if (self.$refs[arrayKey]) self.$refs[arrayKey].setState({branch: nextBranch[i]});\r\n      let prevIndex = self._arrayKey2field[arrayKey];\r\n      if (self._arrayKey2field[arrayKey] !== i) {\r\n        self._arrayKey2field[arrayKey] = i;\r\n        doUpdate = true\r\n      }\r\n      updatedArray.push(!isUndefined(prevIndex) ? self._getArrayField(prevIndex) : self._makeFField(i.toString(), arrayKey));\r\n    }\r\n    if (self._arrayLayouts.length !== updatedArray.length) doUpdate = true;\r\n    if (doUpdate) self._arrayLayouts = updatedArray;\r\n    return doUpdate;\r\n  }\r\n\r\n  _updateMappedData(prevData: any, nextData: any, fullUpdate: boolean | 'build' = prevData !== nextData) {\r\n    const self = this;\r\n    return updateProps(self._mappedData, prevData, nextData, fullUpdate == 'build' && self._maps.build, fullUpdate && self._maps.data, self._maps.every);\r\n  }\r\n\r\n  _getData(branch = this.props.$branch) {\r\n    return this.props.$FField.getData(branch)\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: any) {\r\n    const self = this;\r\n    if (nextProps.FFormApi !== self.props.FFormApi || nextProps.oneOf !== self.props.oneOf) return self._rebuild = true;\r\n\r\n    let doUpdate = !isEqual(nextProps, self.props, {skipKeys: ['$branch']});\r\n\r\n    let prevBranch = self.props.$branch;\r\n    let nextBranch = nextProps.$branch;\r\n\r\n    if (prevBranch != nextBranch) {\r\n      let newMapped: any;\r\n      try {\r\n        newMapped = self._updateMappedData(self._getData(prevBranch), self._getData(nextBranch));\r\n      } catch (e) {\r\n        throw self.props.$FField._addErrPath(e)\r\n      }\r\n\r\n      if (newMapped != self._mappedData) { // update self._widgets\r\n        const oldMapped = self._mappedData;\r\n        self._mappedData = newMapped;\r\n        objKeys(newMapped).forEach(key => self._widgets[key] && newMapped[key] != oldMapped[key] && self._widgets[key]['forceUpdate']());\r\n      }\r\n      // update object elements or if it _isArray elements that lower than self.props.arrayStart\r\n      self._getObjectKeys(nextBranch).forEach(field => (nextBranch[field] !== prevBranch[field]) && self.$refs[field] && self.$refs[field].setState({branch: nextBranch[field]}));\r\n\r\n      if (self.props.isArray) doUpdate = self._reorderArrayLayout(prevBranch, nextBranch, nextProps) || doUpdate; // updates and reorders elements greater/equal than self.props.arrayStart\r\n\r\n    }\r\n\r\n    return doUpdate; //|| !isEqual(self.props, nextProps, {skipKeys: ['$branch']});\r\n  }\r\n\r\n  getRef(path: Path) {\r\n    const self = this;\r\n    if (!self.props.isArray || isNaN(parseInt(path[0])) || path[0] < self.props.arrayStart) return super.getRef(path);\r\n    let field = self._getArrayField(path[0]);\r\n    return field && self.$refs[field.key].getRef(path.slice(1))\r\n  }\r\n\r\n  render() {\r\n    const self = this;\r\n    let props = self.props;\r\n    try {\r\n      if (props.viewer) {\r\n        let {_$widget = UniversalViewer, ...rest} = props.viewerProps || {};\r\n        rest.inputProps = props;\r\n        rest.value = props.$FField.value;\r\n        return h(_$widget, rest)\r\n      }\r\n      if (isSelfManaged(props.$branch)) return null;\r\n      if (self._rebuild) self._build(props); // make rebuild here to avoid addComponentAsRefTo Invariant Violation error https://gist.github.com/jimfb/4faa6cbfb1ef476bd105\r\n      return <FSectionWidget _$widget={self._$widget} _$cx={props._$cx} key={'widget_0'} ref={self._setWidRef((0))}\r\n                             getMappedData={self._getMappedData(0)}>{self._objectLayouts}{self._arrayLayouts}</FSectionWidget>\r\n    } catch (e) {\r\n      throw self.props.$FField._addErrPath(e)\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/////////////////////////////////////////////\r\n//  Basic components\r\n/////////////////////////////////////////////\r\n\r\nclass GenericWidget extends FRefsGeneric {\r\n  private _children: any;\r\n  private _reactRef: any;\r\n  protected _mapped: any[];\r\n\r\n  constructor(props: any, context: any) {\r\n    super(props, context);\r\n  }\r\n\r\n  private _newWidget(key: any, obj: any, passedReactRef: anyObject = {}) {\r\n    const {_$widget: Widget = GenericWidget, className, $_reactRef, ...rest} = obj;\r\n    const self = this;\r\n    let refObject = self._refProcess(key, $_reactRef) || {};\r\n    if (isFunction(refObject)) refObject = {ref: refObject};\r\n    if (isFunction(passedReactRef)) refObject.ref = passedReactRef;\r\n    else Object.assign(refObject, passedReactRef);\r\n    return <Widget key={key}\r\n                   className={(!passCx(Widget) && this.props._$cx) ? this.props._$cx(className) : className}\r\n                   _$cx={passCx(Widget) ? this.props._$cx : undefined} {...rest} {...refObject}/>\r\n  }\r\n\r\n  protected _mapChildren(children: any, $_reactRef: anyObject) {\r\n    const self = this;\r\n    if (children !== self._children || self._reactRef !== $_reactRef) {\r\n      const prev = self._children && toArray(self._children);\r\n      const next = children && toArray(children);\r\n      self._mapped = next && next.map((ch: any, i: number) => (!isObject(ch) || ch.$$typeof) ? ch :\r\n        ((!self._mapped ||\r\n          !getIn(self._mapped, i) ||\r\n          prev[i] !== next[i] ||\r\n          getIn(self._reactRef, i) !== getIn($_reactRef, i)) ? self._newWidget(i, ch, getIn($_reactRef, i)) :\r\n          self._mapped[i]));\r\n      self._children = children;\r\n      self._reactRef = $_reactRef\r\n    }\r\n  }\r\n\r\n  protected setRef2rest(rest: anyObject, $_reactRef: anyObject) {\r\n    if (!$_reactRef) return rest;\r\n    if ($_reactRef['ref']) rest.ref = $_reactRef['ref'];\r\n    if ($_reactRef['tagRef'])\r\n      rest.tagRef = $_reactRef['tagRef'];\r\n  }\r\n\r\n  render(): any {\r\n    const self = this;\r\n    if (self.props.norender) return null;\r\n    const {_$useTag: UseTag = 'div', _$cx, className, $_reactRef, children, ...rest} = self.props;\r\n    self._mapChildren(children, $_reactRef);\r\n    self.setRef2rest(rest, $_reactRef);\r\n    return (<UseTag children={self._mapped} className={_$cx ? _$cx(className) : className} {...rest} />)\r\n  }\r\n}\r\n\r\nfunction isEmpty(value: any) {\r\n  return isMergeable(value) ? objKeys(value).length === 0 : value === undefined || value === null || value === \"\";\r\n}\r\n\r\nfunction toString(emptyMock: any, enumExten: any = {}, value: any): string {\r\n  if (isEmpty(value)) return emptyMock;\r\n  if (isArray(value)) return value.map(toString.bind(null, emptyMock, enumExten)).join(', ');\r\n  value = getExten(enumExten, value).label || value;\r\n  if (!isString(value)) return JSON.stringify(value);\r\n  return value\r\n}\r\n\r\nfunction UniversalViewer(props: any) {\r\n  let {_$useTag: UseTag = 'div', value, inputProps, _$cx, enumExten = {}, emptyMock = '(none)', ...rest} = props;\r\n  if (rest.className && _$cx) rest.className = _$cx(rest.className);\r\n\r\n  return h(UseTag, rest, toString(emptyMock, enumExten, value))\r\n}\r\n\r\n\r\nclass UniversalInput extends GenericWidget {\r\n  render() {\r\n    const self = this;\r\n    const props: any = self.props;\r\n    if (props.viewer) {\r\n      let {_$widget = UniversalViewer, ...rest} = props.viewerProps || {};\r\n      rest.inputProps = props;\r\n      rest.value = props.value;\r\n      return h(_$widget, rest)\r\n    }\r\n\r\n    let {value, _$useTag: UseTag, type, $_reactRef, _$cx, viewer, viewerProps, children, ...rest} = props;\r\n\r\n    self._mapChildren(children, $_reactRef);\r\n    self.setRef2rest(rest, $_reactRef);\r\n\r\n    if (type == 'textarea' || type == 'select') UseTag = UseTag || type;\r\n    else {\r\n      UseTag = UseTag || 'input';\r\n      if (type !== 'notInput') rest.type = type;\r\n    }\r\n    if (type !== 'notInput') rest[type === 'checkbox' ? 'checked' : 'value'] = value;\r\n    // if (rest.value === null) rest.value = '';\r\n\r\n    if (rest.className && _$cx) rest.className = _$cx(rest.className);\r\n    //console.log(rest.value);\r\n    return h(UseTag, rest, self._mapped)\r\n  }\r\n}\r\n\r\n\r\nclass Autowidth extends Component<any, any> {\r\n  static readonly sizerStyle: any = {position: 'absolute', top: 0, left: 0, visibility: 'hidden', height: 0, overflow: 'scroll', whiteSpace: 'pre'};\r\n  private _elem: any;\r\n\r\n  componentDidMount() {\r\n    const style = window && window.getComputedStyle(this.props.$FField.$refs['@Main']);\r\n    if (!style || !this._elem) return;\r\n    ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'letterSpacing'].forEach(key => this._elem.style[key] = style[key]);\r\n  }\r\n\r\n  render() {\r\n    const self = this;\r\n    const props = self.props;\r\n    const value = (isUndefined(props.value) || props.value === null ? '' : props.value.toString()) || props.placeholder || '';\r\n    return (<div style={Autowidth.sizerStyle as any} ref={(elem) => {\r\n      (self._elem = elem) &&\r\n      props.$FField.$refs['@Main'] &&\r\n      (props.$FField.$refs['@Main'].style.width = Math.max((elem as any).scrollWidth + (props.addWidth || 45), props.minWidth || 0) + 'px')\r\n    }}>{value}</div>)\r\n  }\r\n}\r\n\r\n\r\nfunction FBuilder(props: any) {\r\n  let {children: mapped, widgets} = props;\r\n  const {Title, Body, Main, Message, Wrapper, Autowidth} = widgets;\r\n\r\n  mapped = deArray(mapped);\r\n  return Wrapper ? h(Wrapper, mapped['Wrapper'],\r\n    Title ? h(Title, mapped['Title']) : '',\r\n    Body ? h(Body, mapped['Body'],\r\n      Main ? h(Main, mapped['Main']) : '',\r\n      Message ? h(Message, mapped['Message']) : '',\r\n      Autowidth ? h(Autowidth, mapped['Autowidth']) : ''\r\n    ) : ''\r\n  ) : ''\r\n}\r\n\r\n\r\nfunction Wrapper(props: any) {\r\n  let {_$useTag: WrapperW = 'div', _$cx = classNames, className, ArrayItemMenu, ArrayItemBody, arrayItem, ...rest} = props;\r\n  const {_$widget: IBodyW = 'div', className: IBodyCN = {}, ...IBodyRest} = ArrayItemBody || {};\r\n  const {_$widget: IMenuW = 'div', className: IMenuCN = {}, ...IMenuRest} = ArrayItemMenu || {};\r\n  const result = <WrapperW className={_$cx ? _$cx(className) : className} {...rest} />;\r\n  if (arrayItem) {\r\n    return (\r\n      <IBodyW className={_$cx ? _$cx(IBodyCN) : IBodyCN} {...IBodyRest}>\r\n        {result}\r\n        <IMenuW className={_$cx && _$cx(IMenuCN)} {...IMenuRest}/>\r\n      </IBodyW>\r\n    )\r\n  } else return result\r\n}\r\n\r\n\r\nfunction ItemMenu(props: any) {\r\n  const {_$useTag: UseTag = 'div', _$cx, disabled, className, buttonsProps = {}, arrayItem, buttons = [], onClick: defaultOnClick, ...rest}: { [key: string]: any } = props;\r\n  if (!arrayItem) return null;\r\n  // console.log(arrayItem)\r\n  buttons.forEach((key: string) => delete rest[key]);\r\n  return (\r\n    <UseTag className={_$cx(className)} {...rest}>\r\n      {buttons.map((key: string) => {\r\n        const {_$widget: ButW = 'button', type = 'button', disabledCheck = '', className: ButCN = {}, onClick = defaultOnClick, title = key, children = key, ...restBut} = buttonsProps[key] || {};\r\n        return (\r\n          <ButW key={key} type={type} title={title} className={_$cx ? _$cx(ButCN) : ButCN} children={children}\r\n                disabled={disabled || disabledCheck && !arrayItem[disabledCheck]} {...restBut} onClick={() => onClick(key)}/>)\r\n      })}\r\n    </UseTag>);\r\n}\r\n\r\n\r\nfunction CheckboxNull(props: any) {\r\n  const self = this;\r\n  let {checked, onChange, nullValue = null, dual, tagRef, type, ...rest} = props;\r\n  return <input type=\"checkbox\" checked={checked === true} {...rest}\r\n                onChange={(event: any) => {\r\n                  onChange(dual ? !checked : (checked === nullValue ? true : (checked === true ? false : nullValue)), event)\r\n                }}\r\n                ref={elem => {\r\n                  tagRef && tagRef(elem);\r\n                  elem && (elem.indeterminate = (checked === nullValue))\r\n                }}/>\r\n}\r\n\r\n\r\n///////////////////////////////\r\n//     Functions\r\n///////////////////////////////\r\n\r\nfunction passCx(Widget: any) {\r\n  return Widget instanceof GenericWidget\r\n}\r\n\r\nconst resolveComponents = memoize((fformObjects: formObjectsType, customizeFields: FFCustomizeType = {}, sets?: string): jsFFCustomizeType => {\r\n  if (sets) {\r\n    let $_ref = sets.split(':')\r\n      .map(v => (v = v.trim()) && (v[0] != '^' ? '^/sets/' + v : v))\r\n      .join(':') + ':' + (customizeFields.$_ref || '');\r\n    customizeFields = merge(customizeFields, {$_ref});\r\n  }\r\n  return objectResolver(fformObjects, customizeFields);\r\n});\r\n\r\nfunction extractMaps(obj: any, skip: string[] = []) {\r\n  let {$_maps, ...rest2extract} = obj;\r\n  $_maps = {...$_maps};\r\n  const rest: any = isArray(obj) ? [] : {};\r\n  objKeys(rest2extract).forEach(key => {\r\n    if (isMergeable(rest2extract[key]) && !~skip.indexOf(key)) {\r\n      let res = extractMaps(rest2extract[key], skip);\r\n      rest[key] = res.rest;\r\n      objKeys(res.$_maps).forEach((nk) => $_maps[key + '/' + nk] = res.$_maps[nk]);\r\n    } else rest[key] = rest2extract[key]\r\n  });\r\n\r\n  return {$_maps, rest};\r\n}\r\n\r\n\r\nfunction normalizeMaps($_maps: any, prePath = '') {\r\n  const result: { data: NormalizedPropsMapType[], every: NormalizedPropsMapType[], build: NormalizedPropsMapType[] } = {data: [], every: [], build: []};\r\n  objKeys($_maps).forEach(key => {\r\n    let value = $_maps[key];\r\n    if (!value) return;\r\n    const to = multiplyPath(normalizePath((prePath ? prePath + '/' : '') + key));\r\n    if (isFunction(value) || isArray(value)) {\r\n      toArray(value).forEach((fn: any) => {\r\n        const {update = 'data', replace = true, ...rest} = fn._map;\r\n        //fn._map = {update, replace, to, ...rest};\r\n        result[update].push({update, replace, ...rest, to, $: fn});\r\n      })\r\n    } else {\r\n      if (isString(value)) value = {args: value};\r\n      value = {...value, ...normalizeArgs(value.args)};\r\n      let {args, update = 'data', replace = true, ...rest} = value;\r\n      //if (!isString(path)) throw new Error('$_maps value is not recognized');\r\n      //if (path[0] === '@') path = path.substr(1);\r\n      // lse console.warn('Expected \"@\" at the begining of string');\r\n      result.data.push({args: args[0], update, replace, to, dataRequest: true, ...rest})\r\n    }\r\n  });\r\n  return result\r\n}\r\n\r\n//!map.$ && map.args[0] == 'selectorValue' && args[0]\r\nfunction updateProps(mappedData: any, prevData: any, nextData: any, ...iterMaps: Array<NormalizedPropsMapType[] | false>) {\r\n  // const getFromData = (arg: any) => isNPath(arg) ? getIn(nextData, arg) : arg;\r\n  const needUpdate = (map: NormalizedPropsMapType): boolean => isUndefined(prevData) || !map.$ ||\r\n    (map.dataRequest && map.args.some(arg => {\r\n      if (isNPath(arg)) return getIn(prevData, arg) !== getIn(nextData, arg);\r\n      if (isMapFn(arg)) return needUpdate(arg._map || arg);\r\n      return false\r\n    }));//isFunction(map.args[0])\r\n  const dataUpdates = {update: {}, replace: {}, api: {}};\r\n  iterMaps.forEach(maps => maps && maps.forEach(map => {\r\n      if (map.update == 'data' && !needUpdate(map)) return;\r\n      const value = map.$ ? map.$() : processProp(nextData, map.args);\r\n      objKeys(map.to).forEach(k => setUPDATABLE(dataUpdates, value, map.replace, map.to[k]));\r\n      if (!map.replace) mappedData = mergeUPD_PROC(mappedData, dataUpdates);\r\n    })\r\n  );\r\n  return mergeUPD_PROC(mappedData, dataUpdates);\r\n}\r\n\r\nconst getExten = (enumExten: any, value: any) => (isFunction(enumExten) ? enumExten(value) : getIn(enumExten, value)) || {};\r\n\r\n\r\nfunction classNames(...styles: any[]) {\r\n  const classes: any[] = [];\r\n\r\n  for (let i = 0; i < styles.length; i++) {\r\n    let arg = styles[i];\r\n    if (!arg) continue;\r\n\r\n    const argType = typeof arg;\r\n\r\n    if (argType === 'string' || argType === 'number') {\r\n      classes.push(this && this[arg] || arg);\r\n    } else if (isArray(arg)) {\r\n      classes.push(classNames.apply(this, arg));\r\n    } else if (argType === 'object') {\r\n      objKeys(arg).forEach(key => {\r\n          if (!arg[key]) return;\r\n          if (typeof arg[key] == 'number' || arg[key] === true) classes.push(this && this[key] || key);\r\n          else classes.push(classNames.call(this, arg[key]));\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  return classes.join(' ');\r\n}\r\n\r\n//\r\n// function selectorMap(opts: { skipFields?: string[], replaceFields?: { [key: string]: string } } = {}) { //skipFields: string[] = [], replaceFields: { [key: string]: string } = {}) {\r\n//   const skipFields = opts.skipFields || [];\r\n//   const replaceFields = opts.replaceFields || {};\r\n//   return function (value: any, props: any) {\r\n//     const {path, getFromState, schema} = props;\r\n//     let vals = (isArray(value) ? value : [value]).map(key => (replaceFields[key]) ? replaceFields[key] : key);\r\n//     let tmpPath: any = normalizePath(path.split('@')[0]);\r\n//     const selectorField = tmpPath.pop();\r\n//     let stringPath = path2string(tmpPath);\r\n//     vals = vals.filter(key => getFromState(stringPath + '/' + key));\r\n//     vals.push(selectorField);\r\n//     stringPath = stringPath + '/' + vals.join(',') + '/@/params/hidden';\r\n//     return new stateUpdates([\r\n//       {skipFields, path: stringPath, value: false, macros: 'setMultiply'}, {skipFields, path: stringPath, value: true, macros: 'setAllBut'}]);\r\n//   }\r\n// }\r\n\r\n\r\n/////////////////////////////////////////////\r\n//  fformObjects\r\n/////////////////////////////////////////////\r\n\r\n\r\nlet fformObjects: formObjectsType & { extend: (objects: any[], opts?: MergeStateOptionsArgument) => any } = {\r\n  extend: function (objects: any[], opts?: MergeStateOptionsArgument) {\r\n    return merge.all(this, objects, opts)\r\n  },\r\n  types: ['string', 'integer', 'number', 'object', 'array', 'boolean', 'null'],\r\n  widgets: {\r\n    FSection: FSection,\r\n    Generic: GenericWidget,\r\n    Input: UniversalInput,\r\n    Autowidth: Autowidth,\r\n    Builder: FBuilder,\r\n    Wrapper: Wrapper,\r\n    ItemMenu: ItemMenu,\r\n    CheckboxNull: CheckboxNull,\r\n  },\r\n  sets: {\r\n    'base': {\r\n      Wrapper: {\r\n        _$widget: '^/widgets/Wrapper',\r\n        ArrayItemMenu: {\r\n          $_ref: '^/parts/ArrayItemMenu'\r\n        },\r\n        _$cx: '^/_$cx',\r\n        $_maps: {\r\n          'className/hidden': '@/params/hidden',\r\n          'arrayItem': '@/arrayItem'\r\n        }\r\n      },\r\n      Builder: {\r\n        _$widget: '^/widgets/Builder',\r\n        _$cx: '^/_$cx',\r\n        $_maps: {\r\n          widgets: {$: '^/fn/getProp', args: ['_widgets'], update: 'build'},\r\n        },\r\n      },\r\n      //Title: {},\r\n      Body: {\r\n        _$widget: '^/widgets/Generic',\r\n        _$cx: '^/_$cx',\r\n        className: 'body',\r\n      },\r\n      //Main: {},\r\n      Message: {\r\n        _$widget: '^/widgets/Generic',\r\n        _$cx: '^/_$cx',\r\n        children: [],\r\n        $_maps: {\r\n          children: {$: '^/fn/messages', args: ['@/messages', {}]},\r\n          'className/hidden': {$: '^/fn/not', args: '@/status/touched'},\r\n        }\r\n      }\r\n    },\r\n    nBase: {\r\n      $_ref: '^/sets/base',\r\n      Main: {\r\n        _$widget: '^/widgets/Input',\r\n        _$cx: '^/_$cx',\r\n        $_reactRef: {ref: true},\r\n        viewerProps: {_$cx: '^/_$cx', emptyMock: '(no value)', className: {viewer: true}},\r\n        onChange: {$: '^/fn/eventValue|setValue'},\r\n        onBlur: {$: '^/fn/blur'},\r\n        onFocus: {$: '^/fn/focus'},\r\n        $_maps: {\r\n          // priority: '@/status/priority',\r\n          value: '@/value',\r\n          viewer: '@/params/viewer',\r\n          autoFocus: '@/params/autofocus',\r\n          readOnly: '@/params/readonly',\r\n          disabled: '@/params/disabled',\r\n          placeholder: '@/fData/placeholder',\r\n          required: '@/fData/required',\r\n          label: '@/fData/title',\r\n          'viewerProps/enumExten': '@/fData/enumExten',\r\n          id: {$: '^/fn/getProp', args: 'props/id', update: 'build'},\r\n          name: {$: '^/fn/getProp', args: 'props/name', update: 'build'},\r\n        }\r\n      },\r\n      Title: {\r\n        _$widget: '^/widgets/Generic',\r\n        _$cx: '^/_$cx',\r\n        _$useTag: 'label',\r\n        children: [],\r\n        $_maps: {\r\n          'className/required': '@/fData/required',\r\n          'children/0': '@/fData/title',\r\n          'className/hidden': {$: '^/fn/not', args: '@/fData/title'},\r\n          htmlFor: {$: '^/fn/getProp', args: ['id'], update: 'build'},\r\n          'className/title-viewer': '@/params/viewer'\r\n        }\r\n      },\r\n    },\r\n    string: {\r\n      $_ref: '^/sets/nBase',\r\n      Main: {type: 'text'}\r\n    },\r\n    textarea: {\r\n      $_ref: '^/sets/nBase',\r\n      Main: {type: 'textarea', viewerProps: {className: {viewer: false, 'viewer-inverted': true}}},\r\n      Title: {\r\n        $_maps: {\r\n          'className/title-viewer-inverted': '@/params/viewer'\r\n        }\r\n      }\r\n    },\r\n    integer: {\r\n      $_ref: '^/sets/nBase',\r\n      Main: {\r\n        type: 'number',\r\n        onChange: {$: '^/fn/eventValue|parseNumber|setValue', args: ['${value}', true, 0]},\r\n        $_maps: {\r\n          value: {$: '^/fn/iif', args: [{$: '^/fn/equal', args: ['@value', null]}, '', '@value']},\r\n        }\r\n      }\r\n    },\r\n    integerNull: {\r\n      $_ref: '^/sets/integer',\r\n      Main: {\r\n        onChange: {args: {2: null}},\r\n      }\r\n    },\r\n    number: {\r\n      $_ref: '^/sets/integer',\r\n      Main: {onChange: {args: {1: false}}, step: 'any'}\r\n    },\r\n    numberNull: {\r\n      $_ref: '^/sets/integerNull',\r\n      Main: {onChange: {args: {1: false, 2: null}}, step: 'any'}\r\n    },\r\n    'null': {$_ref: '^/sets/nBase', Main: false},\r\n    boolean: {\r\n      $_ref: '^/sets/nBase',\r\n      Main: {\r\n        type: 'checkbox',\r\n        onChange: {$: '^/fn/eventChecked|setValue|updCached'}\r\n      },\r\n    },\r\n    booleanLeft: {\r\n      $_ref: '^/sets/base',\r\n      Main: {\r\n        _$widget: '^/widgets/Generic',\r\n        _$useTag: 'label',\r\n        _$cx: '^/_$cx',\r\n        $_reactRef: {'0': {ref: true}},\r\n        children: [\r\n          {$_ref: '^/sets/nBase/Main:^/sets/boolean/Main', $_reactRef: false, viewerProps: {_$useTag: 'span'}},\r\n          {$_ref: '^/sets/nBase/Title', _$useTag: 'span', $_maps: {'className/hidden': '@/params/viewer'}}\r\n        ]\r\n      },\r\n      Title: {$_ref: '^/sets/nBase/Title', $_maps: {'className/hidden': {$: '^/fn/not', args: '@/params/viewer'}}},\r\n    },\r\n    booleanNull: {\r\n      $_ref: '^/sets/boolean',\r\n      Main: {\r\n        _$useTag: '^/widgets/CheckboxNull',\r\n        $_reactRef: {tagRef: true},\r\n        onChange: {$: '^/fn/setValue|updCached'},\r\n      },\r\n    },\r\n    booleanNullLeft: {\r\n      $_ref: '^/sets/booleanLeft',\r\n      Main: {\r\n        $_reactRef: {'0': {ref: null, tagRef: true}},\r\n        children: [{$_ref: '^/sets/booleanNull/Main'}, {}]\r\n      }\r\n    },\r\n    object: {\r\n      $_ref: '^/sets/base',\r\n      Main: {\r\n        _$widget: '^/widgets/FSection',\r\n        _$cx: '^/_$cx',\r\n        $_reactRef: true,\r\n        uniqKey: 'params/uniqKey',\r\n        LayoutDefaultClass: 'layout',\r\n        LayoutDefaultWidget: 'div',\r\n        viewerProps: {$_ref: '^/sets/nBase/Main/viewerProps'},\r\n        $_maps: {\r\n          length: '@/length',\r\n          oneOf: '@/oneOf',\r\n          isArray: {$: '^/fn/equal', args: ['@/fData/type', 'array']},\r\n          $branch: {$: '^/fn/getProp', args: '$branch', update: 'every'},\r\n          arrayStart: {$: '^/fn/getArrayStart', args: [], update: 'build'},\r\n          $FField: {$: '^/fn/getProp', args: [], update: 'build'},\r\n          FFormApi: {$: '^/fn/getProp', args: 'props/pFForm/api', update: 'build'},\r\n          id: {$: '^/fn/getProp', args: 'props/id', update: 'build'},\r\n          name: {$: '^/fn/getProp', args: 'props/name', update: 'build'},\r\n          $layout: {$: '^/fn/getProp', args: 'ff_layout', update: 'build'}\r\n        }\r\n      },\r\n      Title: {\r\n        _$widget: '^/widgets/Generic',\r\n        _$cx: '^/_$cx',\r\n        _$useTag: 'legend',\r\n        children: [\r\n          {$_ref: '^/sets/nBase/Title', _$useTag: 'span'},\r\n          {$_ref: '^/parts/ArrayAddButton'},\r\n          {$_ref: '^/parts/ArrayDelButton'},\r\n          {$_ref: '^/parts/ArrayEmpty'}],\r\n      },\r\n      Wrapper: {_$useTag: 'fieldset'},\r\n    },\r\n    array: {$_ref: '^/sets/object'},\r\n    select: {\r\n      $_ref: '^/sets/nBase',\r\n      Main: {\r\n        type: 'select',\r\n        children: [],\r\n        $_maps: {\r\n          'children': {$: '^/fn/arrayOfEnum', args: ['@/fData/enum', '@/fData/enumExten', {_$widget: 'option'}], replace: false},\r\n          'label': false\r\n        }\r\n      }\r\n    },\r\n    multiselect: {\r\n      $_ref: '^/sets/select',\r\n      Main: {\r\n        multiple: true,\r\n        onChange: {$: '^/fn/eventMultiple|setValue'}\r\n      }\r\n    },\r\n    radio: {\r\n      $_ref: '^/sets/base',\r\n      Title: {$_ref: '^/sets/nBase/Title'},\r\n      Main: {\r\n        $_ref: '^/parts/RadioSelector',\r\n        $_reactRef: true,\r\n        viewerProps: {$_ref: '^/sets/nBase/Main/viewerProps'},\r\n        $_maps: {\r\n          value: '@/value',\r\n          viewer: '@/params/viewer',\r\n          children: [\r\n            {\r\n              args: [\r\n                '@/fData/enum',\r\n                '@/fData/enumExten',\r\n                {$_reactRef: {'$_reactRef': {'0': {'ref': true}}}},\r\n                {onChange: {args: []}},\r\n                {},\r\n                true\r\n              ],\r\n            },\r\n            {args: ['@/fData/enum', '@/value']},\r\n            {args: {0: '@/fData/enum'}},\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    checkboxes: {$_ref: '^/sets/radio', Main: {$_maps: {children: {'0': {args: {'3': {type: 'checkbox', onChange: {$: '^/fn/eventCheckboxes|setValue|updCached'}}, '5': '[]'}}}}}},\r\n    radioNull: {Main: {$_maps: {children: {'0': {args: {'3': {onClick: '^/fn/eventValue|radioClear|updCached'}}}}}}},\r\n    radioEmpty: {Main: {$_maps: {children: {'0': {args: {'3': {onClick: {$: '^/fn/eventValue|radioClear|updCached', args: ['${value}', '']}}}}}}}},\r\n    hidden: {\r\n      Builder: {\r\n        className: {hidden: true},\r\n        $_maps: {'className/hidden': false}\r\n      }\r\n    },\r\n    autowidth: {\r\n      Autowidth: {$_ref: '^/parts/Autowidth'},\r\n      Wrapper: {className: {shrink: true}},\r\n    },\r\n    noArrayControls: {Wrapper: {$_maps: {'arrayItem': false}}},\r\n    noArrayButtons: {Title: {$_ref: '^/sets/nBase/Title'}},\r\n    inlineItems: {Main: {className: {'inline': true}}},\r\n    inlineTitle: {Wrapper: {className: {'inline': true}}},\r\n    inlineLayout: {Main: {LayoutDefaultClass: {'inline': true}}},\r\n    inlineArrayControls: {Wrapper: {ArrayItemBody: {className: {'inline': true}}}},\r\n    arrayControls3but: {Wrapper: {ArrayItemMenu: {buttons: ['up', 'down', 'del'],}}},\r\n    noTitle: {Title: false},\r\n    shrink: {Wrapper: {className: {'shrink': true}}},\r\n    expand: {Wrapper: {className: {'expand': true}}},\r\n    bnnDual: {Main: {children: {0: {dual: true}}}}\r\n  },\r\n  fn: {\r\n    api: function (fn: string, ...args: any[]) {this.api[fn](...args)},\r\n    format: function (str: string, ...args: any[]) {\r\n      return args.reduce((str, val, i) => str.replace('${' + i + '}', val), str)\r\n    },\r\n    iif: (iif: any, trueVal: any, falseVaL: any) => (iif ? [trueVal] : [falseVaL]),\r\n    not: function (v: any) {\r\n      return [!v]\r\n    },\r\n    equal: function (a: any, ...args: any[]) {return [args.some(b => a === b)]},\r\n    messages: function (messages: any[], staticProps: anyObject = {}) {\r\n      const {className: cnSP = {}, ...restSP} = staticProps;\r\n      return [objKeys(messages).map(priority => {\r\n        const {norender, texts, className = {}, ...rest} = messages[priority];\r\n        const children: any[] = [];\r\n        objKeys(texts).forEach((key: string) =>\r\n          toArray(texts[key]).forEach((v, i, arr) =>\r\n            (isString(v) && isString(children[children.length - 1])) ? children.push(v, {_$widget: 'br'}) : children.push(v)));\r\n        if (norender || !children.length) return null;\r\n        return {children, ...restSP, className: {['priority_' + priority]: true, ...cnSP, ...className}, ...rest}\r\n      })]\r\n    },\r\n    getArrayStart: function () {return [arrayStart(this.schemaPart)]},\r\n    getProp: function (key: string) {return [getIn(this, normalizePath(key))]},\r\n    arrayOfEnum: function (enumVals: any[], enumExten: any = {}, staticProps: any = {}, name?: true | string) {\r\n      return [enumVals.map(val => {\r\n        let extenProps = getExten(enumExten, val);\r\n        return {value: val, key: val, children: [extenProps.label || val], name: name && (this.name + (name === true ? '' : name)), ...extenProps, ...staticProps}\r\n      })]\r\n    },\r\n    enumInputs: function (enumVals: any[] = [], enumExten: any = {}, containerProps: any = {}, inputProps: any = {}, labelProps: any = {}, name?: true | string) {\r\n      // inputProps = this.wrapFns(inputProps);\r\n      return [enumVals.map(val => {\r\n        let extenProps = getExten(enumExten, val);\r\n        return {\r\n          key: val,\r\n          ...containerProps,\r\n          children: [\r\n            {value: val, name: name && (this.props.name + (name === true ? '' : name)), ...merge(inputProps, extenProps)},\r\n            {...labelProps, children: [extenProps.label || val]}\r\n          ]\r\n        }\r\n      })]\r\n    },\r\n    enumInputProps: function (enumVals: any[] = [], ...rest: any[]) {\r\n      let props: any = {};\r\n      for (let i = 0; i < rest.length; i += 2) props[rest[i]] = rest[i + 1];\r\n      return [enumVals.map(val => {return {'children': {'0': props}}})]\r\n    },\r\n    enumInputValue: function (enumVals: any[] = [], value: any, property = 'checked') {\r\n      value = toArray(value);\r\n      return [enumVals.map(val => {return {'children': {'0': {[property]: !!~value.indexOf(val)}}}})]\r\n    },\r\n\r\n    eventValue: (event: any, ...args: any[]) => [event.target.value, ...args],\r\n    eventChecked: (event: any, ...args: any[]) => [event.target.checked, ...args],\r\n    eventMultiple: (event: any, ...args: any[]) =>\r\n      [Array.from(event.target.options).filter((o: any) => o.selected).map((v: any) => v.value), ...args],\r\n    parseNumber: (value: any, int: boolean = false, empty: number | null = null, ...rest: any[]) =>\r\n      [value === '' ? empty : (int ? parseInt : parseFloat)(value), ...rest],\r\n\r\n    setValue: function (value: any, opts: any = {}) {this.api.setValue(value, opts)},\r\n    arrayAdd: function (path: any, value: number = 1, opts: any = {}) {\r\n      this.api.arrayAdd(path, value, opts)\r\n    },\r\n    arrayItemOps: function (path: any, key: any, opts: any = {}) {this.api.arrayItemOps(path, key, opts)},\r\n    focus: function (value: any) {\r\n      this.api.set('/@/active', this.path, {noValidation: true})\r\n      //console.log('focus ', this.path);\r\n    },\r\n    blur: function () {\r\n      this.api.set('./', -1, {[SymData]: ['status', 'untouched'], noValidation: true, macros: 'setStatus'});\r\n      this.api.set('/@/active', undefined, {noValidation: true});\r\n      this._updateCachedValue(true);\r\n      // console.log('blur ', this.path);\r\n      return [!this.liveValidate ? this.api.validate('./',) : null]; // {execute: true}\r\n\r\n    },\r\n    updCached: function () {\r\n      this._forceCacheUpdate = true;\r\n      //this._updateCachedValue(true);\r\n    },\r\n    eventCheckboxes: function (event: any) {\r\n      const selected = (this.getData().value || []).slice();\r\n      const value = event.target.value;\r\n      const at = selected.indexOf(value);\r\n      const updated = selected.slice();\r\n      if (at == -1) updated.push(value); else updated.splice(at, 1);\r\n      const all = this.getData().fData.enum;\r\n      updated.sort((a: any, b: any) => all.indexOf(a) > all.indexOf(b));\r\n      return [updated]\r\n    },\r\n    radioClear: function (value: any, nullValue = null) {\r\n      if (this.api.getValue() === value) this.api.setValue(nullValue);\r\n    }\r\n  },\r\n  parts: {\r\n    RadioSelector: {\r\n      _$widget: '^/widgets/Input',\r\n      _$cx: '^/_$cx',\r\n      _$useTag: 'div',\r\n      type: 'notInput',\r\n      children: [],\r\n      $_maps: {\r\n        value: '@/selector/value',\r\n        children: [\r\n          {\r\n            $: '^/fn/enumInputs',\r\n            args: [\r\n              '@/selector/enum',\r\n              '@/selector/enumExten',\r\n              {_$useTag: 'label', _$cx: '^/_$cx'},\r\n              {\r\n                _$widget: 'input',\r\n                type: 'radio',\r\n                onChange: {$: '^/fn/eventValue|setValue|updCached', args: ['${value}', {path: './@/selector/value'}]},\r\n                onBlur: {$: '^/fn/blur'},\r\n                onFocus: {$: '^/fn/focus'},\r\n              },\r\n              {_$useTag: 'span', _$cx: '^/_$cx',},\r\n              true\r\n            ],\r\n            replace: false,\r\n          },\r\n          {$: '^/fn/enumInputValue', args: ['@/selector/enum', '@/selector/value'], replace: false},\r\n          {$: '^/fn/enumInputProps', args: ['@/selector/enum', 'readOnly', '@/params/readonly', 'disabled', '@/params/disabled'], replace: false}\r\n        ]\r\n      }\r\n    },\r\n    Autowidth: {\r\n      _$widget: '^/widgets/Autowidth',\r\n      addWidth: 35,\r\n      minWidth: 60,\r\n      $_maps: {\r\n        value: 'value',\r\n        placeholder: '@/params/placeholder',\r\n        'className/hidden': '@/params/hidden',\r\n        $FField: {$: '^/fn/getProp', args: [], update: 'build'},\r\n      }\r\n    },\r\n    Button: {\r\n      _$widget: '^/widgets/Generic',\r\n      _$cx: '^/_$cx',\r\n      _$useTag: 'button',\r\n      type: 'button',\r\n      $_maps: {\r\n        'className/button-viewer': '@/params/viewer',\r\n        disabled: '@/params/disabled',\r\n      }\r\n    },\r\n    Submit: {\r\n      $_ref: '^/parts/Button',\r\n      type: 'submit',\r\n      children: ['Submit']\r\n      // $_maps: {disabled: {$: '^/fn/not', args: '@/status/valid'},}\r\n    },\r\n    Reset: {\r\n      $_ref: '^/parts/Button',\r\n      children: ['Reset'],\r\n      onClick: {$: '^/fn/api', args: ['reset']},\r\n      $_maps: {\r\n        disabled: '@/status/pristine',\r\n      }\r\n    },\r\n    ArrayAddButton: {\r\n      $_ref: '^/parts/Button',\r\n      children: ['+'],\r\n      onClick: {$: '^/fn/arrayAdd', args: ['./']},\r\n      $_maps: {\r\n        'className/hidden': {$: '^/fn/equal | ^/fn/not', args: ['@/fData/type', 'array']},\r\n        'disabled': {$: '^/fn/equal', args: [true, {$: '^/fn/not', args: '@/fData/canAdd'}, '@params/disabled']}\r\n      }\r\n    },\r\n    ArrayDelButton: {\r\n      $_ref: '^/parts/Button',\r\n      children: ['-'],\r\n      onClick: {$: '^/fn/arrayAdd', args: ['./', -1]},\r\n      $_maps: {\r\n        'className/hidden': {$: '^/fn/equal | ^/fn/not', args: ['@/fData/type', 'array']},\r\n        'disabled': {$: '^/fn/equal', args: [true, {$: '^/fn/not', args: '@/length'}, '@params/disabled']},\r\n      },\r\n    },\r\n    ArrayEmpty: {\r\n      children: '(array is empty)',\r\n      _$useTag: 'span',\r\n      $_maps: {'className/hidden': {$: '^/fn/equal | ^/fn/not', args: ['@/length', 0]}}\r\n    },\r\n    ArrayItemMenu: {\r\n      _$widget: '^/widgets/ItemMenu',\r\n      _$cx: '^/_$cx',\r\n      buttons: ['first', 'last', 'up', 'down', 'del'],\r\n      onClick: {$: '^/fn/arrayItemOps', args: ['./', '${value}']},\r\n      buttonsProps: {\r\n        first: {disabledCheck: 'canUp'},\r\n        last: {disabledCheck: 'canDown'},\r\n        up: {disabledCheck: 'canUp'},\r\n        down: {disabledCheck: 'canDown'},\r\n        del: {disabledCheck: 'canDel'},\r\n      },\r\n      $_maps: {arrayItem: '@/arrayItem', 'className/button-viewer': '@/params/viewer', disabled: '@params/disabled'},\r\n    },\r\n    expander: {_$widget: 'div', className: {expand: true}}\r\n  },\r\n  // presetMap: {\r\n  //   boolean: ['select', 'radio'],\r\n  //   string: ['select', 'password', 'email', 'hostname', 'ipv4', 'ipv6', 'uri', 'data-url', 'radio', 'textarea', 'hidden', 'date', 'datetime', 'date-time', 'color', 'file'],\r\n  //   number: ['select', 'updown', 'range', 'radio'],\r\n  //   integer: ['select', 'updown', 'range', 'radio'],\r\n  //   array: ['select', 'checkboxes', 'files'],\r\n  // },\r\n  _$cx: classNames\r\n};\r\n\r\n\r\nexport {fformObjects, formReducer, FForm, FFormStateAPI, fformCores, classNames};\r\n\r\nexport {extractMaps, normalizeMaps, updateProps}\r\n//module.exports = process.env.NODE_ENV === 'test' ? merge(module.exports, {}) : module.exports;\r\n\r\n\r\n//     \"checkboxSelect\": {\r\n//       \"type\": \"array\",\r\n//       \"ff_managed\": true,\r\n//       \"ff_presets\": \"checkboxes\"\r\n//     },","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/** @license React v16.6.1\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.concurrent_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112,z=n?Symbol.for(\"react.suspense\"):60113,A=n?Symbol.for(\"react.memo\"):\n60115,B=n?Symbol.for(\"react.lazy\"):60116,C=\"function\"===typeof Symbol&&Symbol.iterator;function aa(a,b,e,c,d,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var l=[e,c,d,g,h,f],m=0;a=Error(b.replace(/%s/g,function(){return l[m++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},F={};\nfunction G(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}G.prototype.isReactComponent={};G.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};G.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function H(){}H.prototype=G.prototype;function I(a,b,e){this.props=a;this.context=b;this.refs=F;this.updater=e||E}var J=I.prototype=new H;\nJ.constructor=I;k(J,G.prototype);J.isPureReactComponent=!0;var K={current:null,currentDispatcher:null},L=Object.prototype.hasOwnProperty,M={key:!0,ref:!0,__self:!0,__source:!0};\nfunction N(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:d,_owner:K.current}}\nfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,e,c){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+U(d,h);g+=T(d,f,e,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,h++),g+=T(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function V(a,b,e){return null==a?0:T(a,\"\",b,e)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\nfunction da(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,function(a){return a}):null!=a&&(O(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+e)),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(P,\"$&/\")+\"/\");b=R(b,g,c,d);V(a,da,b);S(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=R(null,null,b,e);V(a,ca,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];W(a,b,null,function(a){return a});return b},only:function(a){O(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:G,PureComponent:I,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:y,render:a}},lazy:function(a){return{$$typeof:B,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:A,type:a,compare:void 0===b?null:b}},Fragment:r,StrictMode:t,Suspense:z,createElement:N,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;\nif(null!=b){void 0!==b.ref&&(h=b.ref,f=K.current);void 0!==b.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)L.call(b,c)&&!M.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:p,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=N.bind(null,a);b.type=a;return b},isValidElement:O,version:\"16.6.3\",\n__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:K,assign:k}};X.unstable_ConcurrentMode=x;X.unstable_Profiler=u;var Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n"],"sourceRoot":""}